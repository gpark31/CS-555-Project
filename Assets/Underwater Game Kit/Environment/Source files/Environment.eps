%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Environment.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Olga Bikmullina
%%CreationDate: 10/22/2018
%%BoundingBox: 0 0 1570 969
%%HiResBoundingBox: 0 0 1569.7665 968.9640
%%CropBox: 0 0 1569.7665 968.9640
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.0 x243 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-10-22T22:17:36+03:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4ql3mDVhpWkzXgUSTj&#xA;jFawn/dlxMwjhj2/mkYDIZJ8MbYyNBK9L1CaPzld6NNK0zQ6XZSCV6Au6SzrK+3jzSvhlUJ/vDH+&#xA;iP0sQfVXkyXMhsdirsVdirsVdirjWhpufDFUPp9/b39qtxATxJZHRtnSRCVeNx2ZWBBGRjIEWEA2&#xA;iMklIBq5u/Op0mFiYNMszcXZHT17hgsKH/ViDsR/lDwyjxLycPcPvYcVyruT/L2bsVdirsVdirsV&#xA;Qo1CL9JNp7jhMYvXhqdpIweL8fdGI5f6y+OR4t6Re9IrJJQ819bxXdvaMa3FzzMaDc8IxV3P+SCV&#xA;WviwyJkAaRaIySXYq7FXYq7FXYq7FXYq7FXYq7FWJ+Yw+o+cvL2mA/6NZO+p3afzFY5Etqf6sgJP&#xA;0Zh5Z3mjD3y+WwaZm5iPxSa/1CPTPzJur6Q8Ikjt0uWO1IJYyrMSf2VdFc/6uazU6nwdbG/plGnG&#xA;yZODML5EM9vr6Czt/XlPwlkjjUUq8kjBI0WvdmYDN7KQAtziaX3d1Ba273E7cY0pU9ySaBQO5Ymg&#xA;Hc4SaFqTSrhS7FXYq7FXYqxLUbh/Lvm+2uwD+iPMLi3vQPsxXyLSGb5Sxrwf/VB8cxZy8OYP8M9v&#xA;j0+bVI8MvIsmur62teHrvwEhYKf9RGkY/IKhzJMgObYSwj8s7lry+1TUp9rnVEiu+LD4grySsE/5&#xA;5o8afRmj7J1Hi5csvMfpcLSZOKUiz7N65zsVdirsVdirsVYv57e4t9JtvMOnj1bjRpku+KUPq2r/&#xA;AAXMdelGiYt81BzG1JqPGP4d/h1a8hoX3MhF/ZmwGoeqoszF6/rk/D6XHnzr4cd8v4hV9Gd7WxLy&#xA;NcXGtaxrHmS4LBJfSs9Pgbb0YEHrUp15SCVGevfbtmDoc3jGWTpfCPcGjBPjJl8GaZsHIdirsVdi&#xA;rsVdirsVdirsVdiqTXXmKOy8yW2j3qiOPUYmfTrjs0sRpLC3g1GVlPfcdRvVLKBMRPXkwMqNHqx+&#xA;21Pj+ZN5zIKF1sFfsAbWKcb/APGSq/M5qBnA7Q4T/Mr9Li8f+EV5KXnnTzFr8V+FrHeWqwOabBrd&#xA;2YV92Wf/AIXMH2jwn0z+DR2jDlJAeW7u6u/MWl6PqFwBa6M8slnG5+OaUQ0SNq/aaBJTx+W+61zI&#xA;7M1k8so4584gn3932W2afLKREZdEx88a1JJ5t8uaBCf3C3UF9qTewl42qf7KVS3+xGbLVagDLDH3&#xA;m3Iy5PVGLPM2DkOxV2KuxVj3nHXpdBTTdSJP1L62INRXagt5Y3rJv/vt1VvlUd8x9Rm8MCR5XR+L&#xA;Xknw0VXzpbQXXlm8EvxIirKCN/sMDt/rCo+RyrtGHFgn7r+W7HUC8ZYUus32uQ3zO59TTNB1C1kq&#xA;KFrwlFaXbsyIrDw5HMDDrvGgT/NxX8T/AGNEM3GCe6Kr5au10/zBYOfht5w1k5/ZHq8TGfn6kaoP&#xA;9bNL2Dn4M9H+Mfa4WhnU673pmds7pBadqcV7PqEcdCLG5+rMR/MIY5TX5erTIRnZPkUA2jcml2Ko&#xA;RtSgGrR6Z1neB7k79ER1Tp7l8jxeqkXvTWt3j2WjX15H/eW9vLKg8WRCwH3jI5Z8EDLuCJmgSlum&#xA;wpN5DtYZ90k0qNJd+zW4Db5CFSxDuMf0MRvD4MKm1eS58kR6KCeb3ptLnfcWwUXbLT+Xi6Q/I5zp&#xA;1xGgH876fx8HXnPWDz5Mq/L10bTb5VFGS8ZX6bn0IiP+FIzYdhV+WHvLkaH+7T/VdTtNLsJr67Yr&#xA;BCKtxFWYk0VVHdmYgKO5zbzmIiy5ZNC0RE0jRI0i8JCoLoDyCkjcV2rTJBK7FXYq7FXYq7FXYq7F&#xA;XYqxP8ytNiu9Ehmkqv1W5jb1FPF19WsSlW6giR0YEdwM1XbIPgGQ5wILi6weix0Yfol9+kBrUV+p&#xA;GsmaNo5ol+L1UgjCTx7HiWeP1PY7ds5zLqxOfiAesgV7w4XjRO9eo8mVXerwaz5Mvrm7Ah1HSo2m&#xA;nUD7M0KFldAa/BKtQPYlftDOgOXHrNKSdtt/IhzDKOXEfxRYpotjb3DR21/MY7iVHuGuVPFvrBdX&#xA;Z1b9k825CnelM5TDk4shN8JuwXW4pCUjZrzSHXbzUre81PUbuUT6mklte21yAFWSLTjG3EAbBv3Z&#xA;ZgNviqPAZR1ssmeOQ9Nvj+1kcxlMSPR7Tpuv2Oo389pann9Xt7a6eQdON36hjX58YuX0jO1jkEjQ&#xA;7h9ruRIEplljJ2KuxVjf5gKjeX+DAEPcQjie45VI+7NX20a00vh97i6z+7LHNP1v6x5OttCklper&#xA;drpjN1PoQlZQ7V61tiiE/wAzZhHXCeiFn1S9P4+DUMwliF8zsofl/bwXklzGx/c6lbXRBNKlZ5FZ&#xA;R7n0z+GYfYleNPH04fu2adHXHKPSkVA5v9CfTFjaPUYlIYClY5o33cE/tI4+/MGEjD0AeuB+4ohL&#xA;08AHqiyWPzfZJ5UOvXY9P0kK3Fuu7fWVPpmFAdyWk+FPGoOdjj1cJYfF6U7GOUGHEkH5SSXjx+Yj&#xA;dyc55NUa4mp0Ek9vE7hf8kHYewzF7KznLjMz1kWrSz4ok+bPs2jlOxVgl1fCH810mYgRizh05ye3&#xA;rtLMP+Ck9Jc1OTU8OsjHvjX6XElkrMB3hPPPkxh8rXjAgcmgjNfCW4jjI+kNmR2lKtPM+TZqTWM+&#xA;5J31hX8o2ulo6/XL5m04KK/u4gaO5/1YGWh/mZc1uPXD8lHf1EcHx5fdu0QzXhHedmPDS+Pmo6cs&#xA;tUZC4f8Ayiqcvh8eKrmilgPhjHe3Gf8AchxDh5Qvr+hlnlCA6frGp6eX5RypDdRdiW+KKTb2CR5v&#xA;+w/QJY75G/n/AGObpY8FxSTXdY/TXnqy05JANM0i8hRvCW9qHb/kWvwD3LZPVarj1UMQ5A2fgjLl&#xA;vLGD0fN25rsVdirsVdirsVdirsVdirHvPsiJ5cZWNBLdWaGnWhuoi33ICc1/ahA08r/G7Rqa4Dbz&#xA;rXbq20nzJBeWb8bW5AtmcHo4HOIgn3Z1+kZxUgLIh/DuP0uonQkeDohdc1BobC4nt5amSMpdIDtJ&#xA;DXmwYeKleQ+kdzh0eecDKPSYpjiyEWO9NdTs5E0mz1ezPqy+r6ckO3xJIeNFPbcK2DFpuKI33ka+&#xA;PT8ebIYLgDfNKNUktdQ0tjHRpAOcKnY8qUI+TKSp9jlMAYS3aQCCyv8AJ12WyMc0nOWSxsijH7TL&#xA;EHT7kVkX7s6zsXNxzyXzsfZs7XRTsy+D0fN+57sVdirEfOl/anV9I0+feBDLe3NN6BEMMQYeDNKx&#xA;/wBjmj7bzxjGMJcpH7nD1eSIoS5ML082bazeakIfUt2laKGImg4x/CT7EstD4hRnJyygECriLNe9&#xA;1RmAeXp7lfyfHdR6Va39pxNxpaJygJpyKKUljqelVDLXMrRzljzHKP4ftB/Y3acESMx0TLVrlbTW&#xA;1v7B+Nrq0Qu7ZqADkaLMnE960Zq92zL7ZhwZRmhymGzVXCYnH+Jit/HK2tRCaZ2sAr3/ANSH2XvI&#xA;+EIlI7twZQo8c1sdTPwTjvbi+9xRklwcPm9D/K/TJbTQ7u6mZXm1K9nuGoKcQlIAnuB6JpnY9j4+&#xA;HTx893b6ONYwzDNo5TsVeb6/p8t3541C2WT0JJYLaaGXuOKuFZfdXj2zk+2Iy/NRMTRqx8HWamBO&#xA;UUmeuam2t+RNRLqF1DT2jbUbdd+ElpMkzle5Vlj5J7e9c2+bKNRpZVzrf3hyskuPGe9jSQvbgaw0&#xA;H1iyUGOcBqFR1WQf6pPxeI+QGcZiieGyLiPvdTjiasi4qtvBJ/h+LXUqWn1J1jlqQRAI/Qr9M0NR&#xA;88209MY6ET/i4uL9DkHGRhEut2mKatZ2Ot6RqSyE+rW01BmqTxnCqtK9/XVPow9l6mMc8aP1ij72&#xA;eHLHjBB3I3SXT7eOztfL920nK+uNSgkvakH95Pcj1G+kyHrlWkyCWphkv1SkWGOuOMr3Jeoa3qsW&#xA;l6bLeOObqOMEVaGSVtkTv1PU9hU9s6/U544cZnLkHaZMghEkofyot0PLlg93L611PELieWhALzky&#xA;tsem79O2HTEnHEnmRfzXGSYglNsuZuxV2KuxV2KuxV2KsQ/MiSljpcQI/eXwLL4qkEzf8S45pe3p&#xA;Vp67yHD1xrGw6DSrbW9dsdKnHKGQXHqsPtJW1lVXX/KVmBHvnPdi4ePNR5UXX6OHFNIIkuYzPZ3y&#xA;gXlnI9tdrTYvGaFgP5XFGHsco1OE4shiejXkhwyIVNNvJH0Q2MtWAWSCpPdCYiTT5ZTMVOx72J5o&#xA;zzA0aanZXCJxTVrKC8npsq3kqc5VA2+2tJPnyza9rwj4gkOZiCfi5WriOKx3Jl5NlvLO1S9hXi+m&#xA;hisFN57MSPEwXen+6SP9ZQTtTI6MzwZBl/hkN/d1+RXBEwPH0/FvWoJop4Y54XEkMqh43XcMrCoI&#xA;+YztAb3dwvwq7FXk3mfVFfWta1F2BS1P1eKp6Jap8S/8jTJnEdtZDk1PD3bOl1kuLJXcxq1upbTS&#xA;kDyERxRBpW27LVjXNbKPFJxiLKdW2m3/AJe0rTLpmcJrNsbi6jqaxzSH1HTwpxlUAeIObXtLRHDC&#xA;Eo/xRouXqMRgAR1Ck96JtCv0Dcf0TeW13AT1EV+5t5Ix7esBIffJYv3uilE88Z2WPqwkH+FAevNP&#xA;rNmHXkgST1CAKKFaMqT/AM9OIzUxxngkR0/s/S4ojsXrPkedJPL8cQNZLeWWOUdaEyGRa/NHU/Tn&#xA;b9k5RPTQroK+TutLK8YT/Ni5DsVYT+YVi8E9nrkQIWMfVLxl6hHasLn2WQlf9nmg7e0pnjGSPOP3&#xA;ODrsZMeIdGD6zd3NtEZLWbg2pAWN2OolgkqWB9wvLi3ap8c5vRauePiAO0gbdbhyyjfm1o2tXOnw&#xA;yaY7E2sgPokivw9137r+r5ZWZyo115rxyAIHVOtK1VLnyxrugtQJYW51HTh0rHE/qvH8klVaezAd&#xA;s6HQ5jn0s8UucYudgnx4jE9AlV1cRTWcdSObSwhV6nmJVI2HvnPaOJGePvdfhHrHvXXKXN1JaWlj&#xA;F694s9tcGIGgWOKZXYux2UEIQMOhPDlEquiywA8YLIZjq/mTWxZXDH90xEscJ/dWsZ+0xbesjL8K&#xA;k7k9AF5ZuRLNr8wEhw4onf8At6lyzx5p0doh6MqqihVAVVFFUbAAdhnWu1bxV2KuxV2KuxV2KuxV&#xA;hf5rRsugWt+NksbuN5n7rHKrw1+QeRSfbNT2zhM8BrobcXWQuDFPJeo21l5rspLlgouhJaLI3QSS&#xA;0ZKn/KaPiPc5o+w8gjno9Q4OikBNX/MWyitvNr3CAKL21ikl95ImeMsf9gEH0Zf2/jAyRl3hnr4+&#xA;oFhlxc/U9DkuCKP6ZcL39SXcD/g2zSxjxTpwwLKfNp8995fl1F2Ii0hrSJG2q8xMduFqKbR270O2&#xA;5I8Dmx8E5ceTPLlsI/Y5HAZxlM/BZJMF0jRmiJR2OqB2UkVT6zGtD4jkrfjjqttLi79/kuQ1ij8X&#xA;rHk6GWHyppEctRItpDUGtQOAIXfwG2dbpQRiiD/NDtcQqI9ycZe2OxV4P5ht5Dq3mDT3JE4u7qvL&#xA;rxumaaM/LhKM4ftKBhqZE99uk1IrIUutY/0ppllb7j6+1tbuOhHrSJE4/wCGIyjT47ziP9Jhjjcw&#xA;PN6v+Z6xjRbJQAGW6HEDsohkBp7bjOk7e/uB/W/QXY6/6B73nNtEbqy8y26tQJp9q9a/7s+tho1p&#xA;4kptmq7Oj+4yk8qcXTj0STzQLFJPLvmjUJB8Npaj6u56LPADdfT8SwmmXdl6cS0+Qy5EV8melx3j&#xA;kSynyPrS6hrOqLFG0cTQ20rIaUEpMiMRT+YKPuzL7Dy8XH3WG/SZOIypmeb9zXYqp3NtBdW8ttcR&#xA;iWCZSksbCqsrChB+YwSiCKKCLeF+dNHk0XWYNPMjSW8FzFPbsxJYwzrJFHy/ylclK96V75xWv0Yw&#xA;ZZAfTIbOmz4uCRA5EOtdKlv57qdSeGmW3rgA7F5JkjFflEJcr0un48WSX80McWPijI9wVNLuXg16&#xA;2VTT6zbX8Em9Pg+pyTf8ShXLux5EZSO+J+5npD6vgg7VfWjtoZNmePm29CpVNnFf5JCrH2zDwSEJ&#xA;GZ/huvfyDTA0Se5N/J2n32razHDFNJbLcq1zqU0TFHEOwEasOhJKovsCRuMy+y9J4uWv4Y/j7W7S&#xA;4zKXkHsVjYWdjbLbWcKQQJ0jQUFT1J8Se5O5zs4QERQFB3AAGwV8kl2KuxV2KuxV2KuxV2KqN7Z2&#xA;17ZzWd1GJba4Ropom6MjijA/RglEEUUEW+fPM2j3nlrUJfL2qSN9RuQTouqEkclUgorsOkkRpv8A&#xA;LxGcfrtFLBk4o8nUZ8JhKwqap5ovfNFpbTOK6gbH6nOncy2wmlupAB0/dDll2qmdRlgO6Nn8fBnl&#xA;l4ko+5L7hJ9UiintyosdNjtr+9J+yRNOkUafOjM/0Zg6fTExnL+aGjHjNSPcz/VxLYfl35e0i3Tn&#xA;qutSRziA9Wlm/emvsk0sYPgPlm91GLh00MUec6/WXOyQrGIDqhrDQ4dT8w2uhWjerp+mwJbzz9A8&#xA;ULFriXb9qeaRgKHf7XbMTwBn1AgP7vFz/HvauDxMgiPpi9fAAAAFAOgzp3ZuxV2KvLfze0h7C7tv&#xA;NUCE25C2esAdkJ/cT/7BmKn2IzRdtaPjjxjmHB1mGxYYHYPcwzXghTlDHciSxlP2DNwS54V6fabk&#xA;B3FfDNBESgIZe4/c4ABFTej/AJj6zBdaP5fvrdq2OoyEIx/mkh9RAfA/Awp45vu2zx4IyHK7+xz9&#xA;bvAEMD0+/WHR9Q4hpbnWL9aQxjkz29jWO3QDryefmw/1TXNbG46cY4/Xk+4ftcYbY+Ec5JjpmvrH&#xA;5Hk0zkBc6lci7vHrskHCNyp8PsIgr1Xl4Yx1Xh6WUBzlKvhQtRl4cRj3l6V+X+gy6bpb3VyhjvL8&#xA;q7owoyRID6SMPH4ix7jlTtm97K0hw4t/qluXO0uLgjvzLKM2bkuxV2KvIfzahE3myKFm4c9LBRz0&#xA;DJcOQ3+xJBzmu3jUol1uu5hCeRb5dQg1OK3AaXVdIm+rKf8Af0PRPnWX/hcp7Kj/AHmI8zFhpR9U&#xA;fJi81762paVLatWO5huxy6fBNB6L/I+nK1PfNbppnFxHrVfPZx8cuGynXlzS7jX7rUDAxFrBau8s&#xA;q9TGA3BFPYzup3H7C+NMyez9B4srP0x3+PQNmnwcR35BnX5TW0ZstQ1AABpZIrcf6kUYkFPpnObj&#xA;sHHWKR75fc5ehj6SfNnubxznYq7FXYq7FXYq7FXYq7FWFeffO/6FmtbWDk6SCSS9eD4pEWOlIxQN&#xA;xL1O53FNutRRPUQiasW2RwyIsA0xODW/LuuaVJP5oka8tYuU1tbu7yxQxhTsGWjO4FfjffwoNsEg&#xA;JbSFtZiDzSDyX5a0ZNdn1WG8k0m1eOSO0tm9OVxHKCjBnlWRASmx7+5yiGmhGXEGsYIg2F/k7y7p&#xA;thq+taJeapy0fUIVWMMFQzwxMw4NI32OJcH4aE7UPUZHFpYw4h0kiGARvzZBEt/feaLz6ncDUJdI&#xA;036poMhpHFbyzK6mWZx9qRFIC8E3XrT7RsliuXF3RofrTLHvfkzL8vLDS9P0t4Iio1QsBqUZPxo6&#xA;iixjxRF+yRsdz1Jx0OmjhgI/xdfejDh4I0yvM1tdiq2WWKKMySusca7s7EKB8ycBIAspAJ5PG9e/&#xA;MBtXM+mXHqQpevLGiMOESWworKVYcZZJFPVqgGpWlMxvGjkBAIIZzwkbSCG15fKdroUOiaCs0Vzc&#xA;SLNFWSTjG0fEGZ/ULqWCqFFBUj4fs1yuenxygYV6S0HDEjhrZdrWmNP5Ej0+LWvVuYpBc21q0aKs&#xA;c/MyHgQvqpuzCrMRQn2yB0sfB8K9gxOAcHC15e0jQdI8qfpay1RTrAgmPqXAVgskoIkX0hVkoajm&#xA;pr702w4tJjx7geqqtYYIx5c0X5H0G3sIrTWdfgMVgBE8QJUhZKALLcqDsiUUIBWnVum2Hoeyxjnx&#xA;5DZ6dzRh0nCblzexI6OoZGDKejA1B+7N4C5jeKuxVjPnvzQ+haWrWxBvJ5ViHEB3jRgxaX096040&#xA;FRSpFa9Mpy54w5kBshilLkLee2Wr+X/Mmqm91gyvb24khtYWkdyvJh6hlK0c8+IIT7C9h1rVkxwy&#xA;UZASap4gTuEHoo0w+aVvdDuW0nSoHb0HIEtX9Joi0auHVEZWoA1R3oO9Q0uMZBkG0mHgR4uIc0uu&#xA;/J2kp5ytoW1Zzocskrl+KLSWUBni5KFThJx7LTt3yo9n4jMy+xgdLHitnmgXmkeXdRk0LSo/0haa&#xA;inqBI3UvE6IsQVpSQPR9Ne1WU1612zMGKGMERGxbYYxEUE1/LeMaTZTaJfyJHqiyCb0Qaq8ZjSNX&#xA;iYgcxWPfuD1HStWg0/g4+EneywwYTCNM0zObXYq7FXYq7FXYq7FXYq7FWEy/ldYMzML6Ys1TVwpJ&#xA;Y9yfnmoPZEf5xdiO0ZdwYxqX5R6isTTqkN1ITR4oWZGcHarV4K3uDlX5PUY4+mV+X9rZ+YwTl6gg&#xA;4/yt852/xWJSKNhy9CV1ehPYGv66/PMnD+YAqUb+Lj5RhJ9Jr4NXH5S+ZqR3M5+tXb1FYZRH6Vdu&#xA;jELv41P0ZHKNTsYgV3frv9DLH4HIko7Sfyp8yQXbNFd/o9XNZpS/rlu1VUHY09wMnghqL9dV+O5h&#xA;lOGvTbK9B/LPS9MuVvbi6nvb8OH+sE+n9k1UcVPb55f+UsiUzZHLoPx8Wvx6BERQPxZjmW47sVSr&#xA;zF5eg1y1jt5ppIVjfmPTpuaU3B+eY2q0wzRomm/BnOM2AxDU/wAp1kiVLW6SUE/vkuV+EjalOIb8&#xA;c10uyiKMJb/jucyPaAO0hsxu6/KPWBdNDDByKisd4k3wgUrRfUNR/q8afrwDFq4y52PsUz05j3fe&#xA;uT8sPPcpW3luYY4GHxS1HIDwNCxr9+Zn74j6QD79nF4cX8417kOv5Ra4C8Agk9FDXj9ZHByW5cgS&#xA;3LrvmLWs3G32OT/g3P8AWyGw/KnWZ7VIdU1l47cH/eWFQxK9w0lVFSO6jM2GPKY7kRPz/H2uLKWM&#xA;HYEj5fj7Gc6B5c03QrdrewDiN6VDsW+yKCg2A+gZbg08cd1e7DLmM6vommXtTsVYlqv5d2Oo6hNe&#xA;veTK87F3WisB7D2GazN2ZGcjKzu52PXShEChsxjU/wAo7x2mlhkhm4V9H4njmZR0UsoFD/sqZjjQ&#xA;Zsd8Etvx8G46vFOuOKUw/lX5qTjLYotmW2aF3Vk278Qdq/5jLdPHUgeoWPfu15vAP0mvg3P+U/mu&#xA;4g+sX7LPIjAx2sMnpstN+VQeJpT+b6MnlGoq4gD7T+phiGEGpElVsvyp8zJdJPC/1SYheU8k3qAK&#xA;N+JUE9K9u/fI4o6q/VVfjuZZPy9bXbKtP/KmxS6N1quoT6jP+waCJVr9qgBbr9+ZM9Jx7TO3lt+t&#xA;ohn4PpG/nuzlECIqLWigAVJJoNtydzmWBTQS3hQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;hLnVLS2vrOxkY/Wb5nECAV2iQu7H2AFPmRkJZAJCJ5yYmQBA70Xk2TsVdirsVdirsVdirsVQ9nf2&#xA;l4Jvq8nM28rwTLQgrJGaMpB+8eI3yMZg8uiAQURkkuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrZJI4&#xA;0aSRgiKKs7EAADuScSVXdcVdirsVdirzvzb5tXUJU0qD69YWwaX69qEPJTD6Mvpc625kegKueJpv&#xA;xrtXNJqteJTGOJMfV6j/AGOFlz2eEbd70TN25qG1HUbXT7b6zdNxi5xxAgVJaVxGgAH+UwyM5iIs&#xA;oJAUk17QnvvqCajatfVK/VBNGZqr1HphuVR8ss4TV0z4TV1swzW9UaHzXcaiaMdLlgjjAqWMPp1n&#xA;Cp3b9+/3DOV1ut4NaCeUKHz5/f8AY6vNmrNZ6V9r0BHR0V0YMjAFWBqCDuCCM6h2TeKuBBJANSNj&#xA;7HrirsVdirRZRSpAqaCvjiq2eeC3heaeRYoYwWklchVVR1JY7AYgLSH0/V9J1EO2n3sF4sZpIbeV&#xA;JQpPY8CaYTEjmkxI5sYub2PSPOF7dGQiC49D65HTYIycBJXanpsAx9mb2zRZNSMOson0zEb9/K/u&#xA;cKWTgy++mZZvHMdirsVdirsVUby+s7KH17uZLeDkqmWRgqAsaKCx2FTtkZSERZQTSlf6vpOnIj6h&#xA;ewWaSV9NriVIg1OtC5FcmIk8mQiTyREFxBcQpPbyLNDIOUcsbBlYHuGFQcBCGN+a9an03VtMlikp&#xA;bwrJLqMddvQZo4+TL1qOTMvuvzzW67WeDkgOhO/u5fe4+bLwSj9qfTahaw31vZStxmu1kMFejGKh&#xA;Za/zUatPAHwzYGYBAPVvJF0ickl2KuxVI/PEWny+V75NQR3tiIzxjX1GMglQxfASoI9TjWpAp3GY&#xA;usETilxcqaswHAbSDyT5su2Nrol1pzWzi4mtkBfeONI2mTilKmNAvp8tv2fHMDs7XiVYjvIXv9zR&#xA;p89+k82d5uXMdiqB1htVS3SXTVWSWN+UsDAVkQI3wISVUNz4nc9NtuuUajxOH93XF5sJ8Venm898&#xA;sXF5qevvqTafBfzTvbys8YdIIFZwHlCtyT1PTCuOTlqqada5oOzsss2aWQ47JI36Rp1+mkZzMuH9&#xA;j1DOmdmxD8wnaWOzsUlMErLcXcMoFaSQRhFH3z1+jNL21n4IR/rX/pd3E1c6A+fyeOw+SNETTtP8&#xA;xWN3c/p+7mhWO2aVSiTyOFWi8RJVXIIq3XOrGW/6tO9uyf5tMr/M57nTtS1O6hFJLaW3v4U3+ONk&#xA;WKWvsTzzzztbD/hRvlMfj7Q8rqofvfem+m/m15Z0Dy5b/pOSRq0NlFEoZ2gccl3cog4mqgcugHvn&#xA;QdhSnmw8J+qBr9TsdBxZIV/N2Zx5V81aR5n0hNU0p2e3ZjGyuAGR1oSrcSy1oR0JzazgYmi5M4GJ&#xA;ooDTL+Qee9YsiS0ckMTqDWitCkdQP9YT/hmsxZ/8Jnj/AKILixn+8MfIMmzYOQ7FWP8Ancyro0ck&#xA;chhMdzA3qgV4HmArfQ5Hb2zX9qZJQwGUTRBH3hx9TIiFjyYt531S11/yqun3sjWcq3MH6SgRijNC&#xA;7emJIieq+pIjDw2r75HZXaEM/Ladcvx0cjQ5hOX9Kko/LTyhpflvz69potzPcWh06Z7p5nWQcjLE&#xA;FUcFRPfpXrm0zzMob97mZvo373a1rqz6xNchgYdVuntYwNw0KRMikeziIN9Oeb9p5zkzzkOUdnl9&#xA;RkMshITaD87vJ+n/AFHSr+aebUFjiiu5olVkWagVuVXVya7/AAqc7zR4p5MMZ98Qfsd9hxSlAS7w&#xA;zfUPMemWUcbcmuZJY/WihgAd2jO/PcqqrTuzAHtmLqtZjwD1nfu6tOTLGHNry/q17qtq13NZfU7Z&#xA;z/ohMnN5U/34V4rxU/s7mvXpSs9PmOSPERwg8r5pxzMhdUmmXs3YqpXdpb3lrLa3CCSCZSkiHuCK&#xA;dsjOAkCDyKCARReFar5N0TXddfSdZu7qCPTISkUkcqorNFPKjcVdZEVSoDcQNq5T2LOWPHPHfEYT&#xA;I37qFM9BYxmI3MZfZ0egflDapYeU7iNXP1CK9uPqjyN0ijCoxYn/AIsRyffM/Un1fBt1O0vgxfXf&#xA;NNvd6vqRmFVe2MknIVMNshpClKV5P8TFfEn2zz/WZp6rNcdwSIxeeyzllnt12Crc/ml5V8z2UFhY&#xA;TzxatYyQzwSMqDm6H02ZCryH4Qxf4h2zre19Nkhp+MfVCi7bWYZRx8XWO70/RNSbUdNiuZF9OfdL&#xA;iLpxlQ8XFDU0qKivamWaXOMuMT7/AL+qcc+KIKOzIZuxVC6pJNHpt08FsL2ZYnMdoSAJTxNEJNR8&#xA;XTITJETQvyRLk8vt9VuNP195tHsIbRiPq0tsfWuGied1ZliiKwSKTwX4CoA+WcsNX4eoPh46lIVw&#xA;+f2OqGXhyemO5/Hk9M0M6sdMiOq8frpLl+IA+DmfT5BSyh+HHlxJFa0zp8PHwDj+p2kLrfmjstZJ&#xA;L5msdZuIo5dKufSuIlkUW5cxLIz8SG5CvxoEPEMCprv4jF1ePLKP7uXDJqyxkR6TRYz+X9nrRVTb&#xA;z+hosLIRUxl5GWNVZAir0IpyZmqP2R3zUdiwzGPESBjs7d7h6GM6u/Sz2cSmGQRGkpU+mT0DU2/H&#xA;OhDsXz/pej2um6lYata6hdy3WsI5uUuGBCmWJ2dNwGPxr3J3HjvlHtAf8Dnt9NV8wPubu0f7iXlV&#xA;fP8AU7RdZuEGmTPAhkttRmla0lNE9SN5JGRWAqKNH8J36A07ZEarwdBHJ9VRiPhYH3IObg0glz2A&#xA;+2mYfmPcafrHlu31yA+nHcxy2FwklA6s6lkVuv2GVqU68gRtmo7Qx/mYQy4gZG+nP8B1eeHiiMoC&#xA;2CeTLSK50qxvL20hvbK2KW15b3So0Y9WSVIXIcMBxaMjp+1mX2CJRyZYnbl893K7MBEpxO363snk&#xA;C3sNP8qG7VY7WCaWe6mVaJDGqMYxxGwVVjiXNzqJb79HK1EvV7kv8s3H17zN9e4gSXRubjc/GIB6&#xA;ccYdexC8M5bs/N42slMcqPy2AdTglx5TL3/oZ1nSuxdirDvzV046j5bhspJ5LaynvIUvpYachG3I&#xA;J1Df7uMfbLsH1N2D6nj9zptxpNpe2enyte6fZgSOLmnrV5MfXVgF+xxWq03X366XtOUY67DLlOVf&#xA;fVH7XH1ZEdTjP8Rr72f+S9SiF95gIkZdUuLRTaE0qfSErkKdvi+ME+NPbNtq84EvD/i4bcnWZACI&#xA;dat5297GNYsTLIEtdNtfWQdAXkUogHyAzgIabJLHKUYki9zXJ5uOKRiSASGT6poOn6EZLHUbKCS7&#xA;MFrcQag0aSXEPrHjN6ZYcqrMrkAHpTPQsEvCwAk7Qjv/AJoeownhxA/zB9wTby1cxa/rB08RL9Xi&#xA;mEdzIlSCsUdWhFd/TUKsQPX7s4fTxlq9UJT6+r4dA87jvLkuXves9M7N27sVdiryT81PL1trPmT/&#xA;AE6+urdbCyins4oCBG3OV1dWqrCvJFr7EV7UzNPKo7d7maflt3satLy4drC6mdmnuIbpWdjVnVzH&#xA;8TEg1JG5zQ9lZL1moHS/uJDh6GV6jKOl/cWU+W9Xmj/LK8thuY7hYhTp6d4UnmBr4mWQfdlOt1kp&#xA;YMx6ico/C6+5xtTmJjM/0iPtYT5MtZ/MOoajEkojutWu1jRzuUghUuHA8AoNPcZqdLpMkM+H0kAb&#xA;8ufU/jzcPDinHJA1XVOorXSf3AXTrfT7+KMrIsCokkl0syxSCQqq8uCeo2++1c6ntvNwaWdn6tvm&#xA;7rtGfDhP9J6X5CnWa1v5I94ZJ1kDVLVZoUDfF3qAD9OajsGROE/1v0B12hlcT72UZvHMdiqnc/WP&#xA;q8v1bh9Z4N6HqV4c6fDz478a9aYDdbc1Ly7Vdc1xNfju5bZLfVdOVUCSW7l5Q/KMUSN29YH1HVOD&#xA;faOcpqtXnjqIEw/eCwPO3U5csxkG3qH2vQ9Bn1ie1ll1OEQM8pNtGQBIIeC09QKzqG58tgfs0rvX&#xA;Ol00shjeQVJ2cCSN0yy9mw7z5p0OoW08lpcQyX1pAzXOnsQzSQIQ7cKHnHIvVWHyPYjU9pacZo+m&#xA;VTg4uphxjY7hJvIOk6s9xNcWNy8Wli4Qyl5G+J4wvNI4V+E8lARnY7dhtmv7Gw5jESusd8u9xtDC&#xA;dXfpelZ0zs3ittaadqHneTQ7wmFTe30cIU8WiKmV4GUn2oR41p3y/VYI5cBjLkQHN1GLjwb8tmL+&#xA;adA8y6NrLWUp9Odrlp7G5IIgnLAklSf8hiGWtR9xONDQxnpPAJ6V8jsjHghk03hE7j9afWElvqXl&#xA;+707U7ZGt7S+sri9tpDVW+sRTQkoy1NPgWh67dMx+yNHk0pljkb6gj8eTi6LTTwyMJdeX4+CKWGx&#xA;0/8AKvU7uBY4Tq+pgafGmwEdtdgqijb7PoSuMz8GP99KXefuiI/e5OHH+/P45CkgtPPmsahpVpoO&#xA;np6kNuSJHIKwcmkLK0p+1IamqoKD50rnLds6uc8ksd1C6oc5Om7RzGWSUR9N/N7B5F8v3FhafXb7&#xA;kb2dFQCQAOsY3JYAfC0jfEV7CgoCDmb2RoDggTL65fYO5npMHALPMspzbuW7FUg8+RGTyjqJC8vR&#xA;RbgjwFvIsxO3gErlmI+oNuE+sPLdK8tSeZND1ybSJ/U1aJmQ2rMAksEtuFShP2H5rJQnY9D4jG7R&#xA;0IyZseX+KBH2StOu0/72E/5tfYWO6Bf63p+v/XEjZ5LJ4vrNpIfRnRomqV4vxILxlkYNTLNboPGy&#xA;QywlUofaO5v1ulGaUckCLCKstN0G9vby0EEU1xK0MOk3UoKuiXbLDBQHu8XF6N0r45Ds3GceOeM8&#xA;ozl8ev6WjSQ4ccgf4ZS+62R/nXq6Qa9aRx0L21uklxx3NDMXCn5BOXyOW5x/g2S+sSPspsiK0+Qn&#xA;u/R+1MvyN0iSKxlvpK8ljERbxkmb1pA3uoCffnP9jYrlPJ0+kfj5Om0cdzL4PVM37nuxV2KvOPzc&#xA;lFtPpVyRxjaK6ieQDq1YnjQn/YsQMytN1c7RCyQ8pvJ5Lew0iSMuPTT0VoCSKxhqkCtKqlc5vsuY&#xA;w63LHIau+f8AW2+duu7PnHFqZxntd8/eyTRNet7XyDd6Vcxt6k0qXVpdqVaIiFYgqEV5BnSEqKAi&#xA;p7ZsNf2bWDJwn6iZfpbdZoahMxNg7p5+UFto51G1u7ayhguW06WW9njG5keSFVLV6fCrdPfxzZZJ&#xA;8cBLvo/Y5Wc3AHvo/YwLU7671bzLeLprt9Uvri6k9VFPIW9xcc14gb85a0Hfrmn9oCPCxx5yvYed&#xA;ftcTtYAYsY/ifQXlTRjpGjRW7qFuH/e3AHQOQAF22PBFVa96VyzQabwMQh16+9owYuCICcZmNzsV&#xA;Qmqz3lvp081nF61zGtUjoWruOVFBUsQtSFqK9K5XllIRJiLKJEgbPKdZ88arcagt/wDWLW2TSwyx&#xA;XKgirM4EvOFyzq3FQOB7985TVdp5JZYkRqUL297qM2pkZggfS9D8o3GtXVlJc6kZfSlKm0+spHHO&#xA;V4/EzJGkYUE/ZDDl450ehlmlC8vN2eEyIuSfZmNrzTzn5euwF1G1ulvdGlui7BWImt3uXIZ4pVaj&#xA;KXehFKgGm46cz2pojjvPCXw9/P5ut1eEgcYP4Kzyvofm71E+rRT2WnTXKXf1i4uWT4DIJJAltEd+&#xA;dKUkHTrkuztJqhw2eGArb8fpXTYsoA6B6dnSOyYJ+YHlDyre3MepXd1JYarLRIjbDnJOyU4H0gOT&#xA;MgH21K0H2jQClkNRwbOThzygK5xed+ZLfXG9GxtPM1/f6ZNIYtWW9tHkit+JFC00zyj1FcfD6fQj&#xA;7Q2rP8xCrrdPix5gAFj01tBZ2+tteai8SQPBFaKkbFbuZuaxkCvFPREvJ6kmhIGTjqBKgNpH7HJG&#xA;p4q2Al39yN0Ly9Lr8AjvtTa1sbGJYbeN/t9ASoBK8F6cwtGLVrvmPlyjhMIGvPr+PNozZeEGGPbz&#xA;6n4vW/y08n6DYaNaahCfrd4wYNMwAjjkQmORYIwFVQGVhypyPjmv0ugx4vUN5d5dbjwRhv1Zxmc3&#xA;OxV2KtMqspVgGVhQg7gg4q8r1ryT5X0zVLi40rXLvSJYlL3KWgkkWBD8XHnCY2Vdq+mWJ8BTLhqu&#xA;h3cz81KqkBL3sA1XStYuNV1Ce/1ia7jtYD+jLm8tTBLcRA1ZeTMz8FPRpGNK1oKkEnURiQYjnzWG&#xA;cQNxHPmll2qwT6JKmpOt/JDFeXEPpvG9r6RRLf1JFqfgCcjRRQAda5KU4Ss/wA/M/j5+5v44yu9o&#xA;8/6xZHH5Ei1FLW5utZKXF7PGlwjKsjBZZFDM3Jq+p3ZiSKVG/fW60HUARvhj3Ov1cpZRXKPc940j&#xA;SbLSNNg06yUpb268UqasSTVmY92ZiSx8ctxYxCIjHkGqMREUEZljJ2KuxVLfMWh6TrWly2WqIDbf&#xA;3gkrxaNlrSRW/ZI/Vsdq5KMzHdnjmYmxzeHebfI+n2+mvN5c1ee5u+fKxtzBN++KGhaJ46IWHKvM&#xA;pxI70yGc48m8oRkeW/d76JbMuSOT6oRJ70is9BvYotJS4veF1cXCRXa+mYzbFSPjalC3FV5NRQfE&#xA;71y/HnhEGNegDZvxagCPBXp6NaNPfXMdzotpfxx201w8MksausUyROY15UFXRUBcKxpvvuRkpZ+G&#xA;IMq4jyHc2SzAR4iAZdB0D038t/J2iad5jld706hdRQiazDUorVKTSMF+EleahP5QTtXfNb4Ill8S&#xA;R4pdPL3OsnEynxyNl6pmUl2KuxV2Kseufy/8oXN4LybTY2uAQ3PfqOnft28Mwz2fhJumRlZsgX7k&#xA;/jjSONY0FEQBVHgAKDMsChQYkrbmCO4t5beSvpzI0b0NDRhQ0P04kWKUvJ9U0LWbbUnSWyub6OFf&#xA;SguogEMioCivJHVY+fE05jr4L0zjtZocwkYwvgvu/U4GbQZD9JBHvpknknQ9We5i1PVUkga0Vo7Y&#xA;TM0lzLzFC08rfEVANAm4712GbjszTZb8TKTbfiwTibmbLOM3TkMI84+QdR1jWE1TT74QTCMRFJal&#xA;QB/LRW6+G2+YeXDk4+KBG/f5dzkQyQMeGV7dyQR/lx54TTZtO+vWrQMrKWZpAX59TQA1J71phAy7&#xA;2B8/2MSIdCfl+1Bz/l/5+i02OxHozRQcXSWOSr+oPi5hG4jkGFevyyM5ZQLEbPvZRhAn6tvcjo/y&#xA;u80Xd41zfalHbmdA0ph+IhgNgysGHLsSGpTxyPBnJ/hA+J/Uy/dD+cfsZj5N8rXfl+CaCW+NzDIe&#xA;SRUNFYksz1Yndi29BlmmwzgSZSu2ObLCQAiKpkeZbjuxV2KuxV5df/lNrnqzmx1VGhklMwS4UlmP&#xA;LmAxA/mHjmDHDlhsOEj4g/pcmU8cjZsFZqf5b+db5bVpb60ZreQScCZaVXoDt8strJ3D5/sa6h3n&#xA;5ftUj5G/MCXUhK728TSRNC8/MyR8DQ0f7LdRtRT+vK5HLdCPxtnGOOrMvsV7P8oNT+r8LvVuAUlR&#xA;BGvKPh2+ICNgPbwyJw5pDcxj7hbITxA8iXpOmWtxa2EFvcXBupol4tOwoWp0J3Pb3zLxQMYgE2R1&#xA;aMkhKRIFInLGDsVdiqVeaND/AE5olxpvrNB6wH7wbjY1ow7g5VmxmcaBotmKYibLAY/yz842l3HP&#xA;bapbycV9MB+Y4qTU7qB177ZQI5RzEfmf1Mz4fQlZ/wAq588W2pXOoQXVpNLOApq8iECgBIYq3UKK&#xA;/LbJ1O+X2/sY1Guf2IeD8tfOtzbSW888FtCk/rohJqHNCTGy+oKVr9odzlP783UQPef1NvDiFWSf&#xA;cP1sh0T8tNR0zUre/GtSNLFTmOFAVJBdKKVBDUpuMP5fKSCZAV3D9qjLjAIEefeWe5nOK7FXYq7F&#xA;XYq7FXYq7FXYq//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>677.333333</stDim:w>
            <stDim:h>381.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -968.964 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 968.964 li
1569.77 968.964 li
1569.77 0 li
cp
clp
1509.43 906.736 mo
1526.89 906.736 1541.05 911.316 1541.05 916.965 cv
1541.05 922.616 1526.89 927.196 1509.43 927.196 cv
1491.97 927.196 1477.81 922.616 1477.81 916.965 cv
1477.81 911.316 1491.97 906.736 1509.43 906.736 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.862745 .745098 .447059 rgb
f
1542.9 676.222 mo
1547.88 661.63 1555.59 638.11 1566.68 645.027 cv
1576.93 651.42 1559.07 663.317 1550.46 677.447 cv
1561.66 671.913 1563.69 674.003 1566.64 677.137 cv
1571.63 682.445 1560.12 692.503 1543.37 698.371 cv
1532.72 702.098 1531.66 710.294 1540.03 714.306 cv
1545.46 710.652 1554.86 707.321 1559.12 709.597 cv
1564.97 712.714 1565.32 719.99 1555.76 723.117 cv
1547.22 725.911 1528.73 737.573 1530.99 746.265 cv
1534.62 760.18 1551.88 739.887 1559.61 750.294 cv
1563.58 755.645 1544.16 767.235 1532.55 772.893 cv
1512 782.912 1532.53 796.354 1543.46 794.343 cv
1549.13 793.298 1561.52 790.767 1562.92 796.746 cv
1564.31 802.725 1558.79 809.939 1546.49 814.723 cv
1532.89 820.01 1522.09 831.931 1530.83 841.198 cv
1539.81 850.722 1555.79 834.398 1561.83 842.796 cv
1566.16 848.814 1565.89 859.95 1555.87 864.229 cv
1548.76 867.262 1542.83 867.957 1533.11 870.482 cv
1529.94 871.306 1516.67 874.511 1515.45 879.515 cv
1514.52 883.3 1520.46 892.326 1527.47 891.03 cv
1534.47 889.733 1540.2 884.791 1548.63 885.368 cv
1557.96 886.007 1556.38 898.6 1545.19 906.92 cv
1534.01 915.241 1520.12 918.113 1507.88 917.804 cv
1495.64 917.497 1484.23 907.988 1473.79 900.743 cv
1465.86 895.235 1467.46 876.659 1481.64 882.064 cv
1495.83 887.469 1496.35 890.184 1503.86 888.207 cv
1509.34 886.763 1514.24 882.979 1514.6 880.008 cv
1515.29 874.304 1504.34 862.69 1500.67 861.344 cv
1483.51 855.057 1478.14 848.657 1478.08 836.879 cv
1478.06 831.933 1485.86 826.194 1491.69 827.785 cv
1500.98 830.318 1516.06 844.766 1519.87 840.119 cv
1525.43 833.332 1514.97 813.56 1507.62 809.093 cv
1499.24 803.993 1488.92 793.375 1495.39 787.853 cv
1498.58 785.133 1505.73 782.872 1512.82 787.594 cv
1526.78 796.892 1540.33 781.242 1515.12 766.253 cv
1504.35 759.851 1495.22 756.389 1497.89 748.613 cv
1501.1 739.247 1517.7 753.332 1527.31 744.553 cv
1532.14 740.151 1523.61 725.185 1517.17 721.349 cv
1506.26 714.849 1500.13 709.909 1505.43 703.465 cv
1509.37 698.662 1520.51 703.535 1526.43 708.239 cv
1558.28 716.915 1520.38 681.814 1526.94 670.859 cv
1529.56 666.479 1539.96 667.831 1542.9 676.222 cv
1542.9 676.222 li
cp
.231373 .494118 .054902 rgb
f
1543.63 684.196 mo
1547.79 670.06 1555.21 641.747 1565.82 647.954 cv
1572.44 651.824 1553.65 668.876 1546.35 682.528 cv
1555.96 677.257 1560.23 673.188 1563.54 678.303 cv
1568.21 685.508 1558.55 687.03 1547 695.401 cv
1541.15 699.637 1538.49 715.194 1540.87 717.881 cv
1546.43 712.484 1554.7 709.846 1558.4 712.101 cv
1563.48 715.189 1558.95 720.252 1550.73 723.198 cv
1543.38 725.83 1533.24 737.831 1535.28 746.302 cv
1538.55 759.866 1550.56 747.735 1553.51 753.628 cv
1556.45 759.52 1535.84 764.22 1532.87 777.742 cv
1531.74 782.862 1536.51 794.026 1542.32 796.966 cv
1546.31 798.982 1561.29 792.864 1559.17 801.615 cv
1557.05 810.366 1544.69 810.148 1536.63 819.778 cv
1531.72 825.643 1529.4 838.391 1534.73 844.278 cv
1544.13 854.676 1553.8 836.896 1560.01 845.012 cv
1565.8 852.579 1560.98 858.193 1552.37 862.254 cv
1546.27 865.133 1532.68 865.373 1527.45 869.873 cv
1523.55 873.237 1514.6 896.372 1523.17 895.499 cv
1531.74 894.627 1537.9 889.143 1545.19 889.787 cv
1553.25 890.5 1548.32 893.966 1538.75 901.946 cv
1529.17 909.924 1512.82 914.455 1507.37 914.183 cv
1501.91 913.911 1492.07 907.753 1485.34 898.739 cv
1478.61 889.725 1474.89 882.221 1480.72 886.507 cv
1486.55 890.794 1494.82 896.743 1506.7 884.877 cv
1512.89 878.698 1509.65 862.141 1504.78 860.184 cv
1489.73 854.132 1484 849.022 1483.84 837.572 cv
1483.76 832.763 1489.34 830.722 1493.15 833.12 cv
1501.87 838.605 1512.81 844.492 1516.65 840.346 cv
1523.02 833.468 1516.29 813.312 1510.12 808.521 cv
1503.79 803.609 1494.22 795.457 1499.76 790.153 cv
1502.49 787.54 1507.25 787.699 1514.41 789.801 cv
1521.1 791.768 1528.6 773.281 1518.84 765.058 cv
1510.73 758.227 1502.57 756.122 1504.96 751.572 cv
1507.35 747.022 1514.32 754.475 1522.54 746.036 cv
1526.66 741.803 1526.85 723.995 1521.08 720.481 cv
1509.82 713.637 1504.55 711.771 1509.8 706.169 cv
1512.45 703.332 1520.17 711.157 1525.64 708.658 cv
1546.82 698.978 1520.61 676.086 1532.01 671.688 cv
1536.33 670.021 1543.62 675.17 1543.63 684.196 cv
1543.63 684.196 li
cp
.309804 .670588 .152941 rgb
f
1533.12 671.216 mo
1530.59 671.443 1529.92 675.435 1531.61 680.143 cv
1532.81 683.463 1536.98 684.618 1538.25 688.342 cv
1539.53 692.067 1537.13 700.909 1535.49 705.942 cv
1532.74 714.383 1534.67 717.075 1530.38 718.455 cv
1527.57 719.357 1524.79 716.631 1522.89 713.749 cv
1520.99 710.867 1521.03 708.569 1518.04 706.627 cv
1514.04 704.038 1509.48 703.993 1507.84 706.524 cv
1506.2 709.054 1508.1 713.199 1512.1 715.788 cv
1516.1 718.377 1520.66 718.421 1523.27 719.421 cv
1525.88 720.421 1528.07 726.762 1528.67 730.654 cv
1530 739.252 1526.57 744.58 1526.13 751.599 cv
1525.94 754.553 1528.26 759.858 1526.09 760.479 cv
1523.36 761.263 1521.4 755.835 1518.68 753.656 cv
1515.97 751.478 1515.12 749.987 1511.21 748.473 cv
1506.7 746.723 1502.14 747.626 1501.04 750.474 cv
1499.94 753.323 1502.69 757.055 1507.2 758.805 cv
1510.66 760.146 1511.98 757.5 1516.07 758.464 cv
1520.16 759.429 1522.79 764.576 1524.31 768.676 cv
1526.11 773.532 1524.84 779.026 1524.79 784.204 cv
1524.72 790.521 1525.44 802.425 1523.8 803.129 cv
1522.16 803.835 1516.96 798.859 1514.73 796.604 cv
1512.5 794.349 1512.79 791.267 1510.07 789.228 cv
1505.62 785.883 1499.99 785.768 1497.5 788.957 cv
1495 792.145 1496.59 797.446 1501.05 800.792 cv
1505.5 804.136 1509.47 803.155 1514.58 804.139 cv
1519.69 805.124 1522.05 812.333 1522.74 817.427 cv
1523.42 822.522 1522.65 834.273 1521.6 840.516 cv
1520.54 846.758 1519.37 850.863 1517.53 851.925 cv
1515.7 852.987 1509.51 851.138 1507.57 847.272 cv
1505.64 843.406 1504.63 838.016 1499.23 834.486 cv
1492.39 830.013 1484.59 829.835 1481.81 834.086 cv
1479.03 838.336 1481.35 844.876 1488.19 849.349 cv
1494.84 853.698 1498.17 850.504 1503.83 852.103 cv
1508.81 853.506 1512.37 858.021 1513.37 864.22 cv
1514.36 870.419 1513.83 877.337 1512.41 882.864 cv
1510.99 888.39 1508.47 894.712 1504.88 896.419 cv
1501.29 898.127 1496.66 901.38 1492.24 899.187 cv
1487.81 896.994 1491.19 893.037 1487.37 888.673 cv
1482 882.529 1475.34 883.12 1473.4 886.374 cv
1471.46 889.627 1473.84 895.444 1478.71 899.358 cv
1483.51 903.222 1486.25 904.463 1490.23 906.655 cv
1495.66 909.64 1501.27 913.355 1507.03 914.594 cv
1512.79 915.834 1533.21 909.301 1540.18 904.421 cv
1547.14 899.542 1551.8 895.264 1550.01 891.369 cv
1548.23 887.474 1542.5 887.167 1535.29 890.475 cv
1528.97 893.376 1530.32 898.868 1526.9 901.524 cv
1523.48 904.18 1516.99 901.399 1516.5 897.452 cv
1516.01 893.504 1518.82 871.72 1522.16 867.944 cv
1525.5 864.168 1530.46 860.555 1535.31 860.025 cv
1540.17 859.494 1544.62 860.736 1550.85 857.961 cv
1557.09 855.186 1560.94 850.244 1559.46 846.909 cv
1557.97 843.574 1551.72 843.116 1545.49 845.89 cv
1541.66 847.593 1540.83 850.911 1537.38 852.575 cv
1533.94 854.238 1527.05 855.773 1525.81 854.309 cv
1524.56 852.844 1525.46 831.292 1529.56 823.298 cv
1533.66 815.305 1539.13 810.421 1543.46 810.008 cv
1547.79 809.595 1549.05 809.988 1553.93 806.187 cv
1558.82 802.387 1561.44 797.585 1559.78 795.455 cv
1558.13 793.325 1552.83 794.677 1547.94 798.478 cv
1545.89 800.074 1546.21 801.907 1543.14 803.522 cv
1540.08 805.136 1534.32 808.518 1531.41 808.189 cv
1528.49 807.86 1529.88 792.224 1530.3 784.246 cv
1530.59 778.724 1530.58 772.911 1532.81 767.849 cv
1534.42 764.186 1536.83 759.245 1540.33 758.491 cv
1543.82 757.737 1545.21 760.706 1549.65 759.361 cv
1554.58 757.865 1557.97 754.631 1557.21 752.126 cv
1556.45 749.62 1551.83 748.793 1546.89 750.29 cv
1543.21 751.405 1541.55 752.54 1539.07 754.012 cv
1536.24 755.688 1534.01 761.25 1531.07 759.789 cv
1528.2 758.368 1531.43 749.504 1532.17 744.306 cv
1532.91 739.109 1532.6 733.132 1535.53 728.684 cv
1537.46 725.761 1541.69 722.299 1544.09 722.599 cv
1546.49 722.899 1549.23 723.806 1553.05 721.792 cv
1556.88 719.777 1559.18 716.646 1558.2 714.791 cv
1557.23 712.935 1553.33 713.065 1549.51 715.08 cv
1547.78 715.992 1547.02 716.062 1543.8 717.802 cv
1540.58 719.543 1538.23 723.327 1535.83 721.62 cv
1532.8 719.464 1536.34 714.161 1537.08 710.529 cv
1539.35 699.477 1542.91 690.544 1546.88 690.262 cv
1550.85 689.981 1553.8 690.145 1556.98 688.702 cv
1561.39 686.7 1563.92 682.416 1563.04 680.464 cv
1562.15 678.514 1557.82 678.123 1553.41 680.124 cv
1549.37 681.961 1547.18 688.483 1543.21 686.687 cv
1539.23 684.891 1541.33 681.083 1540.82 678.851 cv
1539.5 673.098 1535.65 670.989 1533.12 671.215 cv
1533.12 671.216 li
cp
.529412 .937255 .25098 rgb
f
1562.02 650.688 mo
1563.86 652.561 1562.69 658.082 1559.39 663.019 cv
1556.1 667.957 1551.93 670.441 1550.09 668.569 cv
1548.24 666.696 1549.42 661.175 1552.71 656.238 cv
1556.01 651.3 1560.17 648.816 1562.02 650.688 cv
cp
f
1532.81 672.477 mo
1534.46 671.701 1536.9 673.421 1538.27 676.322 cv
1539.64 679.221 1539.42 682.202 1537.78 682.979 cv
1536.14 683.755 1533.7 682.035 1532.33 679.134 cv
1530.96 676.234 1531.17 673.253 1532.81 672.477 cv
cp
.886275 .988235 .662745 rgb
f
1554.85 680.79 mo
1557.73 679.879 1560.55 680.639 1561.13 682.487 cv
1561.71 684.335 1559.84 686.57 1556.96 687.48 cv
1554.07 688.39 1551.26 687.63 1550.67 685.783 cv
1550.09 683.935 1551.96 681.7 1554.85 680.79 cv
cp
f
1550.79 715.073 mo
1553.92 713.961 1556.91 714.301 1557.45 715.834 cv
1557.99 717.366 1555.89 719.51 1552.75 720.623 cv
1549.62 721.735 1546.63 721.395 1546.09 719.862 cv
1545.55 718.33 1547.65 716.186 1550.79 715.073 cv
cp
f
1515.77 707.278 mo
1518.41 709.162 1519.52 712.129 1518.25 713.907 cv
1516.99 715.684 1513.82 715.597 1511.18 713.713 cv
1508.54 711.83 1507.43 708.861 1508.7 707.085 cv
1509.97 705.307 1513.13 705.394 1515.77 707.278 cv
cp
f
1549.39 750.808 mo
1552.51 749.836 1555.42 750.267 1555.89 751.77 cv
1556.35 753.273 1554.2 755.279 1551.08 756.25 cv
1547.96 757.221 1545.05 756.791 1544.58 755.288 cv
1544.12 753.785 1546.27 751.779 1549.39 750.808 cv
cp
f
1509.15 747.907 mo
1512.53 749.061 1514.64 751.854 1513.86 754.146 cv
1513.07 756.437 1509.7 757.359 1506.32 756.204 cv
1502.94 755.049 1500.84 752.256 1501.62 749.964 cv
1502.4 747.673 1505.77 746.753 1509.15 747.907 cv
cp
f
1506.42 787.899 mo
1509.5 789.716 1510.84 793.133 1509.42 795.53 cv
1508 797.926 1504.36 798.396 1501.29 796.578 cv
1498.21 794.76 1496.87 791.343 1498.29 788.947 cv
1499.71 786.55 1503.35 786.081 1506.42 787.899 cv
cp
f
1551.79 795.886 mo
1555.17 794.402 1558.74 795.086 1559.76 797.414 cv
1560.78 799.742 1558.87 802.833 1555.49 804.317 cv
1552.11 805.801 1548.54 805.117 1547.52 802.79 cv
1546.5 800.461 1548.41 797.371 1551.79 795.886 cv
cp
f
1549.53 844.859 mo
1553.63 843.39 1557.67 844.186 1558.54 846.637 cv
1559.42 849.087 1556.81 852.265 1552.7 853.734 cv
1548.6 855.203 1544.56 854.406 1543.68 851.956 cv
1542.81 849.504 1545.42 846.328 1549.53 844.859 cv
cp
f
1493 832.062 mo
1496.82 833.878 1498.86 837.61 1497.53 840.4 cv
1496.21 843.189 1492.03 843.979 1488.21 842.164 cv
1484.38 840.348 1482.34 836.615 1483.67 833.826 cv
1484.99 831.037 1489.17 830.247 1493 832.062 cv
cp
f
1475.69 884.187 mo
1478.17 882.061 1482.71 883.283 1485.82 886.916 cv
1488.93 890.547 1489.44 895.216 1486.95 897.341 cv
1484.47 899.467 1479.94 898.246 1476.83 894.613 cv
1473.72 890.98 1473.21 886.312 1475.69 884.187 cv
cp
f
1537.95 888.939 mo
1542.31 886.961 1546.75 887.369 1547.88 889.849 cv
1549 892.329 1546.39 895.943 1542.03 897.92 cv
1537.68 899.897 1533.24 899.49 1532.11 897.01 cv
1530.98 894.53 1533.6 890.917 1537.95 888.939 cv
cp
f
1559.86 652.068 mo
1561.6 652.9 1561.81 656.105 1560.32 659.227 cv
1558.83 662.349 1556.21 664.207 1554.47 663.376 cv
1552.73 662.544 1552.52 659.338 1554.01 656.216 cv
1555.5 653.094 1558.12 651.237 1559.86 652.068 cv
cp
f
1352.32 879.76 mo
1366.81 880.163 1378.46 884.16 1378.34 888.688 cv
1378.21 893.215 1366.36 896.559 1351.86 896.157 cv
1337.36 895.754 1325.71 891.757 1325.84 887.229 cv
1325.96 882.702 1337.82 879.358 1352.32 879.76 cv
cp
.862745 .745098 .447059 rgb
f
1342.07 722.71 mo
1336.87 705.943 1328.84 678.923 1315.99 686.448 cv
1304.12 693.401 1324.07 707.508 1333.43 723.866 cv
1320.86 717.211 1318.48 719.527 1315.03 723.002 cv
1309.17 728.885 1321.96 740.7 1340.84 747.908 cv
1352.84 752.488 1353.79 761.85 1344.14 766.154 cv
1338.07 761.823 1327.48 757.733 1322.55 760.189 cv
1315.8 763.553 1315.18 771.825 1325.95 775.686 cv
1335.59 779.136 1356.27 792.997 1353.42 802.82 cv
1348.84 818.545 1329.84 794.899 1320.71 806.501 cv
1316.02 812.466 1337.76 826.274 1350.8 833.083 cv
1373.88 845.137 1350.08 859.79 1337.71 857.156 cv
1331.28 855.787 1317.26 852.513 1315.48 859.275 cv
1313.7 866.038 1319.86 873.586 1333.07 880.773 cv
1347.81 888.794 1348.97 891.049 1357.65 889.941 cv
1366.2 888.848 1370.84 880.499 1378.83 875.101 cv
1388.08 868.844 1399.83 857.777 1392.63 851.288 cv
1389.09 848.09 1381.01 845.289 1372.79 850.441 cv
1356.61 860.585 1341.69 842.34 1370.86 826.076 cv
1383.31 819.128 1393.81 815.476 1391.03 806.54 cv
1387.67 795.775 1368.33 811.285 1357.66 800.988 cv
1352.31 795.824 1362.49 779.057 1369.94 774.894 cv
1382.57 767.84 1389.7 762.41 1383.88 754.908 cv
1379.53 749.314 1366.71 754.509 1359.81 759.676 cv
1323.28 768.545 1367.53 729.788 1360.42 717.11 cv
1357.57 712.041 1345.69 713.251 1342.07 722.71 cv
1342.07 722.71 li
cp
.231373 .494118 .054902 rgb
f
1340.99 731.763 mo
1336.71 715.541 1329.16 683.077 1316.88 689.806 cv
1309.22 694.003 1330.07 714.007 1337.95 729.779 cv
1327.17 723.475 1322.44 718.709 1318.51 724.426 cv
1312.98 732.48 1323.92 734.518 1336.8 744.413 cv
1343.33 749.419 1345.87 767.212 1343.07 770.197 cv
1336.91 763.877 1327.59 760.613 1323.3 763.062 cv
1317.42 766.418 1322.42 772.324 1331.68 775.937 cv
1339.96 779.166 1351.13 793.147 1348.54 802.727 cv
1344.38 818.064 1331.1 803.875 1327.56 810.489 cv
1324.02 817.103 1347.33 823.106 1350.29 838.592 cv
1351.41 844.457 1345.63 857.014 1338.92 860.177 cv
1334.31 862.345 1317.45 854.908 1319.59 864.936 cv
1321.73 874.965 1350.25 887.815 1355.28 886.089 cv
1360.3 884.364 1393.67 860.542 1387.58 853.766 cv
1381.5 846.992 1379.13 850.736 1370.92 852.903 cv
1363.24 854.931 1355.29 833.648 1366.66 824.597 cv
1376.11 817.078 1385.46 814.939 1382.88 809.684 cv
1380.31 804.429 1372.14 812.693 1363.05 802.826 cv
1358.49 797.878 1358.83 777.599 1365.52 773.783 cv
1378.55 766.347 1384.61 764.389 1378.81 757.846 cv
1375.88 754.533 1366.84 763.197 1360.7 760.179 cv
1336.9 748.49 1367.45 723.26 1354.62 717.892 cv
1349.75 715.858 1341.29 721.49 1340.99 731.763 cv
1340.99 731.763 li
cp
.309804 .670588 .152941 rgb
f
1353.37 717.321 mo
1356.24 717.659 1356.88 722.224 1354.8 727.53 cv
1353.34 731.273 1348.55 732.455 1346.98 736.654 cv
1345.42 740.853 1347.87 750.994 1349.58 756.775 cv
1352.43 766.472 1350.16 769.475 1354.99 771.181 cv
1358.16 772.297 1361.41 769.282 1363.67 766.061 cv
1365.93 762.84 1365.95 760.223 1369.42 758.107 cv
1374.05 755.287 1379.25 755.379 1381.03 758.312 cv
1382.82 761.246 1380.52 765.902 1375.89 768.723 cv
1371.26 771.544 1366.06 771.451 1363.05 772.506 cv
1360.05 773.563 1357.36 780.711 1356.56 785.123 cv
1354.77 794.867 1358.51 801.042 1358.79 809.045 cv
1358.9 812.415 1356.1 818.379 1358.55 819.155 cv
1361.64 820.134 1364.04 814.016 1367.2 811.623 cv
1370.36 809.229 1371.37 807.558 1375.86 805.959 cv
1381.05 804.109 1386.21 805.281 1387.38 808.559 cv
1388.55 811.836 1385.3 815.998 1380.1 817.847 cv
1376.12 819.264 1374.71 816.21 1370.02 817.178 cv
1365.33 818.148 1362.18 823.922 1360.32 828.544 cv
1358.11 834.013 1359.38 840.307 1359.28 846.204 cv
1359.16 853.397 1357.96 866.925 1359.81 867.779 cv
1361.66 868.633 1367.73 863.133 1370.34 860.637 cv
1372.94 858.14 1372.72 854.624 1375.87 852.388 cv
1381.05 848.721 1387.46 848.768 1390.2 852.477 cv
1392.94 856.186 1390.96 862.169 1385.78 865.836 cv
1380.61 869.503 1376.12 868.26 1370.27 869.219 cv
1364.42 870.178 1361.51 878.31 1354.85 879.819 cv
1348.19 881.328 1342.13 875.595 1337.21 874.988 cv
1332.29 874.38 1330.85 874.788 1325.41 870.307 cv
1319.97 865.826 1317.13 860.276 1319.09 857.904 cv
1321.04 855.532 1327.03 857.24 1332.48 861.72 cv
1334.76 863.601 1334.34 865.678 1337.78 867.614 cv
1341.22 869.548 1347.66 873.581 1350.99 873.297 cv
1354.32 873.015 1353.23 855.172 1353.01 846.077 cv
1352.85 839.783 1353.04 833.165 1350.67 827.333 cv
1348.95 823.112 1346.36 817.411 1342.4 816.442 cv
1338.45 815.473 1336.77 818.808 1331.77 817.137 cv
1326.2 815.278 1322.44 811.491 1323.39 808.662 cv
1324.33 805.834 1329.62 805.039 1335.19 806.898 cv
1339.35 808.285 1341.2 809.628 1343.98 811.383 cv
1347.15 813.38 1349.51 819.782 1352.91 818.211 cv
1356.21 816.685 1352.82 806.494 1352.14 800.553 cv
1351.46 794.613 1352 787.82 1348.8 782.663 cv
1346.7 779.275 1342 775.2 1339.26 775.465 cv
1336.51 775.731 1333.37 776.677 1329.08 774.262 cv
1324.79 771.848 1322.27 768.211 1323.44 766.13 cv
1324.61 764.049 1329.04 764.32 1333.33 766.734 cv
1335.27 767.828 1336.12 767.931 1339.74 770.014 cv
1343.35 772.097 1345.9 776.479 1348.69 774.612 cv
1352.21 772.253 1348.35 766.105 1347.61 761.947 cv
1345.38 749.294 1341.61 739.013 1337.1 738.567 cv
1332.59 738.121 1329.23 738.214 1325.65 736.471 cv
1320.7 734.053 1317.95 729.096 1319.02 726.903 cv
1320.09 724.711 1325.03 724.401 1329.99 726.819 cv
1334.53 729.039 1336.82 736.533 1341.4 734.613 cv
1345.98 732.694 1343.71 728.293 1344.36 725.768 cv
1346.05 719.261 1350.5 716.983 1353.37 717.321 cv
1353.37 717.321 li
cp
.529412 .937255 .25098 rgb
f
1321.12 693.04 mo
1318.96 695.113 1320.13 701.434 1323.72 707.159 cv
1327.32 712.883 1331.98 715.843 1334.14 713.771 cv
1336.3 711.698 1335.13 705.377 1331.54 699.651 cv
1327.94 693.926 1323.28 690.966 1321.12 693.04 cv
cp
f
1353.68 718.766 mo
1351.83 717.83 1349 719.711 1347.34 722.969 cv
1345.69 726.227 1345.84 729.628 1347.69 730.563 cv
1349.53 731.5 1352.37 729.618 1354.02 726.36 cv
1355.67 723.102 1355.52 719.702 1353.68 718.766 cv
cp
.886275 .988235 .662745 rgb
f
1328.33 727.532 mo
1325.08 726.405 1321.85 727.18 1321.13 729.265 cv
1320.41 731.35 1322.46 733.954 1325.72 735.081 cv
1328.98 736.209 1332.2 735.432 1332.92 733.348 cv
1333.65 731.263 1331.59 728.66 1328.33 727.532 cv
cp
f
1331.87 766.687 mo
1328.34 765.321 1324.93 765.614 1324.26 767.341 cv
1323.59 769.069 1325.92 771.576 1329.46 772.942 cv
1332.99 774.307 1336.4 774.014 1337.07 772.287 cv
1337.74 770.56 1335.41 768.052 1331.87 766.687 cv
cp
f
1371.97 758.919 mo
1368.91 760.981 1367.55 764.325 1368.94 766.387 cv
1370.33 768.451 1373.94 768.452 1377 766.391 cv
1380.06 764.33 1381.42 760.986 1380.04 758.923 cv
1378.65 756.86 1375.04 756.859 1371.97 758.919 cv
cp
f
1332.33 807.41 mo
1328.81 806.205 1325.49 806.603 1324.91 808.299 cv
1324.33 809.996 1326.71 812.346 1330.23 813.55 cv
1333.76 814.754 1337.08 814.356 1337.66 812.661 cv
1338.24 810.964 1335.86 808.614 1332.33 807.41 cv
cp
f
1378.22 805.378 mo
1374.34 806.586 1371.86 809.7 1372.67 812.333 cv
1373.49 814.965 1377.31 816.122 1381.19 814.914 cv
1385.07 813.707 1387.56 810.593 1386.74 807.961 cv
1385.92 805.327 1382.11 804.171 1378.22 805.378 cv
cp
f
1380.07 850.99 mo
1376.51 852.962 1374.88 856.809 1376.42 859.583 cv
1377.95 862.355 1382.08 863.004 1385.64 861.033 cv
1389.2 859.06 1390.83 855.213 1389.3 852.44 cv
1387.76 849.668 1383.63 849.018 1380.07 850.99 cv
cp
f
1328.18 858.649 mo
1324.37 856.852 1320.29 857.518 1319.05 860.135 cv
1317.82 862.753 1319.89 866.332 1323.7 868.128 cv
1327.5 869.924 1331.58 869.259 1332.82 866.641 cv
1334.06 864.024 1331.98 860.446 1328.18 858.649 cv
cp
f
1323.53 694.678 mo
1321.52 695.57 1321.19 699.211 1322.78 702.813 cv
1324.38 706.415 1327.3 708.611 1329.31 707.72 cv
1331.33 706.829 1331.66 703.186 1330.07 699.586 cv
1328.47 695.984 1325.55 693.787 1323.53 694.678 cv
cp
f
217.424 924.886 mo
228.248 924.171 256.781 921.043 251.946 934.954 cv
264.75 936.69 273.529 944.463 269.439 956.232 cv
262.988 956.467 256.314 957.08 250.782 956.655 cv
242.678 959.037 234.994 952.737 230.505 956.378 cv
233.192 958.782 226.042 964.383 218.554 962.606 cv
211.066 960.83 206.103 960.399 200.307 962.981 cv
194.392 975.573 181.791 964.747 174.376 962.381 cv
169.522 967.603 162.638 962.408 155.789 961.882 cv
147.243 967.594 138.665 959.961 129.687 957.097 cv
121.448 964.074 110.996 967.474 103.545 959.263 cv
84.2745 964.461 68.4298 957.652 65.2662 947.052 cv
62.1026 936.453 73.671 931.56 80.4908 927.358 cv
87.3101 923.156 94.0967 919.803 103.362 923.086 cv
126.579 922.943 155.178 930.041 174.891 923.476 cv
187.656 924.253 206.536 916.25 217.424 924.886 cv
217.424 924.886 li
cp
.858824 .623529 .313726 rgb
f
181.849 669.094 mo
176.109 714.538 212.75 744.949 221.115 790.955 cv
225.847 816.981 216.494 839.282 208.366 869.332 cv
200.239 899.38 192.42 920.363 184.129 949.968 cv
192.803 919.66 197.101 891.732 192.614 868.237 cv
178.414 793.87 131.21 743.086 181.849 669.094 cv
181.849 669.094 li
cp
.231373 .494118 .054902 rgb
f
179.588 677.182 mo
177.712 720.172 212.925 748.939 218.914 792.705 cv
222.206 816.763 215.009 832.044 210.265 851.161 cv
204.367 874.928 200.484 908.255 185.794 920.428 cv
209.857 880.074 185.313 834.967 170.866 787.235 cv
160.115 751.712 153.093 718.332 179.588 677.182 cv
179.588 677.182 li
cp
.458824 .839216 .203922 rgb
f
214.896 834.47 mo
212.018 841.829 209.508 865.45 201.903 867.752 cv
198.663 868.732 190.526 840.668 187.809 838.532 cv
195.619 868.252 199.379 896.258 185.795 920.783 cv
196.031 912.301 201.915 893.376 205.992 874.638 cv
207.767 866.485 208.472 858.367 210.26 851.161 cv
211.7 845.361 213.366 839.917 214.896 834.47 cv
214.896 834.47 li
cp
.231373 .494118 .054902 rgb
f
177.622 686.929 mo
177.622 686.929 165.9 710.871 164.96 735.494 cv
163.995 760.751 187.151 783.511 182.128 809.348 cv
195.046 788.894 180.149 739.256 180.149 739.256 cv
180.149 739.256 210.337 765.328 211.055 792.601 cv
218.232 769.276 199.644 747.29 188.602 727.892 cv
179.35 711.639 177.622 686.929 177.622 686.929 cv
cp
.529412 .937255 .25098 rgb
f
178.076 736.437 mo
186.877 770.343 201.962 843.811 203.197 880.567 cv
207.003 835.817 217.831 790.77 178.076 736.437 cv
178.076 736.437 li
cp
.231373 .494118 .054902 rgb
f
175.395 700.308 mo
176.98 700.308 178.265 702.878 178.265 706.05 cv
178.265 709.221 176.98 711.792 175.395 711.792 cv
173.809 711.792 172.524 709.221 172.524 706.05 cv
172.524 702.878 173.809 700.308 175.395 700.308 cv
cp
.886275 .988235 .662745 rgb
f
177.368 716.457 mo
179.648 716.457 181.495 719.429 181.495 723.095 cv
181.495 726.762 179.648 729.734 177.368 729.734 cv
175.089 729.734 173.241 726.762 173.241 723.095 cv
173.241 719.429 175.089 716.457 177.368 716.457 cv
cp
f
311.318 732.055 mo
310.832 788.138 306.563 825.564 271.714 848.797 cv
261.348 855.708 247.783 862.94 237.187 875.241 cv
218.747 896.648 214.879 919.112 211.799 945.988 cv
217.943 933.42 229.942 915.338 247.342 906.044 cv
296.511 879.781 329.659 853.993 326.204 796.746 cv
325.112 778.659 320.367 757.431 311.318 732.055 cv
311.318 732.055 li
cp
.231373 .494118 .054902 rgb
f
312.707 742.808 mo
313.512 791.741 304.036 833.579 271.773 851.631 cv
262.916 856.587 248.981 863.674 239.809 873.208 cv
223.846 889.795 208.204 905.748 214.177 941.833 cv
219.741 931.883 238.715 907.94 252.781 900.166 cv
291.886 878.551 324.266 854.234 325.161 804.526 cv
325.473 787.18 320.614 767.634 312.707 742.808 cv
cp
.458824 .839216 .203922 rgb
f
302.92 841.489 mo
280.898 867.866 240.332 871.941 228.108 891.572 cv
215.884 911.204 214.631 932.975 220.198 942.481 cv
219.184 880.427 280.995 891.906 302.92 841.489 cv
cp
.231373 .494118 .054902 rgb
f
238.091 874.989 mo
222.748 890.965 208.415 907.045 214.174 941.838 cv
219.737 931.889 237.999 909.554 252.064 901.78 cv
256.954 899.078 263.68 894.72 268.27 891.917 cv
259.793 892.336 232.507 907.754 227.334 904.629 cv
222.698 901.83 229.917 885.326 238.091 874.989 cv
238.091 874.989 li
cp
f
274.369 856.259 mo
274.369 856.259 299.146 836.211 306.464 817.468 cv
313.783 798.726 315.6 763.167 315.6 763.167 cv
315.6 763.167 324.162 802.967 319.66 821.529 cv
315.157 840.09 312.833 858.308 285.56 875.534 cv
304.22 857.232 307.987 837.768 307.987 837.768 cv
307.987 837.768 298.053 846.211 274.369 856.259 cv
274.369 856.259 li
cp
.529412 .937255 .25098 rgb
f
316.582 794.39 mo
318.544 794.39 320.135 797.912 320.135 802.256 cv
320.135 806.6 318.544 810.123 316.582 810.123 cv
314.62 810.123 313.03 806.6 313.03 802.256 cv
313.03 797.912 314.62 794.39 316.582 794.39 cv
cp
.886275 .988235 .662745 rgb
f
315.001 815.35 mo
317.195 815.812 318.318 819.299 317.51 823.139 cv
316.702 826.979 314.268 829.717 312.073 829.255 cv
309.879 828.794 308.756 825.306 309.564 821.466 cv
310.373 817.627 312.807 814.888 315.001 815.35 cv
cp
f
91.9703 719.87 mo
92.1998 759.87 103.117 777.282 128.867 798.74 cv
138.905 807.105 151.141 815.057 157.639 824.804 cv
176.125 852.534 170.33 913.503 162.378 945.311 cv
161.728 887.816 121.325 878.532 101.448 858.655 cv
89.6807 846.887 84.1993 840.059 79.7842 826.836 cv
75.3692 813.612 73.503 799.848 74.3682 786.215 cv
75.8175 763.381 84.6929 729.137 91.9703 719.87 cv
91.9703 719.87 li
cp
.231373 .494118 .054902 rgb
f
90.0089 728.666 mo
90.2022 762.314 105.41 783.645 127.06 801.696 cv
135.5 808.732 152.854 819.055 158.864 832.546 cv
171.602 861.135 169.914 900.489 162.399 926.375 cv
152.746 885.744 125.105 872.526 108.277 859.981 cv
98.5938 852.762 84.2999 834.114 80.42 820.019 cv
71.7672 788.582 82.3072 751.945 90.0089 728.666 cv
90.0089 728.666 li
cp
.458824 .839216 .203922 rgb
f
97.3839 789.216 mo
101.8 826.758 123.732 830.79 143.566 850.624 cv
156.914 863.971 162.352 887.19 158.791 906.957 cv
156.162 889.696 153.86 869.279 143.059 859.759 cv
117.416 837.158 96.5391 840.832 97.3839 789.216 cv
cp
.231373 .494118 .054902 rgb
f
88.9327 736.678 mo
88.9327 736.678 74.9337 785.282 81.6426 808.334 cv
87.2525 827.608 91.6636 835.522 118.937 855.618 cv
118.937 855.618 85.359 816.706 97.5601 791.227 cv
101.866 821.012 129.137 825.937 143.133 825.937 cv
143.133 825.937 113.549 798.987 101.446 781.621 cv
89.3424 764.254 88.9327 736.678 88.9327 736.678 cv
88.9327 736.678 li
cp
.529412 .937255 .25098 rgb
f
167.287 865.408 mo
167.502 874.77 165.675 889.764 160.053 893.827 cv
154.971 897.499 143.159 884.998 137.21 881.876 cv
146.142 893.505 156.189 906.784 162.4 926.378 cv
168.597 910.403 171.262 888.021 167.287 865.408 cv
cp
.231373 .494118 .054902 rgb
f
86.939 757.342 mo
89.6016 757.342 91.7603 761.887 91.7603 767.493 cv
91.7603 773.098 89.6016 777.642 86.939 777.642 cv
84.2764 777.642 82.1177 773.098 82.1177 767.493 cv
82.1177 761.887 84.2764 757.342 86.939 757.342 cv
cp
.886275 .988235 .662745 rgb
f
87.1929 781.703 mo
89.9957 781.703 92.2681 785.111 92.2681 789.315 cv
92.2681 793.519 89.9957 796.927 87.1929 796.927 cv
84.3902 796.927 82.1177 793.519 82.1177 789.315 cv
82.1177 785.111 84.3902 781.703 87.1929 781.703 cv
cp
f
257.352 939.638 mo
253.88 923.183 248.382 899.443 232.68 900.589 cv
216.978 901.737 207.813 925.269 202.56 943.889 cv
214.673 950.337 250.482 949.999 257.352 939.638 cv
cp
.305882 .305882 .305882 rgb
f
255.397 938.694 mo
252.173 923.643 247.067 901.929 232.485 902.978 cv
217.903 904.027 209.393 925.55 204.515 942.582 cv
215.764 948.48 249.017 948.169 255.397 938.694 cv
255.397 938.694 li
cp
.580392 .568627 .517647 rgb
f
252.935 934.904 mo
250.27 922.461 246.049 904.511 233.995 905.378 cv
221.941 906.246 214.905 924.039 210.873 938.118 cv
220.172 942.994 247.661 942.737 252.935 934.904 cv
cp
.701961 .694118 .631373 rgb
f
235.104 905.358 mo
234.742 905.35 234.369 905.352 233.992 905.379 cv
227.938 905.815 219.714 912.853 219.376 916.885 cv
219.037 920.918 227.545 926.55 234.149 926.775 cv
239.775 926.965 248.36 923.881 248.928 919.787 cv
249.495 915.691 241.952 905.527 235.104 905.358 cv
cp
.866667 .862745 .835294 rgb
f
71.8092 944.843 mo
74.1343 931.929 90.9683 918.264 100.682 918.799 cv
110.395 919.335 121.507 933.341 121.114 947.696 cv
101.429 955.65 85.4073 951.566 71.8092 944.843 cv
cp
.305882 .305882 .305882 rgb
f
73.3316 943.828 mo
75.9107 931.421 93.2047 920.142 100.765 920.677 cv
108.325 921.212 122.014 934.864 121.621 946.427 cv
101.937 954.381 85.6612 950.297 73.3316 943.828 cv
cp
.580392 .568627 .517647 rgb
f
177.008 949.481 mo
180.088 938.212 190.943 925.554 202.313 927.862 cv
213.683 930.169 218.421 940.777 220.195 950.269 cv
207.307 953.868 189.865 954.989 177.008 949.481 cv
cp
.305882 .305882 .305882 rgb
f
178.816 948.723 mo
181.639 938.399 191.585 926.8 202.002 928.915 cv
212.42 931.03 216.761 940.749 218.386 949.445 cv
206.578 952.743 190.597 953.77 178.816 948.723 cv
178.816 948.723 li
cp
.580392 .568627 .517647 rgb
f
122.781 948.225 mo
127.118 939.471 133.139 902.421 147.761 902.3 cv
162.384 902.18 166.681 942.018 169.959 951.139 cv
155.01 958.29 133.688 957.899 122.781 948.225 cv
cp
.305882 .305882 .305882 rgb
f
124.406 947.365 mo
128.444 939.253 134.05 904.924 147.666 904.813 cv
161.281 904.702 165.282 941.613 168.334 950.064 cv
154.415 956.69 134.561 956.328 124.406 947.365 cv
cp
.580392 .568627 .517647 rgb
f
79.6993 939.051 mo
81.6656 929.591 95.336 921.474 101.101 921.882 cv
106.865 922.291 116.819 932.216 116.52 941.033 cv
101.51 947.098 87.7965 943.765 79.6993 939.051 cv
cp
.701961 .694118 .631373 rgb
f
100.545 921.866 mo
97.0391 921.931 86.8726 925.694 86.5928 928.652 cv
86.3131 931.611 93.5147 934.814 98.6763 934.99 cv
104.121 935.175 111.521 931.053 111.582 928.909 cv
111.644 926.764 104.145 922.099 101.107 921.884 cv
100.927 921.872 100.74 921.862 100.545 921.866 cv
cp
.866667 .862745 .835294 rgb
f
132.399 935.484 mo
135.045 930.169 137.907 907.825 147.638 907.604 cv
157.369 907.383 159.181 931.715 161.18 937.253 cv
153.48 953.021 140.453 950.722 132.399 935.484 cv
cp
.701961 .694118 .631373 rgb
f
146.313 954.974 mo
146.47 950.342 146.873 945.688 146.271 941.077 cv
143.316 927.281 135.941 921.37 128.003 921.085 cv
119.827 920.791 111.413 925.524 106.261 931.602 cv
102.878 935.594 100.116 944.028 100.014 947.05 cv
107.57 957.503 132.297 959.694 146.313 954.974 cv
146.313 954.974 li
cp
.305882 .305882 .305882 rgb
f
144.358 953.906 mo
144.505 949.595 144.879 945.263 144.319 940.972 cv
138.736 914.906 116.199 921.84 106.751 932.989 cv
103.602 936.704 101.365 943.718 101.27 946.532 cv
108.302 956.259 131.315 958.298 144.358 953.906 cv
cp
.580392 .568627 .517647 rgb
f
183.993 946.422 mo
186.088 938.757 193.473 930.146 201.208 931.715 cv
208.942 933.286 212.166 940.502 213.372 946.959 cv
201.726 951.566 189.08 949.429 183.993 946.422 cv
cp
.701961 .694118 .631373 rgb
f
151.111 940.643 mo
152.889 934.335 161.089 925.994 169.02 925.656 cv
179.59 925.205 190.924 934.92 193.983 950.79 cv
189.236 956.554 180.236 958.316 173.023 959.2 cv
165.811 960.084 159.993 957.889 152.054 955.529 cv
148.871 951.254 149.334 946.952 151.111 940.643 cv
151.111 940.643 li
cp
.305882 .305882 .305882 rgb
f
199.769 931.537 mo
196.566 931.394 191.273 933.158 191.327 936.296 cv
191.382 939.435 194.804 942.052 199.154 942.2 cv
203.679 942.354 208.036 939.621 207.698 936.647 cv
207.361 933.674 204.04 932.294 201.214 931.719 cv
200.731 931.622 200.248 931.558 199.769 931.537 cv
199.769 931.537 li
cp
.866667 .862745 .835294 rgb
f
152.63 941.478 mo
155.309 934.94 161.301 928.012 168.297 927.203 cv
178.516 926.02 189.583 934.843 192.554 950.259 cv
188.116 955.649 179.699 957.296 172.954 958.124 cv
166.21 958.95 160.388 956.658 153.346 954.691 cv
150.37 950.694 150.958 945.559 152.63 941.478 cv
cp
.580392 .568627 .517647 rgb
f
141.3 949.044 mo
141.415 945.661 141.709 942.261 141.269 938.893 cv
136.887 918.437 119.201 923.879 111.786 932.628 cv
109.315 935.544 107.56 941.048 107.485 943.256 cv
113.004 950.89 131.063 952.49 141.3 949.044 cv
141.3 949.044 li
cp
.701961 .694118 .631373 rgb
f
155.545 947.787 mo
155.348 938.639 163.711 930.569 168.799 930.028 cv
176.146 929.246 184.07 935.607 186.205 946.683 cv
183.001 950.574 176.17 951.224 172.057 952.36 cv
158.4 952.444 155.545 947.787 155.545 947.787 cv
cp
f
140.977 915.195 mo
141.164 917.315 143.419 919.616 145.717 919.471 cv
149.044 919.26 153.469 916.899 153.8 913.582 cv
154.114 910.429 149.89 906.647 147.376 906.579 cv
144.861 906.51 140.657 911.575 140.977 915.195 cv
140.977 915.195 li
cp
.866667 .862745 .835294 rgb
f
170.447 929.966 mo
166.223 929.814 159.656 932.224 159.057 936.781 cv
158.459 941.336 164.281 941.67 168.059 941.798 cv
173.308 941.977 180.399 936.544 179.268 933.748 cv
178.137 930.953 173.523 930.077 170.447 929.966 cv
cp
f
127.665 924.807 mo
122.21 924.712 112.851 926.876 112.658 931.662 cv
112.466 936.448 120.273 940.693 126.703 940.912 cv
132.217 941.099 139.419 939.639 140.057 934.698 cv
140.696 929.755 132.671 924.895 127.665 924.807 cv
cp
f
217.424 924.886 mo
228.248 924.171 256.781 921.043 251.946 934.954 cv
264.75 936.69 273.529 944.463 269.439 956.232 cv
262.988 956.467 256.314 957.08 250.782 956.655 cv
242.678 959.037 234.994 952.737 230.505 956.378 cv
233.192 958.782 226.042 964.383 218.554 962.606 cv
211.066 960.83 206.103 960.399 200.307 962.981 cv
194.392 975.573 181.791 964.747 174.376 962.381 cv
169.522 967.603 162.638 962.408 155.789 961.882 cv
147.243 967.594 138.665 959.961 129.687 957.097 cv
121.448 964.074 110.996 967.474 103.545 959.263 cv
84.2745 964.461 68.4298 957.652 65.2662 947.052 cv
62.1026 936.453 73.671 931.56 80.4908 927.358 cv
87.3101 923.156 94.0967 919.803 103.362 923.086 cv
126.579 922.943 155.178 930.041 174.891 923.476 cv
187.656 924.253 206.536 916.25 217.424 924.886 cv
217.424 924.886 li
cp
.858824 .623529 .313726 rgb
f
91.4498 903.206 mo
72.3638 901.777 58.9317 884.333 56.8438 867.388 cv
54.7564 850.445 56.4136 847.029 53.9717 837.23 cv
49.0797 817.601 38.7984 785.73 66.897 785.529 cv
94.9957 785.329 82.043 823.833 81.7369 852.548 cv
81.4312 881.265 90.3897 888.197 102.512 890.252 cv
114.635 892.306 135.484 892.612 144.031 901.21 cv
155.765 913.016 148.18 940.38 148.18 940.38 cv
148.18 940.38 144.787 920.345 137.665 914.208 cv
125.669 903.871 110.536 904.634 91.4498 903.206 cv
91.4498 903.206 li
cp
.411765 .207843 .486275 rgb
f
88.9517 900.794 mo
75.6046 898.369 60.8975 881.969 59.19 866.33 cv
57.482 850.69 59.0914 842.812 56.8404 833.828 cv
52.1207 814.992 41.2344 788.445 67.4136 788.26 cv
93.5928 788.075 79.0855 818.59 78.8355 845.096 cv
78.5855 871.601 83.9644 890.088 98.6954 892.536 cv
113.426 894.984 120.798 894.634 120.35 899.149 cv
119.903 903.664 102.299 903.219 88.9517 900.794 cv
88.9517 900.794 li
cp
.733333 .411765 .662745 rgb
f
64.5728 869.559 mo
58.1036 859.327 59.5035 838.5 57.5582 830.734 cv
53.4791 814.456 44.7886 790.078 67.4136 789.918 cv
90.0386 789.757 78.4468 832.712 77.4 850.837 cv
76.3531 868.962 71.0421 879.793 64.5728 869.559 cv
64.5728 869.559 li
cp
.807843 .596078 .788235 rgb
f
63.7008 797.738 mo
67.6153 797.738 70.7882 803.642 70.7882 810.925 cv
70.7882 818.209 67.6153 824.114 63.7008 824.114 cv
59.7867 824.114 56.6133 818.209 56.6133 810.925 cv
56.6133 803.642 59.7867 797.738 63.7008 797.738 cv
cp
.937255 .870588 .929412 rgb
f
65.7266 793.395 mo
72.6353 793.395 78.2359 796.195 78.2359 799.65 cv
78.2359 803.104 72.6353 805.904 65.7266 805.904 cv
58.8184 805.904 53.2178 803.104 53.2178 799.65 cv
53.2178 796.195 58.8184 793.395 65.7266 793.395 cv
cp
f
65.7266 791.873 mo
72.6353 791.873 78.2359 794.672 78.2359 798.128 cv
78.2359 801.582 72.6353 804.381 65.7266 804.381 cv
58.8184 804.381 53.2178 801.582 53.2178 798.128 cv
53.2178 794.672 58.8184 791.873 65.7266 791.873 cv
cp
.411765 .207843 .486275 rgb
f
144.197 904.047 mo
146.689 906.491 147.4 909.926 145.786 911.72 cv
144.171 913.514 140.843 912.988 138.351 910.544 cv
135.859 908.1 135.148 904.666 136.762 902.871 cv
138.377 901.077 141.705 901.603 144.197 904.047 cv
cp
.698039 .447059 .643137 rgb
f
63.7906 828.599 mo
65.2769 828.599 66.482 830.607 66.482 833.085 cv
66.482 835.562 65.2769 837.571 63.7906 837.571 cv
62.3043 837.571 61.0992 835.562 61.0992 833.085 cv
61.0992 830.607 62.3043 828.599 63.7906 828.599 cv
cp
.937255 .870588 .929412 rgb
f
144.074 953.078 mo
148.108 935.6 147.634 889.274 132.586 881.75 cv
121.934 876.424 112.855 875.575 110.565 866.91 cv
108.275 858.246 107.423 842.217 108.171 813.773 cv
108.919 785.329 77.3297 731.161 121.096 730.956 cv
164.863 730.752 134.429 790.082 133.064 814.73 cv
131.699 839.378 131.906 844.388 134.979 852.07 cv
140.816 866.664 156.007 861.609 164.18 869.782 cv
175.04 880.641 167.053 922.688 167.053 938.716 cv
160.048 946.04 154.319 950.517 144.074 953.078 cv
144.074 953.078 li
cp
.411765 .207843 .486275 rgb
f
133.713 878.373 mo
123.486 873.258 115.127 872.443 112.928 864.124 cv
110.73 855.804 110.63 841.85 111.348 814.54 cv
112.066 787.229 81.7354 733.784 119.811 733.587 cv
157.886 733.391 131.894 788.204 130.584 811.871 cv
129.274 835.537 129.472 846.805 132.422 854.181 cv
138.027 868.193 152.971 864.417 160.819 872.264 cv
171.246 882.691 166.448 918.755 157.353 920.29 cv
148.258 921.823 148.162 885.597 133.713 878.373 cv
133.713 878.373 li
cp
.733333 .411765 .662745 rgb
f
112.302 807.897 mo
112.458 779.627 88.503 737.28 117.327 735.576 cv
146.151 733.872 131.025 783.739 129.816 805.598 cv
128.605 827.457 129.042 843.448 124.446 844.305 cv
119.851 845.163 112.146 836.167 112.302 807.897 cv
cp
.807843 .596078 .788235 rgb
f
144.08 869.438 mo
137.692 870.961 134.959 875.229 137.977 878.97 cv
140.994 882.711 148.618 884.508 155.006 882.985 cv
161.395 881.461 164.127 877.194 161.11 873.453 cv
158.093 869.712 150.468 867.915 144.08 869.438 cv
cp
f
119.682 745.166 mo
125.48 745.166 130.179 752.958 130.179 762.57 cv
130.179 772.182 125.48 779.974 119.682 779.974 cv
113.885 779.974 109.186 772.182 109.186 762.57 cv
109.186 752.958 113.885 745.166 119.682 745.166 cv
cp
.937255 .870588 .929412 rgb
f
120.292 738.332 mo
110.861 738.332 103.215 742.154 103.215 746.87 cv
103.215 751.586 110.861 755.408 120.292 755.408 cv
129.723 755.408 137.368 751.586 137.368 746.87 cv
137.368 742.154 129.723 738.332 120.292 738.332 cv
cp
f
120.292 736.809 mo
110.861 736.809 103.215 740.631 103.215 745.347 cv
103.215 750.063 110.861 753.885 120.292 753.885 cv
129.723 753.885 137.368 750.063 137.368 745.347 cv
137.368 740.631 129.723 736.809 120.292 736.809 cv
cp
.411765 .207843 .486275 rgb
f
118.067 782.666 mo
120.099 782.666 121.746 786 121.746 790.112 cv
121.746 794.224 120.099 797.558 118.067 797.558 cv
116.036 797.558 114.389 794.224 114.389 790.112 cv
114.389 786 116.036 782.666 118.067 782.666 cv
cp
.937255 .870588 .929412 rgb
f
116.901 803.479 mo
117.991 803.479 118.875 804.764 118.875 806.35 cv
118.875 807.935 117.991 809.221 116.901 809.221 cv
115.811 809.221 114.927 807.935 114.927 806.35 cv
114.927 804.764 115.811 803.479 116.901 803.479 cv
cp
f
194.99 940.634 mo
202.621 903.531 229.362 900.615 242.622 888.454 cv
261.315 871.311 249.979 834.841 254.809 810.594 cv
256.687 801.167 266.619 791.796 262.151 780.627 cv
258.394 771.234 252.114 768.364 244.003 767.839 cv
235.893 767.315 222.726 771.58 220.499 780.215 cv
217.954 790.089 219.657 797.19 227.556 814.073 cv
233.849 827.524 235.573 843.669 234.249 857.634 cv
232.938 871.457 230.416 881.81 221.149 886.262 cv
211.881 890.714 200.428 896.451 192.437 906.753 cv
184.287 917.258 177.636 931.436 177.636 945.832 cv
185.519 945.832 188.712 939.065 194.99 940.634 cv
194.99 940.634 li
cp
.411765 .207843 .486275 rgb
f
240.112 888.036 mo
250.861 879.892 252.28 859.331 251.963 847.192 cv
251.478 828.585 249.923 820.757 253.584 807.112 cv
256.016 798.044 263.063 791.678 259.223 782.079 cv
255.995 774.006 250.597 771.54 243.627 771.089 cv
236.657 770.638 225.34 774.303 223.427 781.726 cv
221.24 790.211 222.704 796.313 229.492 810.823 cv
235.078 822.762 238.92 843.8 236.641 859.863 cv
234.531 874.743 231.542 882.533 224.004 886.948 cv
216.466 891.364 206.979 893.015 195.274 906.469 cv
189.875 912.673 188.277 922.845 192.812 923.471 cv
198.032 924.191 203.648 912.3 214.222 905.149 cv
223.389 898.95 234.425 892.344 240.112 888.036 cv
240.112 888.036 li
cp
.733333 .411765 .662745 rgb
f
251.995 809.223 mo
253.852 800.01 261.968 791.599 258.323 782.779 cv
255.259 775.361 250.136 773.095 243.521 772.68 cv
236.905 772.266 226.164 775.634 224.348 782.455 cv
222.273 790.252 223.469 797.133 231.489 809.637 cv
239.1 821.503 238.903 845.363 244.366 847.058 cv
249.828 848.753 249.945 819.399 251.995 809.223 cv
251.995 809.223 li
cp
.807843 .596078 .788235 rgb
f
241.001 776.458 mo
249.929 776.458 257.167 780.076 257.167 784.54 cv
257.167 789.004 249.929 792.623 241.001 792.623 cv
232.073 792.623 224.836 789.004 224.836 784.54 cv
224.836 780.076 232.073 776.458 241.001 776.458 cv
cp
.937255 .870588 .929412 rgb
f
241.472 777.135 mo
245.817 777.135 249.338 784.576 249.338 793.755 cv
249.338 802.935 245.817 810.377 241.472 810.377 cv
237.128 810.377 233.606 802.935 233.606 793.755 cv
233.606 784.576 237.128 777.135 241.472 777.135 cv
cp
f
241.001 774.427 mo
249.929 774.427 257.167 778.046 257.167 782.51 cv
257.167 786.974 249.929 790.593 241.001 790.593 cv
232.073 790.593 224.836 786.974 224.836 782.51 cv
224.836 778.046 232.073 774.427 241.001 774.427 cv
cp
.411765 .207843 .486275 rgb
f
242.487 817.735 mo
243.714 817.735 244.709 819.836 244.709 822.429 cv
244.709 825.022 243.714 827.124 242.487 827.124 cv
241.26 827.124 240.266 825.022 240.266 822.429 cv
240.266 819.836 241.26 817.735 242.487 817.735 cv
cp
.937255 .870588 .929412 rgb
f
180.138 857.336 mo
202.65 924.875 101.009 881.256 120.299 948.77 cv
122.884 948.48 126.797 949.874 127.958 950.206 cv
125.636 935.68 130.931 925.246 139.447 919.568 cv
166.688 901.408 179.051 920.241 201.201 884.623 cv
204.067 880.013 204.466 872.992 206.945 858.772 cv
209.425 844.551 207.669 829.336 194.267 827.435 cv
185.279 826.161 173.482 835.852 180.138 857.336 cv
cp
.411765 .207843 .486275 rgb
f
181.914 855.69 mo
187.16 871.427 185.078 885.659 178.701 892.165 cv
173.245 897.732 160.256 901.797 145.986 906.368 cv
134.713 909.978 125.091 919.15 127.759 921.102 cv
130.427 923.054 135.165 918.685 141.975 915.539 cv
148.051 912.732 154.968 910.192 160.565 909.379 cv
170.798 907.894 178.162 905.523 184.1 901.506 cv
191.588 896.442 197.314 889.12 200.476 881.916 cv
203.101 875.936 202.925 871.894 205.169 859.02 cv
207.414 846.145 204.302 831.354 194.198 830.141 cv
186.038 829.162 175.888 836.24 181.914 855.689 cv
181.914 855.69 li
cp
.733333 .411765 .662745 rgb
f
184.067 857.484 mo
187.453 865.87 187.97 883.252 190.787 884.069 cv
193.604 884.886 201.212 871.574 203.016 859.02 cv
204.82 846.465 202.319 832.042 194.198 830.859 cv
187.64 829.904 177.21 840.5 184.067 857.484 cv
184.067 857.484 li
cp
.807843 .596078 .788235 rgb
f
194.952 836.494 mo
198.024 836.494 200.514 841.755 200.514 848.247 cv
200.514 854.737 198.024 859.999 194.952 859.999 cv
191.88 859.999 189.39 854.737 189.39 848.247 cv
189.39 841.755 191.88 836.494 194.952 836.494 cv
cp
.937255 .870588 .929412 rgb
f
192.348 833.325 mo
197.995 833.325 202.573 835.991 202.573 839.28 cv
202.573 842.569 197.995 845.235 192.348 845.235 cv
186.7 845.235 182.123 842.569 182.123 839.28 cv
182.123 835.991 186.7 833.325 192.348 833.325 cv
cp
f
192.348 831.965 mo
197.995 831.965 202.573 834.631 202.573 837.92 cv
202.573 841.209 197.995 843.876 192.348 843.876 cv
186.7 843.876 182.123 841.209 182.123 837.92 cv
182.123 834.631 186.7 831.965 192.348 831.965 cv
cp
.411765 .207843 .486275 rgb
f
195.401 863.229 mo
196.837 863.229 198.003 865.438 198.003 868.163 cv
198.003 870.888 196.837 873.097 195.401 873.097 cv
193.964 873.097 192.799 870.888 192.799 868.163 cv
192.799 865.438 193.964 863.229 195.401 863.229 cv
cp
.937255 .870588 .929412 rgb
f
257.352 939.638 mo
253.88 923.183 248.382 899.443 232.68 900.589 cv
216.978 901.737 207.813 925.269 202.56 943.889 cv
214.673 950.337 250.482 949.999 257.352 939.638 cv
cp
.305882 .305882 .305882 rgb
f
255.397 938.694 mo
252.173 923.643 247.067 901.929 232.485 902.978 cv
217.903 904.027 209.393 925.55 204.515 942.582 cv
215.764 948.48 249.017 948.169 255.397 938.694 cv
255.397 938.694 li
cp
.580392 .568627 .517647 rgb
f
252.935 934.904 mo
250.27 922.461 246.049 904.511 233.995 905.378 cv
221.941 906.246 214.905 924.039 210.873 938.118 cv
220.172 942.994 247.661 942.737 252.935 934.904 cv
cp
.701961 .694118 .631373 rgb
f
235.104 905.358 mo
234.742 905.35 234.369 905.352 233.992 905.379 cv
227.938 905.815 219.714 912.853 219.376 916.885 cv
219.037 920.918 227.545 926.55 234.149 926.775 cv
239.775 926.965 248.36 923.881 248.928 919.787 cv
249.495 915.691 241.952 905.527 235.104 905.358 cv
cp
.866667 .862745 .835294 rgb
f
71.8092 944.843 mo
74.1343 931.929 90.9683 918.264 100.682 918.799 cv
110.395 919.335 121.507 933.341 121.114 947.696 cv
101.429 955.65 85.4073 951.566 71.8092 944.843 cv
cp
.305882 .305882 .305882 rgb
f
73.3316 943.828 mo
75.9107 931.421 93.2047 920.142 100.765 920.677 cv
108.325 921.212 122.014 934.864 121.621 946.427 cv
101.937 954.381 85.6612 950.297 73.3316 943.828 cv
cp
.580392 .568627 .517647 rgb
f
177.008 949.481 mo
180.088 938.212 190.943 925.554 202.313 927.862 cv
213.683 930.169 218.421 940.777 220.195 950.269 cv
207.307 953.868 189.865 954.989 177.008 949.481 cv
cp
.305882 .305882 .305882 rgb
f
178.816 948.723 mo
181.639 938.399 191.585 926.8 202.002 928.915 cv
212.42 931.03 216.761 940.749 218.386 949.445 cv
206.578 952.743 190.597 953.77 178.816 948.723 cv
178.816 948.723 li
cp
.580392 .568627 .517647 rgb
f
122.781 948.225 mo
127.118 939.471 133.139 902.421 147.761 902.3 cv
162.384 902.18 166.681 942.018 169.959 951.139 cv
155.01 958.29 133.688 957.899 122.781 948.225 cv
cp
.305882 .305882 .305882 rgb
f
124.406 947.365 mo
128.444 939.253 134.05 904.924 147.666 904.813 cv
161.281 904.702 165.282 941.613 168.334 950.064 cv
154.415 956.69 134.561 956.328 124.406 947.365 cv
cp
.580392 .568627 .517647 rgb
f
79.6993 939.051 mo
81.6656 929.591 95.336 921.474 101.101 921.882 cv
106.865 922.291 116.819 932.216 116.52 941.033 cv
101.51 947.098 87.7965 943.765 79.6993 939.051 cv
cp
.701961 .694118 .631373 rgb
f
100.545 921.866 mo
97.0391 921.931 86.8726 925.694 86.5928 928.652 cv
86.3131 931.611 93.5147 934.814 98.6763 934.99 cv
104.121 935.175 111.521 931.053 111.582 928.909 cv
111.644 926.764 104.145 922.099 101.107 921.884 cv
100.927 921.872 100.74 921.862 100.545 921.866 cv
cp
.866667 .862745 .835294 rgb
f
132.399 935.484 mo
135.045 930.169 137.907 907.825 147.638 907.604 cv
157.369 907.383 159.181 931.715 161.18 937.253 cv
153.48 953.021 140.453 950.722 132.399 935.484 cv
cp
.701961 .694118 .631373 rgb
f
146.313 954.974 mo
146.47 950.342 146.873 945.688 146.271 941.077 cv
143.316 927.281 135.941 921.37 128.003 921.085 cv
119.827 920.791 111.413 925.524 106.261 931.602 cv
102.878 935.594 100.116 944.028 100.014 947.05 cv
107.57 957.503 132.297 959.694 146.313 954.974 cv
146.313 954.974 li
cp
.305882 .305882 .305882 rgb
f
144.358 953.906 mo
144.505 949.595 144.879 945.263 144.319 940.972 cv
138.736 914.906 116.199 921.84 106.751 932.989 cv
103.602 936.704 101.365 943.718 101.27 946.532 cv
108.302 956.259 131.315 958.298 144.358 953.906 cv
cp
.580392 .568627 .517647 rgb
f
183.993 946.422 mo
186.088 938.757 193.473 930.146 201.208 931.715 cv
208.942 933.286 212.166 940.502 213.372 946.959 cv
201.726 951.566 189.08 949.429 183.993 946.422 cv
cp
.701961 .694118 .631373 rgb
f
151.111 940.643 mo
152.889 934.335 161.089 925.994 169.02 925.656 cv
179.59 925.205 190.924 934.92 193.983 950.79 cv
189.236 956.554 180.236 958.316 173.023 959.2 cv
165.811 960.084 159.993 957.889 152.054 955.529 cv
148.871 951.254 149.334 946.952 151.111 940.643 cv
151.111 940.643 li
cp
.305882 .305882 .305882 rgb
f
199.769 931.537 mo
196.566 931.394 191.273 933.158 191.327 936.296 cv
191.382 939.435 194.804 942.052 199.154 942.2 cv
203.679 942.354 208.036 939.621 207.698 936.647 cv
207.361 933.674 204.04 932.294 201.214 931.719 cv
200.731 931.622 200.248 931.558 199.769 931.537 cv
199.769 931.537 li
cp
.866667 .862745 .835294 rgb
f
152.63 941.478 mo
155.309 934.94 161.301 928.012 168.297 927.203 cv
178.516 926.02 189.583 934.843 192.554 950.259 cv
188.116 955.649 179.699 957.296 172.954 958.124 cv
166.21 958.95 160.388 956.658 153.346 954.691 cv
150.37 950.694 150.958 945.559 152.63 941.478 cv
cp
.580392 .568627 .517647 rgb
f
141.3 949.044 mo
141.415 945.661 141.709 942.261 141.269 938.893 cv
136.887 918.437 119.201 923.879 111.786 932.628 cv
109.315 935.544 107.56 941.048 107.485 943.256 cv
113.004 950.89 131.063 952.49 141.3 949.044 cv
141.3 949.044 li
cp
.701961 .694118 .631373 rgb
f
155.545 947.787 mo
155.348 938.639 163.711 930.569 168.799 930.028 cv
176.146 929.246 184.07 935.607 186.205 946.683 cv
183.001 950.574 176.17 951.224 172.057 952.36 cv
158.4 952.444 155.545 947.787 155.545 947.787 cv
cp
f
140.977 915.195 mo
141.164 917.315 143.419 919.616 145.717 919.471 cv
149.044 919.26 153.469 916.899 153.8 913.582 cv
154.114 910.429 149.89 906.647 147.376 906.579 cv
144.861 906.51 140.657 911.575 140.977 915.195 cv
140.977 915.195 li
cp
.866667 .862745 .835294 rgb
f
170.447 929.966 mo
166.223 929.814 159.656 932.224 159.057 936.781 cv
158.459 941.336 164.281 941.67 168.059 941.798 cv
173.308 941.977 180.399 936.544 179.268 933.748 cv
178.137 930.953 173.523 930.077 170.447 929.966 cv
cp
f
127.665 924.807 mo
122.21 924.712 112.851 926.876 112.658 931.662 cv
112.466 936.448 120.273 940.693 126.703 940.912 cv
132.217 941.099 139.419 939.639 140.057 934.698 cv
140.696 929.755 132.671 924.895 127.665 924.807 cv
cp
f
759.939 761.457 mo
753.016 765.875 746.351 773.204 741.565 778.608 cv
727.542 794.443 722.371 811.885 716.65 834.325 cv
713.211 847.816 711.041 866.61 702.051 880.129 cv
686.408 903.658 663.647 914.061 638.596 924.271 cv
649.042 914.967 663.22 898.539 667.48 879.278 cv
679.517 824.848 683.917 816.532 702.089 789.384 cv
712.169 774.327 737.457 763.307 759.939 761.457 cv
759.939 761.457 li
cp
.231373 .494118 .054902 rgb
f
749.52 765.255 mo
722.35 798.134 721.981 805.148 713.293 841.084 cv
710.908 850.949 707.839 866.278 701.132 877.68 cv
689.461 897.524 678.315 916.886 641.956 920.862 cv
650.038 912.822 667.98 888.095 671.675 872.455 cv
681.948 828.971 690.909 804.221 705.052 788.567 cv
713.416 779.31 728.184 770.294 749.52 765.255 cv
cp
.458824 .839216 .203922 rgb
f
712.949 805.856 mo
706.559 815.153 702.975 825.561 700.491 835.953 cv
695.409 857.212 691.421 883.295 675.149 898.409 cv
658.878 913.522 683.958 905.399 647.564 915.973 cv
699.168 898.655 670.309 840.56 712.949 805.856 cv
cp
.231373 .494118 .054902 rgb
f
699.879 879.815 mo
688.63 898.896 677.009 917.034 641.952 920.867 cv
650.033 912.827 666.619 889.22 670.314 873.581 cv
671.598 868.143 671.875 860.099 673.337 854.923 cv
675.217 863.2 663.723 896.483 668.127 900.623 cv
672.073 904.333 692.129 890.473 699.879 879.815 cv
699.879 879.815 li
cp
f
711.648 840.484 mo
722.021 788.65 742.625 769.691 742.625 769.691 cv
742.625 769.691 694.441 775.482 686.56 834.25 cv
699.153 811.347 712.978 803.926 712.978 803.926 cv
712.978 803.926 709.322 813.922 711.648 840.484 cv
cp
.529412 .937255 .25098 rgb
f
723.182 778.883 mo
719.719 781.507 717.872 784.902 719.057 786.465 cv
720.242 788.029 724.01 787.17 727.472 784.546 cv
730.935 781.922 732.782 778.528 731.597 776.964 cv
730.412 775.401 726.644 776.259 723.182 778.883 cv
cp
.886275 .988235 .662745 rgb
f
707 794.871 mo
704.113 797.529 703.004 801.021 704.523 802.67 cv
706.043 804.32 709.614 803.502 712.501 800.844 cv
715.387 798.186 716.496 794.694 714.977 793.044 cv
713.458 791.395 709.886 792.212 707 794.871 cv
cp
f
595.437 673.358 mo
610.386 712.072 608.905 733.152 598 763.935 cv
593.749 775.935 585.461 795.75 585.887 809.007 cv
586.986 843.136 606.134 910.308 635.253 943.021 cv
624.416 893.534 633.729 838.036 640.896 811.075 cv
645.138 795.113 646.605 786.378 644.867 771.883 cv
643.129 757.389 639.305 743.37 633.513 730.544 cv
623.812 709.061 604.314 679.462 595.437 673.358 cv
595.437 673.358 li
cp
.231373 .494118 .054902 rgb
f
600.21 681.086 mo
612.786 713.652 609.617 740.193 600.451 766.084 cv
596.878 776.176 589.502 795.69 590.285 811.031 cv
592.27 849.923 612.192 899.707 627.527 921.765 cv
623.086 877.028 628.668 833.714 636.353 815.024 cv
640.776 804.269 644.284 780.676 641.821 765.55 cv
636.329 731.812 614.696 700.554 600.21 681.086 cv
600.21 681.086 li
cp
.458824 .839216 .203922 rgb
f
617.65 742.436 mo
628.579 780.412 613.907 792.876 606.756 819.78 cv
601.944 837.883 612.381 881.923 622.482 899.619 cv
616.309 867.836 608.815 839.276 613.194 825.862 cv
623.588 794.017 637.784 791.946 617.65 742.436 cv
617.65 742.436 li
cp
.231373 .494118 .054902 rgb
f
604.033 688.402 mo
604.033 688.402 632.743 729.863 636.501 754.744 cv
639.644 775.547 639.378 784.914 626.833 814.976 cv
626.833 814.976 636.921 764.281 618.28 744.446 cv
626.358 774.89 608.08 790.302 597.744 795.772 cv
597.744 795.772 609.405 758.188 611.78 736.689 cv
614.154 715.19 604.033 688.402 604.033 688.402 cv
604.033 688.402 li
cp
.529412 .937255 .25098 rgb
f
604.08 876.538 mo
607.46 885.662 614.477 899.427 620.164 901.153 cv
625.305 902.712 626.803 886.382 630.017 881.043 cv
627.816 895.763 627.916 912.154 630.734 933.502 cv
620.12 920.498 609.692 899.927 604.08 876.538 cv
cp
.231373 .494118 .054902 rgb
f
613.316 707.577 mo
611.35 708.617 611.473 713.848 613.592 719.261 cv
615.711 724.674 619.023 728.218 620.989 727.178 cv
622.956 726.137 622.832 720.906 620.713 715.493 cv
618.594 710.081 615.283 706.536 613.316 707.577 cv
cp
.886275 .988235 .662745 rgb
f
622.336 731.198 mo
620.267 732.294 619.877 736.472 621.466 740.532 cv
623.055 744.591 626.021 746.995 628.091 745.899 cv
630.161 744.804 630.551 740.625 628.961 736.565 cv
627.373 732.505 624.406 730.102 622.336 731.198 cv
cp
f
478.339 733.431 mo
493.645 776.603 540.046 787.293 568.203 824.625 cv
584.132 845.745 585.805 869.87 592.056 900.364 cv
598.308 930.859 596.335 943.706 596.335 943.706 cv
596.335 943.706 592.065 925.438 577.494 906.469 cv
556.794 879.521 529.752 865.881 510.112 844.301 cv
485.992 817.799 471.745 782.409 478.339 733.431 cv
478.339 733.431 li
cp
.231373 .494118 .054902 rgb
f
479.956 741.672 mo
497.61 780.916 541.997 790.778 567.024 827.178 cv
580.782 847.187 581.384 864.036 585.583 883.281 cv
590.259 904.717 600.464 931.228 592.815 948.706 cv
596.165 901.841 552.177 878.768 518.783 847.736 cv
491.596 822.472 474.793 790.34 479.956 741.672 cv
479.956 741.672 li
cp
.458824 .839216 .203922 rgb
f
580.363 856.435 mo
581.451 869.963 586.863 891.426 581.582 897.364 cv
579.332 899.893 557.729 880.217 554.296 879.816 cv
576.485 901.074 594.327 922.988 595.561 950.996 cv
599.857 938.415 594.998 918.861 590.26 899.497 cv
588.526 892.413 588.183 887.451 587.068 880.11 cv
585.573 870.259 582.543 861.556 580.363 856.435 cv
580.363 856.435 li
cp
.231373 .494118 .054902 rgb
f
482.582 751.262 mo
482.582 751.262 482.878 777.919 493.108 800.335 cv
503.602 823.328 534.52 833.247 541.649 858.584 cv
543.992 834.504 508.367 796.867 508.367 796.867 cv
508.367 796.867 547.054 806.581 559.958 830.619 cv
555.881 806.556 529.393 795.276 510.808 782.915 cv
495.236 772.557 482.582 751.262 482.582 751.262 cv
cp
.529412 .937255 .25098 rgb
f
505.248 795.28 mo
516.144 807.695 529.052 816.507 544.874 837.188 cv
562.603 860.362 583.175 895.669 592.49 912.724 cv
575.77 871.041 565.187 825.936 505.248 795.28 cv
505.248 795.28 li
cp
.231373 .494118 .054902 rgb
f
486.608 764.214 mo
488.025 763.502 490.329 765.219 491.754 768.052 cv
493.18 770.884 493.188 773.758 491.772 774.471 cv
490.356 775.184 488.052 773.466 486.626 770.633 cv
485.2 767.801 485.192 764.927 486.608 764.214 cv
cp
.886275 .988235 .662745 rgb
f
495.632 777.752 mo
497.668 776.726 500.655 778.55 502.303 781.826 cv
503.952 785.1 503.638 788.586 501.602 789.611 cv
499.566 790.635 496.58 788.812 494.931 785.537 cv
493.282 782.261 493.596 778.776 495.632 777.752 cv
cp
f
643.744 924.886 mo
654.568 924.171 683.101 921.043 678.266 934.954 cv
691.07 936.69 699.849 944.463 695.759 956.232 cv
689.309 956.467 682.634 957.08 677.102 956.655 cv
668.998 959.037 661.315 952.737 656.825 956.378 cv
659.512 958.782 652.362 964.383 644.875 962.606 cv
637.387 960.83 632.423 960.399 626.627 962.981 cv
620.712 975.573 608.111 964.747 600.696 962.381 cv
595.842 967.603 588.959 962.408 582.109 961.882 cv
573.563 967.594 564.985 959.961 556.007 957.097 cv
547.768 964.074 537.316 967.474 529.866 959.263 cv
510.595 964.462 494.75 957.652 491.586 947.052 cv
488.423 936.453 499.991 931.56 506.811 927.358 cv
513.63 923.156 520.417 919.803 529.682 923.086 cv
552.899 922.943 581.499 930.041 601.211 923.476 cv
613.977 924.253 632.856 916.25 643.744 924.886 cv
643.744 924.886 li
cp
.858824 .623529 .313726 rgb
f
517.785 903.136 mo
498.699 901.708 485.267 884.263 483.179 867.32 cv
481.092 850.376 482.749 846.96 480.307 837.161 cv
475.415 817.532 465.134 785.661 493.232 785.46 cv
521.331 785.259 508.378 823.763 508.072 852.48 cv
507.767 881.196 516.725 888.128 528.848 890.182 cv
540.97 892.238 561.819 892.543 570.366 901.141 cv
582.1 912.947 574.515 940.311 574.515 940.311 cv
574.515 940.311 571.122 920.276 564 914.139 cv
552.003 903.802 536.871 904.565 517.785 903.136 cv
517.785 903.136 li
cp
.411765 .207843 .486275 rgb
f
515.282 900.736 mo
501.935 898.31 487.228 881.911 485.521 866.271 cv
483.813 850.631 485.422 842.753 483.171 833.769 cv
478.451 814.933 467.565 788.386 493.744 788.202 cv
519.923 788.016 505.416 818.532 505.166 845.038 cv
504.916 871.543 510.295 890.03 525.025 892.477 cv
539.756 894.924 547.128 894.576 546.681 899.09 cv
546.233 903.605 528.629 903.161 515.282 900.736 cv
515.282 900.736 li
cp
.733333 .411765 .662745 rgb
f
490.908 869.49 mo
484.439 859.257 485.839 838.43 483.893 830.666 cv
479.815 814.387 471.124 790.008 493.749 789.848 cv
516.374 789.688 504.782 832.644 503.735 850.769 cv
502.689 868.893 497.377 879.723 490.908 869.49 cv
490.908 869.49 li
cp
.807843 .596078 .788235 rgb
f
490.036 797.669 mo
493.95 797.669 497.124 803.573 497.124 810.856 cv
497.124 818.14 493.95 824.044 490.036 824.044 cv
486.122 824.044 482.949 818.14 482.949 810.856 cv
482.949 803.573 486.122 797.669 490.036 797.669 cv
cp
.937255 .870588 .929412 rgb
f
492.062 793.326 mo
498.971 793.326 504.571 796.127 504.571 799.581 cv
504.571 803.035 498.971 805.836 492.062 805.836 cv
485.153 805.836 479.553 803.035 479.553 799.581 cv
479.553 796.127 485.153 793.326 492.062 793.326 cv
cp
f
492.062 791.803 mo
498.971 791.803 504.571 794.604 504.571 798.058 cv
504.571 801.512 498.971 804.312 492.062 804.312 cv
485.153 804.312 479.553 801.512 479.553 798.058 cv
479.553 794.604 485.153 791.803 492.062 791.803 cv
cp
.411765 .207843 .486275 rgb
f
570.532 903.978 mo
573.024 906.421 573.735 909.857 572.121 911.651 cv
570.507 913.445 567.178 912.919 564.687 910.475 cv
562.194 908.032 561.483 904.596 563.097 902.802 cv
564.711 901.008 568.04 901.535 570.532 903.978 cv
cp
.698039 .447059 .643137 rgb
f
490.126 828.53 mo
491.612 828.53 492.817 830.539 492.817 833.016 cv
492.817 835.493 491.612 837.502 490.126 837.502 cv
488.639 837.502 487.434 835.493 487.434 833.016 cv
487.434 830.539 488.639 828.53 490.126 828.53 cv
cp
.937255 .870588 .929412 rgb
f
570.41 953.009 mo
574.443 935.532 573.969 889.206 558.92 881.681 cv
548.269 876.355 539.19 875.505 536.9 866.841 cv
534.61 858.176 533.758 842.148 534.506 813.704 cv
535.254 785.26 503.665 731.091 547.432 730.887 cv
591.198 730.682 560.764 790.013 559.399 814.662 cv
558.034 839.31 558.241 844.319 561.314 852.001 cv
567.151 866.594 582.342 861.54 590.516 869.713 cv
601.375 880.573 593.388 922.62 593.388 938.648 cv
586.383 945.971 580.654 950.448 570.41 953.009 cv
570.41 953.009 li
cp
.411765 .207843 .486275 rgb
f
560.048 878.303 mo
549.821 873.19 541.462 872.374 539.264 864.054 cv
537.065 855.736 536.965 841.781 537.683 814.47 cv
538.401 787.16 508.071 733.714 546.146 733.518 cv
584.221 733.322 558.23 788.135 556.919 811.801 cv
555.609 835.467 555.807 846.737 558.758 854.112 cv
564.362 868.125 579.306 864.347 587.154 872.195 cv
597.581 882.622 592.783 918.687 583.688 920.22 cv
574.593 921.754 574.497 885.528 560.048 878.303 cv
560.048 878.303 li
cp
.733333 .411765 .662745 rgb
f
538.637 807.828 mo
538.793 779.557 514.838 737.211 543.663 735.506 cv
572.487 733.802 557.361 783.669 556.15 805.529 cv
554.94 827.388 555.378 843.378 550.782 844.236 cv
546.186 845.093 538.482 836.098 538.637 807.828 cv
cp
.807843 .596078 .788235 rgb
f
570.415 869.369 mo
564.027 870.892 561.294 875.16 564.312 878.901 cv
567.329 882.641 574.953 884.439 581.341 882.916 cv
587.73 881.392 590.462 877.125 587.445 873.384 cv
584.428 869.643 576.803 867.845 570.415 869.369 cv
cp
f
546.018 745.096 mo
551.815 745.096 556.514 752.888 556.514 762.501 cv
556.514 772.113 551.815 779.905 546.018 779.905 cv
540.22 779.905 535.521 772.113 535.521 762.501 cv
535.521 752.888 540.22 745.096 546.018 745.096 cv
cp
.937255 .870588 .929412 rgb
f
546.627 738.262 mo
537.196 738.262 529.551 742.086 529.551 746.8 cv
529.551 751.516 537.196 755.339 546.627 755.339 cv
556.058 755.339 563.704 751.516 563.704 746.8 cv
563.704 742.086 556.058 738.262 546.627 738.262 cv
cp
f
546.627 736.74 mo
537.196 736.74 529.551 740.563 529.551 745.278 cv
529.551 749.994 537.196 753.817 546.627 753.817 cv
556.058 753.817 563.704 749.994 563.704 745.278 cv
563.704 740.563 556.058 736.74 546.627 736.74 cv
cp
.411765 .207843 .486275 rgb
f
544.402 782.596 mo
546.434 782.596 548.081 785.93 548.081 790.043 cv
548.081 794.155 546.434 797.489 544.402 797.489 cv
542.371 797.489 540.724 794.155 540.724 790.043 cv
540.724 785.93 542.371 782.596 544.402 782.596 cv
cp
.937255 .870588 .929412 rgb
f
543.236 803.41 mo
544.326 803.41 545.21 804.696 545.21 806.281 cv
545.21 807.867 544.326 809.152 543.236 809.152 cv
542.147 809.152 541.263 807.867 541.263 806.281 cv
541.263 804.696 542.147 803.41 543.236 803.41 cv
cp
f
621.325 940.565 mo
628.956 903.462 655.697 900.545 668.957 888.385 cv
687.65 871.242 676.315 834.772 681.145 810.525 cv
683.023 801.098 692.955 791.727 688.486 780.557 cv
684.73 771.165 678.449 768.294 670.339 767.77 cv
662.228 767.246 649.061 771.51 646.835 780.147 cv
644.29 790.02 645.993 797.121 653.891 814.003 cv
660.184 827.455 661.908 843.599 660.584 857.565 cv
659.273 871.388 656.751 881.741 647.483 886.193 cv
638.216 890.645 626.763 896.381 618.772 906.683 cv
610.622 917.189 603.971 931.367 603.971 945.762 cv
611.854 945.762 615.047 938.996 621.325 940.565 cv
621.325 940.565 li
cp
.411765 .207843 .486275 rgb
f
666.447 887.966 mo
677.196 879.823 678.615 859.262 678.298 847.124 cv
677.813 828.515 676.259 820.688 679.919 807.044 cv
682.351 797.976 689.398 791.609 685.559 782.01 cv
682.33 773.938 676.932 771.471 669.962 771.02 cv
662.992 770.57 651.676 774.234 649.763 781.657 cv
647.575 790.142 649.039 796.244 655.827 810.753 cv
661.413 822.694 665.254 843.732 662.977 859.794 cv
660.866 874.674 657.878 882.463 650.339 886.879 cv
642.801 891.294 633.315 892.946 621.608 906.4 cv
616.21 912.605 614.613 922.776 619.148 923.402 cv
624.367 924.123 629.983 912.231 640.557 905.081 cv
649.724 898.881 660.761 892.275 666.447 887.966 cv
666.447 887.966 li
cp
.733333 .411765 .662745 rgb
f
678.331 809.155 mo
680.187 799.941 688.303 791.53 684.659 782.71 cv
681.594 775.293 676.471 773.026 669.856 772.612 cv
663.24 772.198 652.5 775.565 650.684 782.385 cv
648.607 790.182 649.804 797.064 657.825 809.569 cv
665.436 821.434 665.238 845.294 670.701 846.989 cv
676.164 848.683 676.28 819.331 678.331 809.155 cv
678.331 809.155 li
cp
.807843 .596078 .788235 rgb
f
667.336 776.388 mo
676.265 776.388 683.503 780.007 683.503 784.471 cv
683.503 788.935 676.265 792.554 667.336 792.554 cv
658.408 792.554 651.17 788.935 651.17 784.471 cv
651.17 780.007 658.408 776.388 667.336 776.388 cv
cp
.937255 .870588 .929412 rgb
f
667.808 777.066 mo
672.152 777.066 675.674 784.507 675.674 793.686 cv
675.674 802.866 672.152 810.307 667.808 810.307 cv
663.463 810.307 659.941 802.866 659.941 793.686 cv
659.941 784.507 663.463 777.066 667.808 777.066 cv
cp
f
667.336 774.358 mo
676.265 774.358 683.503 777.977 683.503 782.441 cv
683.503 786.905 676.265 790.524 667.336 790.524 cv
658.408 790.524 651.17 786.905 651.17 782.441 cv
651.17 777.977 658.408 774.358 667.336 774.358 cv
cp
.411765 .207843 .486275 rgb
f
668.823 817.666 mo
670.05 817.666 671.044 819.767 671.044 822.36 cv
671.044 824.953 670.05 827.054 668.823 827.054 cv
667.596 827.054 666.601 824.953 666.601 822.36 cv
666.601 819.767 667.596 817.666 668.823 817.666 cv
cp
.937255 .870588 .929412 rgb
f
606.473 857.267 mo
628.986 924.805 527.344 881.187 546.634 948.701 cv
549.22 948.412 553.132 949.805 554.294 950.136 cv
551.971 935.611 557.266 925.177 565.782 919.5 cv
593.023 901.338 605.386 920.171 627.536 884.553 cv
630.402 879.944 630.802 872.923 633.281 858.703 cv
635.76 844.483 634.004 829.266 620.602 827.366 cv
611.614 826.091 599.817 835.783 606.473 857.267 cv
cp
.411765 .207843 .486275 rgb
f
608.249 855.621 mo
613.495 871.358 611.413 885.589 605.036 892.096 cv
599.58 897.663 586.592 901.728 572.321 906.299 cv
561.049 909.91 551.426 919.081 554.094 921.033 cv
556.762 922.985 561.501 918.617 568.31 915.47 cv
574.386 912.663 581.303 910.124 586.9 909.311 cv
597.134 907.825 604.497 905.454 610.435 901.437 cv
617.924 896.373 623.648 889.051 626.811 881.846 cv
629.436 875.867 629.26 871.825 631.504 858.951 cv
633.749 846.077 630.637 831.286 620.533 830.073 cv
612.374 829.092 602.223 836.17 608.249 855.621 cv
608.249 855.621 li
cp
.733333 .411765 .662745 rgb
f
610.402 857.415 mo
613.788 865.801 614.305 883.182 617.122 884 cv
619.939 884.817 627.547 871.504 629.351 858.951 cv
631.155 846.396 628.654 831.973 620.533 830.79 cv
613.975 829.835 603.545 840.43 610.402 857.415 cv
610.402 857.415 li
cp
.807843 .596078 .788235 rgb
f
621.288 836.424 mo
624.359 836.424 626.85 841.687 626.85 848.177 cv
626.85 854.669 624.359 859.93 621.288 859.93 cv
618.215 859.93 615.725 854.669 615.725 848.177 cv
615.725 841.687 618.215 836.424 621.288 836.424 cv
cp
.937255 .870588 .929412 rgb
f
618.683 833.256 mo
624.33 833.256 628.908 835.922 628.908 839.211 cv
628.908 842.5 624.33 845.167 618.683 845.167 cv
613.036 845.167 608.458 842.5 608.458 839.211 cv
608.458 835.922 613.036 833.256 618.683 833.256 cv
cp
f
618.683 831.896 mo
624.33 831.896 628.908 834.562 628.908 837.851 cv
628.908 841.14 624.33 843.806 618.683 843.806 cv
613.036 843.806 608.458 841.14 608.458 837.851 cv
608.458 834.562 613.036 831.896 618.683 831.896 cv
cp
.411765 .207843 .486275 rgb
f
621.736 863.16 mo
623.173 863.16 624.337 865.369 624.337 868.094 cv
624.337 870.819 623.173 873.028 621.736 873.028 cv
620.299 873.028 619.134 870.819 619.134 868.094 cv
619.134 865.369 620.299 863.16 621.736 863.16 cv
cp
.937255 .870588 .929412 rgb
f
683.672 939.638 mo
680.2 923.183 674.702 899.443 659 900.589 cv
643.298 901.737 634.133 925.269 628.88 943.889 cv
640.994 950.337 676.802 949.999 683.672 939.638 cv
cp
.305882 .305882 .305882 rgb
f
681.717 938.694 mo
678.493 923.643 673.387 901.929 658.805 902.978 cv
644.224 904.027 635.713 925.55 630.835 942.582 cv
642.085 948.48 675.337 948.169 681.717 938.694 cv
681.717 938.694 li
cp
.580392 .568627 .517647 rgb
f
679.255 934.904 mo
676.59 922.461 672.37 904.511 660.315 905.378 cv
648.261 906.246 641.226 924.039 637.193 938.118 cv
646.492 942.994 673.982 942.737 679.255 934.904 cv
cp
.701961 .694118 .631373 rgb
f
661.424 905.358 mo
661.063 905.35 660.689 905.352 660.312 905.379 cv
654.258 905.815 646.034 912.853 645.696 916.885 cv
645.357 920.918 653.865 926.55 660.47 926.774 cv
666.096 926.965 674.681 923.881 675.248 919.786 cv
675.815 915.691 668.272 905.527 661.424 905.358 cv
cp
.866667 .862745 .835294 rgb
f
498.129 944.843 mo
500.455 931.929 517.289 918.264 527.002 918.799 cv
536.715 919.335 547.827 933.341 547.434 947.696 cv
527.75 955.65 511.728 951.566 498.129 944.843 cv
cp
.305882 .305882 .305882 rgb
f
499.652 943.828 mo
502.231 931.421 519.525 920.142 527.085 920.677 cv
534.646 921.212 548.335 934.864 547.941 946.427 cv
528.257 954.381 511.982 950.297 499.652 943.828 cv
cp
.580392 .568627 .517647 rgb
f
603.328 949.481 mo
606.408 938.212 617.264 925.554 628.633 927.862 cv
640.003 930.169 644.742 940.777 646.515 950.269 cv
633.628 953.868 616.186 954.989 603.328 949.481 cv
cp
.305882 .305882 .305882 rgb
f
605.137 948.723 mo
607.959 938.399 617.905 926.8 628.322 928.915 cv
638.74 931.03 643.082 940.749 644.706 949.445 cv
632.898 952.743 616.918 953.77 605.137 948.723 cv
605.137 948.723 li
cp
.580392 .568627 .517647 rgb
f
549.101 948.225 mo
553.439 939.471 559.46 902.421 574.082 902.3 cv
588.704 902.18 593.002 942.018 596.279 951.139 cv
581.33 958.29 560.008 957.899 549.101 948.225 cv
cp
.305882 .305882 .305882 rgb
f
550.726 947.365 mo
554.765 939.253 560.371 904.924 573.986 904.813 cv
587.601 904.701 591.603 941.613 594.654 950.064 cv
580.735 956.69 560.881 956.328 550.726 947.365 cv
cp
.580392 .568627 .517647 rgb
f
506.02 939.051 mo
507.986 929.591 521.656 921.474 527.421 921.882 cv
533.186 922.291 543.14 932.216 542.84 941.033 cv
527.831 947.098 514.117 943.765 506.02 939.051 cv
cp
.701961 .694118 .631373 rgb
f
526.865 921.866 mo
523.359 921.931 513.193 925.693 512.913 928.652 cv
512.633 931.611 519.835 934.814 524.997 934.99 cv
530.441 935.174 537.841 931.053 537.902 928.909 cv
537.964 926.763 530.465 922.099 527.428 921.884 cv
527.248 921.872 527.06 921.862 526.865 921.866 cv
cp
.866667 .862745 .835294 rgb
f
558.719 935.484 mo
561.365 930.169 564.228 907.825 573.959 907.604 cv
583.69 907.383 585.501 931.715 587.501 937.253 cv
579.8 953.021 566.773 950.722 558.719 935.484 cv
cp
.701961 .694118 .631373 rgb
f
572.633 954.974 mo
572.791 950.342 573.193 945.688 572.591 941.077 cv
569.636 927.28 562.261 921.37 554.324 921.085 cv
546.148 920.791 537.733 925.524 532.582 931.602 cv
529.199 935.593 526.437 944.028 526.334 947.05 cv
533.89 957.503 558.617 959.694 572.633 954.974 cv
572.633 954.974 li
cp
.305882 .305882 .305882 rgb
f
570.679 953.906 mo
570.825 949.595 571.199 945.263 570.639 940.972 cv
565.056 914.906 542.52 921.84 533.071 932.989 cv
529.922 936.704 527.686 943.718 527.59 946.532 cv
534.622 956.259 557.635 958.298 570.679 953.906 cv
cp
.580392 .568627 .517647 rgb
f
610.314 946.422 mo
612.409 938.757 619.794 930.146 627.528 931.715 cv
635.262 933.286 638.486 940.502 639.692 946.959 cv
628.046 951.566 615.4 949.429 610.314 946.422 cv
cp
.701961 .694118 .631373 rgb
f
577.432 940.643 mo
579.209 934.335 587.41 925.994 595.34 925.655 cv
605.91 925.205 617.244 934.92 620.303 950.79 cv
615.557 956.554 606.556 958.316 599.343 959.2 cv
592.131 960.084 586.314 957.889 578.375 955.529 cv
575.191 951.254 575.654 946.952 577.432 940.643 cv
577.432 940.643 li
cp
.305882 .305882 .305882 rgb
f
626.089 931.537 mo
622.886 931.394 617.593 933.158 617.648 936.296 cv
617.703 939.435 621.124 942.052 625.474 942.2 cv
630 942.354 634.356 939.62 634.019 936.647 cv
633.681 933.674 630.36 932.293 627.535 931.719 cv
627.051 931.622 626.568 931.558 626.089 931.537 cv
626.089 931.537 li
cp
.866667 .862745 .835294 rgb
f
578.95 941.478 mo
581.629 934.94 587.622 928.012 594.618 927.203 cv
604.836 926.02 615.903 934.843 618.874 950.259 cv
614.436 955.649 606.02 957.296 599.274 958.124 cv
592.53 958.95 586.708 956.658 579.667 954.691 cv
576.69 950.694 577.278 945.559 578.95 941.478 cv
cp
.580392 .568627 .517647 rgb
f
567.62 949.044 mo
567.735 945.661 568.029 942.261 567.589 938.893 cv
563.208 918.437 545.522 923.879 538.107 932.628 cv
535.635 935.544 533.88 941.048 533.805 943.256 cv
539.324 950.89 557.383 952.49 567.62 949.044 cv
567.62 949.044 li
cp
.701961 .694118 .631373 rgb
f
581.865 947.787 mo
581.669 938.639 590.031 930.569 595.12 930.028 cv
602.466 929.246 610.39 935.607 612.525 946.683 cv
609.321 950.574 602.49 951.224 598.377 952.36 cv
584.72 952.444 581.865 947.787 581.865 947.787 cv
cp
f
567.297 915.195 mo
567.484 917.315 569.739 919.616 572.037 919.471 cv
575.364 919.26 579.79 916.899 580.12 913.582 cv
580.435 910.429 576.211 906.647 573.696 906.579 cv
571.181 906.51 566.978 911.575 567.297 915.195 cv
567.297 915.195 li
cp
.866667 .862745 .835294 rgb
f
596.767 929.966 mo
592.543 929.814 585.976 932.224 585.378 936.781 cv
584.779 941.336 590.602 941.67 594.379 941.798 cv
599.628 941.977 606.719 936.544 605.588 933.748 cv
604.458 930.953 599.843 930.077 596.767 929.966 cv
cp
f
553.985 924.807 mo
548.53 924.712 539.171 926.876 538.979 931.662 cv
538.787 936.448 546.593 940.693 553.023 940.912 cv
558.537 941.099 565.739 939.639 566.378 934.697 cv
567.017 929.755 558.992 924.895 553.985 924.807 cv
cp
f
1103.61 719.258 mo
1121.57 772.388 1129.84 809.14 1104.55 842.532 cv
1097.03 852.463 1086.6 863.752 1080.63 878.851 cv
1070.25 905.128 1073.97 927.615 1079.89 954.011 cv
1081.57 940.123 1086.96 919.103 1100.34 904.609 cv
1138.15 863.65 1160.99 828.403 1138.92 775.468 cv
1131.95 758.744 1120.49 740.253 1103.61 719.258 cv
1103.61 719.258 li
cp
.231373 .494118 .054902 rgb
f
1108.45 728.959 mo
1125.29 774.911 1130.08 817.54 1105.54 845.19 cv
1098.8 852.781 1088.98 864.846 1083.45 876.863 cv
1073.83 897.775 1063.28 917.186 1080.77 949.305 cv
1082.76 938.081 1092.82 909.232 1103.55 897.269 cv
1133.38 864.007 1155.97 830.402 1140.49 783.159 cv
1135.09 766.673 1124.08 749.809 1108.45 728.959 cv
cp
.458824 .839216 .203922 rgb
f
1131.63 825.378 mo
1119.49 857.525 1082.52 874.701 1077.42 897.258 cv
1072.32 919.815 1078.29 940.791 1086.67 947.94 cv
1065.33 889.664 1127.48 880.199 1131.63 825.378 cv
cp
.231373 .494118 .054902 rgb
f
1081.4 878.316 mo
1072.16 898.446 1063.9 918.342 1080.77 949.312 cv
1082.76 938.087 1092.67 910.993 1103.4 899.029 cv
1107.13 894.87 1112.05 888.544 1115.47 884.389 cv
1107.6 887.571 1086.89 911.096 1080.98 909.845 cv
1075.68 908.723 1077.08 890.764 1081.4 878.316 cv
1081.4 878.316 li
cp
f
1109.51 848.708 mo
1109.51 848.708 1126.33 821.632 1127.08 801.526 cv
1127.84 781.419 1117.87 747.236 1117.87 747.236 cv
1117.87 747.236 1139.03 782.015 1140.88 801.025 cv
1142.72 820.036 1146.51 838.006 1126.41 863.236 cv
1138.03 839.819 1135.19 820.199 1135.19 820.199 cv
1135.19 820.199 1128.58 831.436 1109.51 848.708 cv
1109.51 848.708 li
cp
.529412 .937255 .25098 rgb
f
1129.06 776.404 mo
1130.91 775.759 1133.57 778.563 1135 782.667 cv
1136.42 786.77 1136.08 790.619 1134.23 791.263 cv
1132.37 791.908 1129.71 789.104 1128.29 785.001 cv
1126.86 780.897 1127.2 777.048 1129.06 776.404 cv
cp
.886275 .988235 .662745 rgb
f
1134.45 796.72 mo
1136.67 796.435 1138.88 799.36 1139.38 803.253 cv
1139.88 807.145 1138.48 810.531 1136.25 810.815 cv
1134.03 811.1 1131.82 808.175 1131.32 804.283 cv
1130.83 800.39 1132.23 797.004 1134.45 796.72 cv
cp
f
1058.53 692.217 mo
1063.84 737.713 1026.91 767.773 1018.1 813.697 cv
1013.12 839.677 1022.26 862.066 1030.1 892.192 cv
1037.94 922.318 1042.21 941.294 1049.19 949.189 cv
1050.45 922.037 1041.15 914.7 1045.86 891.249 cv
1060.77 817.02 1108.46 766.689 1058.53 692.217 cv
1058.53 692.217 li
cp
.231373 .494118 .054902 rgb
f
1060.71 700.327 mo
1062.18 743.334 1026.69 771.761 1020.29 815.468 cv
1016.77 839.494 1023.81 854.842 1028.38 874.004 cv
1034.05 897.827 1037.61 931.19 1052.18 943.503 cv
1028.51 902.92 1053.48 858.05 1068.38 810.458 cv
1079.47 775.04 1086.82 741.728 1060.71 700.327 cv
1060.71 700.327 li
cp
.458824 .839216 .203922 rgb
f
1023.91 857.27 mo
1026.71 864.656 1029 888.299 1036.58 890.674 cv
1039.81 891.686 1048.21 863.7 1050.95 861.59 cv
1042.86 891.234 1038.83 919.204 1052.18 943.857 cv
1042.03 935.278 1036.32 916.297 1032.42 897.521 cv
1030.73 889.351 1030.1 881.227 1028.38 874.004 cv
1027 868.191 1025.38 862.731 1023.91 857.27 cv
1023.91 857.27 li
cp
.231373 .494118 .054902 rgb
f
1062.59 710.091 mo
1062.59 710.091 1074.08 734.145 1074.79 758.776 cv
1075.51 784.04 1052.14 806.579 1056.91 832.462 cv
1044.19 811.885 1059.56 762.393 1059.56 762.393 cv
1059.56 762.393 1029.13 788.174 1028.15 815.44 cv
1021.19 792.046 1039.99 770.24 1051.22 750.948 cv
1060.62 734.785 1062.59 710.091 1062.59 710.091 cv
cp
.529412 .937255 .25098 rgb
f
1061.66 759.593 mo
1052.54 793.414 1036.75 866.735 1035.16 903.476 cv
1031.78 858.692 1021.39 813.544 1061.66 759.593 cv
1061.66 759.593 li
cp
.231373 .494118 .054902 rgb
f
1064.69 723.492 mo
1063.1 723.477 1061.79 726.035 1061.76 729.206 cv
1061.73 732.377 1062.99 734.96 1064.58 734.975 cv
1066.16 734.99 1067.47 732.431 1067.5 729.26 cv
1067.53 726.089 1066.27 723.507 1064.69 723.492 cv
cp
.886275 .988235 .662745 rgb
f
1062.56 739.621 mo
1060.28 739.599 1058.4 742.553 1058.37 746.22 cv
1058.33 749.886 1060.15 752.876 1062.43 752.898 cv
1064.71 752.919 1066.59 749.965 1066.62 746.298 cv
1066.66 742.632 1064.84 739.642 1062.56 739.621 cv
cp
f
917.023 728.028 mo
942.561 758.815 945.392 779.171 939.462 812.162 cv
937.149 825.022 932.889 838.979 934.178 850.623 cv
937.843 883.747 981.475 926.723 1008.01 945.977 cv
971.552 901.517 996.532 868.433 998.98 840.43 cv
1000.43 823.851 1000.24 815.097 995.12 802.13 cv
990.001 789.163 982.582 777.419 973.156 767.534 cv
957.367 750.974 928.555 730.449 917.023 728.028 cv
917.023 728.028 li
cp
.231373 .494118 .054902 rgb
f
924.18 733.505 mo
945.663 759.404 947.726 785.52 942.745 813.264 cv
940.804 824.08 934.148 843.142 938.216 857.34 cv
946.837 887.428 973.428 916.488 995.825 931.485 cv
977.1 894.157 989.776 866.263 994.602 845.836 cv
997.378 834.081 996.34 810.608 990.251 797.318 cv
976.67 767.674 945.044 746.385 924.18 733.505 cv
924.18 733.505 li
cp
.458824 .839216 .203922 rgb
f
957.455 784.628 mo
978.206 816.223 963.998 833.41 961.555 861.354 cv
959.911 880.158 970.671 901.44 986.106 914.292 cv
977.024 899.38 965.662 882.261 967.816 868.025 cv
972.93 834.228 991.282 823.622 957.455 784.628 cv
cp
.231373 .494118 .054902 rgb
f
930.155 738.951 mo
930.155 738.951 972.122 767.182 981.802 789.152 cv
989.896 807.522 991.605 816.42 983.632 849.346 cv
983.632 849.346 984.338 797.955 958.613 786.281 cv
974.461 811.865 956.737 833.168 946.017 842.165 cv
946.017 842.165 951.354 802.504 949.461 781.42 cv
947.568 760.337 930.155 738.951 930.155 738.951 cv
930.155 738.951 li
cp
.529412 .937255 .25098 rgb
f
952.888 887.926 mo
958.742 895.236 969.78 905.547 976.698 905.045 cv
982.952 904.59 983.964 887.422 986.514 881.206 cv
987.148 895.857 987.988 912.486 995.826 931.488 cv
980.811 923.235 964.381 907.804 952.888 887.926 cv
cp
.231373 .494118 .054902 rgb
f
944.966 753.498 mo
942.927 755.21 944.194 760.079 947.798 764.373 cv
951.401 768.667 955.976 770.759 958.016 769.047 cv
960.056 767.336 958.787 762.467 955.184 758.173 cv
951.58 753.879 947.006 751.787 944.966 753.498 cv
cp
.886275 .988235 .662745 rgb
f
960.432 772.321 mo
958.284 774.123 958.734 778.194 961.438 781.415 cv
964.14 784.634 968.071 785.785 970.219 783.983 cv
972.365 782.181 971.915 778.11 969.212 774.889 cv
966.51 771.669 962.578 770.519 960.432 772.321 cv
cp
f
1070.12 924.886 mo
1080.95 924.171 1109.48 921.043 1104.64 934.954 cv
1117.45 936.69 1126.23 944.463 1122.14 956.232 cv
1115.69 956.467 1109.01 957.08 1103.48 956.655 cv
1095.38 959.037 1087.69 952.737 1083.2 956.378 cv
1085.89 958.782 1078.74 964.383 1071.25 962.606 cv
1063.76 960.83 1058.8 960.399 1053.01 962.981 cv
1047.09 975.573 1034.49 964.747 1027.07 962.381 cv
1022.22 967.603 1015.34 962.408 1008.49 961.882 cv
999.941 967.594 991.363 959.961 982.386 957.097 cv
974.147 964.074 963.694 967.474 956.244 959.263 cv
936.973 964.462 921.128 957.652 917.965 947.052 cv
914.801 936.453 926.369 931.56 933.19 927.358 cv
940.009 923.156 946.795 919.803 956.061 923.086 cv
979.277 922.943 1007.88 930.041 1027.59 923.476 cv
1040.35 924.253 1059.23 916.25 1070.12 924.886 cv
1070.12 924.886 li
cp
.858824 .623529 .313726 rgb
f
944.163 903.119 mo
925.077 901.69 911.645 884.246 909.558 867.302 cv
907.47 850.358 909.127 846.942 906.686 837.143 cv
901.793 817.514 891.512 785.643 919.61 785.442 cv
947.709 785.242 934.756 823.746 934.45 852.461 cv
934.145 881.178 943.104 888.11 955.226 890.165 cv
967.349 892.22 988.197 892.525 996.744 901.124 cv
1008.48 912.929 1000.89 940.294 1000.89 940.294 cv
1000.89 940.294 997.5 920.258 990.378 914.122 cv
978.382 903.785 963.249 904.547 944.163 903.119 cv
944.163 903.119 li
cp
.411765 .207843 .486275 rgb
f
941.665 900.708 mo
928.317 898.283 913.611 881.882 911.903 866.243 cv
910.195 850.604 911.805 842.725 909.554 833.741 cv
904.834 814.906 893.947 788.359 920.127 788.173 cv
946.306 787.988 931.799 818.503 931.549 845.009 cv
931.299 871.515 936.678 890.002 951.408 892.449 cv
966.139 894.897 973.512 894.547 973.064 899.062 cv
972.616 903.578 955.013 903.133 941.665 900.708 cv
941.665 900.708 li
cp
.733333 .411765 .662745 rgb
f
917.286 869.472 mo
910.817 859.24 912.217 838.413 910.272 830.648 cv
906.192 814.37 897.502 789.991 920.127 789.831 cv
942.752 789.67 931.16 832.627 930.113 850.751 cv
929.066 868.876 923.755 879.706 917.286 869.472 cv
917.286 869.472 li
cp
.807843 .596078 .788235 rgb
f
916.414 797.651 mo
920.328 797.651 923.502 803.555 923.502 810.838 cv
923.502 818.123 920.328 824.027 916.414 824.027 cv
912.5 824.027 909.327 818.123 909.327 810.838 cv
909.327 803.555 912.5 797.651 916.414 797.651 cv
cp
.937255 .870588 .929412 rgb
f
918.44 793.308 mo
925.349 793.308 930.949 796.109 930.949 799.563 cv
930.949 803.017 925.349 805.817 918.44 805.817 cv
911.531 805.817 905.932 803.017 905.932 799.563 cv
905.932 796.109 911.531 793.308 918.44 793.308 cv
cp
f
918.44 791.786 mo
925.349 791.786 930.949 794.586 930.949 798.041 cv
930.949 801.495 925.349 804.294 918.44 804.294 cv
911.531 804.294 905.932 801.495 905.932 798.041 cv
905.932 794.586 911.531 791.786 918.44 791.786 cv
cp
.411765 .207843 .486275 rgb
f
996.91 903.961 mo
999.402 906.404 1000.11 909.839 998.499 911.633 cv
996.885 913.427 993.557 912.901 991.065 910.458 cv
988.572 908.014 987.861 904.579 989.476 902.785 cv
991.09 900.991 994.418 901.517 996.91 903.961 cv
cp
.698039 .447059 .643137 rgb
f
916.504 828.512 mo
917.99 828.512 919.195 830.521 919.195 832.998 cv
919.195 835.475 917.99 837.484 916.504 837.484 cv
915.018 837.484 913.813 835.475 913.813 832.998 cv
913.813 830.521 915.018 828.512 916.504 828.512 cv
cp
.937255 .870588 .929412 rgb
f
996.788 952.992 mo
1000.82 935.513 1000.35 889.188 985.299 881.664 cv
974.648 876.337 965.567 875.488 963.278 866.823 cv
960.988 858.159 960.137 842.13 960.885 813.686 cv
961.633 785.243 930.043 731.074 973.81 730.87 cv
1017.58 730.665 987.143 789.996 985.777 814.644 cv
984.412 839.293 984.619 844.301 987.692 851.983 cv
993.529 866.577 1008.72 861.522 1016.89 869.696 cv
1027.75 880.554 1019.77 922.602 1019.77 938.63 cv
1012.76 945.953 1007.03 950.43 996.788 952.992 cv
996.788 952.992 li
cp
.411765 .207843 .486275 rgb
f
986.426 878.286 mo
976.199 873.172 967.841 872.356 965.642 864.037 cv
963.443 855.717 963.344 841.763 964.062 814.453 cv
964.779 787.142 934.449 733.697 972.524 733.501 cv
1010.6 733.304 984.607 788.118 983.297 811.784 cv
981.987 835.45 982.186 846.718 985.136 854.094 cv
990.74 868.106 1005.68 864.33 1013.53 872.177 cv
1023.96 882.604 1019.16 918.669 1010.07 920.203 cv
1000.97 921.737 1000.88 885.51 986.426 878.286 cv
986.426 878.286 li
cp
.733333 .411765 .662745 rgb
f
965.016 807.81 mo
965.171 779.54 941.216 737.193 970.041 735.489 cv
998.865 733.785 983.739 783.652 982.528 805.511 cv
981.318 827.371 981.756 843.361 977.16 844.218 cv
972.565 845.076 964.859 836.081 965.016 807.81 cv
cp
.807843 .596078 .788235 rgb
f
996.793 869.351 mo
990.405 870.875 987.673 875.142 990.69 878.883 cv
993.707 882.624 1001.33 884.421 1007.72 882.898 cv
1014.11 881.375 1016.84 877.107 1013.82 873.367 cv
1010.81 869.626 1003.18 867.828 996.793 869.351 cv
cp
f
972.396 745.079 mo
978.192 745.079 982.893 752.871 982.893 762.483 cv
982.893 772.095 978.192 779.887 972.396 779.887 cv
966.599 779.887 961.899 772.095 961.899 762.483 cv
961.899 752.871 966.599 745.079 972.396 745.079 cv
cp
.937255 .870588 .929412 rgb
f
973.005 738.245 mo
963.574 738.245 955.929 742.068 955.929 746.783 cv
955.929 751.499 963.574 755.321 973.005 755.321 cv
982.437 755.321 990.082 751.499 990.082 746.783 cv
990.082 742.068 982.437 738.245 973.005 738.245 cv
cp
f
973.005 736.722 mo
963.574 736.722 955.929 740.545 955.929 745.26 cv
955.929 749.976 963.574 753.798 973.005 753.798 cv
982.437 753.798 990.082 749.976 990.082 745.26 cv
990.082 740.545 982.437 736.722 973.005 736.722 cv
cp
.411765 .207843 .486275 rgb
f
970.78 782.579 mo
972.813 782.579 974.459 785.913 974.459 790.025 cv
974.459 794.137 972.813 797.471 970.78 797.471 cv
968.749 797.471 967.103 794.137 967.103 790.025 cv
967.103 785.913 968.749 782.579 970.78 782.579 cv
cp
.937255 .870588 .929412 rgb
f
969.614 803.392 mo
970.704 803.392 971.588 804.678 971.588 806.263 cv
971.588 807.849 970.704 809.134 969.614 809.134 cv
968.524 809.134 967.641 807.849 967.641 806.263 cv
967.641 804.678 968.524 803.392 969.614 803.392 cv
cp
f
1047.7 940.547 mo
1055.33 903.445 1082.08 900.528 1095.34 888.368 cv
1114.03 871.224 1102.69 834.754 1107.52 810.507 cv
1109.4 801.081 1119.33 791.71 1114.86 780.54 cv
1111.11 771.147 1104.83 768.277 1096.72 767.753 cv
1088.61 767.228 1075.44 771.493 1073.21 780.129 cv
1070.67 790.003 1072.37 797.103 1080.27 813.986 cv
1086.56 827.437 1088.29 843.582 1086.96 857.547 cv
1085.65 871.371 1083.13 881.723 1073.86 886.175 cv
1064.59 890.628 1053.14 896.364 1045.15 906.666 cv
1037 917.171 1030.35 931.349 1030.35 945.745 cv
1038.23 945.745 1041.42 938.978 1047.7 940.547 cv
1047.7 940.547 li
cp
.411765 .207843 .486275 rgb
f
1092.83 887.949 mo
1103.57 879.805 1104.99 859.244 1104.68 847.105 cv
1104.19 828.498 1102.64 820.67 1106.3 807.026 cv
1108.73 797.959 1115.78 791.591 1111.94 781.993 cv
1108.71 773.919 1103.31 771.454 1096.34 771.003 cv
1089.37 770.552 1078.05 774.216 1076.14 781.639 cv
1073.95 790.125 1075.42 796.226 1082.21 810.736 cv
1087.79 822.676 1091.63 843.713 1089.35 859.776 cv
1087.24 874.657 1084.26 882.446 1076.72 886.862 cv
1069.18 891.277 1059.69 892.928 1047.99 906.382 cv
1042.59 912.587 1040.99 922.758 1045.53 923.384 cv
1050.75 924.104 1056.36 912.213 1066.93 905.063 cv
1076.1 898.863 1087.14 892.257 1092.83 887.949 cv
1092.83 887.949 li
cp
.733333 .411765 .662745 rgb
f
1104.71 809.137 mo
1106.57 799.923 1114.68 791.512 1111.04 782.692 cv
1107.97 775.275 1102.85 773.008 1096.23 772.594 cv
1089.62 772.18 1078.88 775.547 1077.06 782.368 cv
1074.99 790.165 1076.18 797.046 1084.2 809.551 cv
1091.81 821.417 1091.62 845.276 1097.08 846.971 cv
1102.54 848.666 1102.66 819.313 1104.71 809.137 cv
1104.71 809.137 li
cp
.807843 .596078 .788235 rgb
f
1093.71 776.371 mo
1102.64 776.371 1109.88 779.989 1109.88 784.454 cv
1109.88 788.918 1102.64 792.537 1093.71 792.537 cv
1084.79 792.537 1077.55 788.918 1077.55 784.454 cv
1077.55 779.989 1084.79 776.371 1093.71 776.371 cv
cp
.937255 .870588 .929412 rgb
f
1094.19 777.048 mo
1098.53 777.048 1102.05 784.49 1102.05 793.669 cv
1102.05 802.848 1098.53 810.29 1094.19 810.29 cv
1089.84 810.29 1086.32 802.848 1086.32 793.669 cv
1086.32 784.49 1089.84 777.048 1094.19 777.048 cv
cp
f
1093.71 774.34 mo
1102.64 774.34 1109.88 777.96 1109.88 782.423 cv
1109.88 786.887 1102.64 790.506 1093.71 790.506 cv
1084.79 790.506 1077.55 786.887 1077.55 782.423 cv
1077.55 777.96 1084.79 774.34 1093.71 774.34 cv
cp
.411765 .207843 .486275 rgb
f
1095.2 817.648 mo
1096.43 817.648 1097.42 819.75 1097.42 822.342 cv
1097.42 824.935 1096.43 827.037 1095.2 827.037 cv
1093.97 827.037 1092.98 824.935 1092.98 822.342 cv
1092.98 819.75 1093.97 817.648 1095.2 817.648 cv
cp
.937255 .870588 .929412 rgb
f
1032.85 857.249 mo
1055.36 924.788 953.723 881.169 973.012 948.683 cv
975.598 948.394 979.51 949.788 980.672 950.119 cv
978.35 935.593 983.644 925.16 992.16 919.482 cv
1019.4 901.321 1031.76 920.154 1053.91 884.536 cv
1056.78 879.926 1057.18 872.906 1059.66 858.685 cv
1062.14 844.465 1060.38 829.249 1046.98 827.348 cv
1037.99 826.074 1026.2 835.765 1032.85 857.249 cv
cp
.411765 .207843 .486275 rgb
f
1034.63 855.603 mo
1039.87 871.34 1037.79 885.572 1031.41 892.079 cv
1025.96 897.645 1012.97 901.711 998.699 906.282 cv
987.427 909.892 977.805 919.063 980.473 921.015 cv
983.141 922.967 987.879 918.599 994.689 915.453 cv
1000.76 912.645 1007.68 910.106 1013.28 909.294 cv
1023.51 907.807 1030.88 905.436 1036.81 901.419 cv
1044.3 896.355 1050.03 889.034 1053.19 881.829 cv
1055.81 875.849 1055.64 871.807 1057.88 858.933 cv
1060.13 846.059 1057.02 831.268 1046.91 830.054 cv
1038.75 829.075 1028.6 836.153 1034.63 855.603 cv
1034.63 855.603 li
cp
.733333 .411765 .662745 rgb
f
1036.78 857.397 mo
1040.17 865.784 1040.68 883.165 1043.5 883.982 cv
1046.32 884.799 1053.93 871.487 1055.73 858.933 cv
1057.53 846.378 1055.03 831.956 1046.91 830.772 cv
1040.35 829.817 1029.92 840.413 1036.78 857.397 cv
1036.78 857.397 li
cp
.807843 .596078 .788235 rgb
f
1047.67 836.407 mo
1050.74 836.407 1053.23 841.669 1053.23 848.16 cv
1053.23 854.65 1050.74 859.913 1047.67 859.913 cv
1044.59 859.913 1042.1 854.65 1042.1 848.16 cv
1042.1 841.669 1044.59 836.407 1047.67 836.407 cv
cp
.937255 .870588 .929412 rgb
f
1045.06 833.239 mo
1050.71 833.239 1055.29 835.905 1055.29 839.194 cv
1055.29 842.482 1050.71 845.148 1045.06 845.148 cv
1039.41 845.148 1034.84 842.482 1034.84 839.194 cv
1034.84 835.905 1039.41 833.239 1045.06 833.239 cv
cp
f
1045.06 831.878 mo
1050.71 831.878 1055.29 834.544 1055.29 837.834 cv
1055.29 841.123 1050.71 843.789 1045.06 843.789 cv
1039.41 843.789 1034.84 841.123 1034.84 837.834 cv
1034.84 834.544 1039.41 831.878 1045.06 831.878 cv
cp
.411765 .207843 .486275 rgb
f
1048.11 863.142 mo
1049.55 863.142 1050.72 865.351 1050.72 868.076 cv
1050.72 870.801 1049.55 873.01 1048.11 873.01 cv
1046.68 873.01 1045.51 870.801 1045.51 868.076 cv
1045.51 865.351 1046.68 863.142 1048.11 863.142 cv
cp
.937255 .870588 .929412 rgb
f
1110.05 939.638 mo
1106.58 923.183 1101.08 899.443 1085.38 900.589 cv
1069.68 901.737 1060.51 925.269 1055.26 943.889 cv
1067.37 950.337 1103.18 949.999 1110.05 939.638 cv
cp
.305882 .305882 .305882 rgb
f
1108.1 938.694 mo
1104.87 923.643 1099.77 901.929 1085.18 902.978 cv
1070.6 904.027 1062.09 925.55 1057.21 942.582 cv
1068.46 948.48 1101.71 948.169 1108.1 938.694 cv
1108.1 938.694 li
cp
.580392 .568627 .517647 rgb
f
1105.63 934.904 mo
1102.97 922.461 1098.75 904.511 1086.69 905.378 cv
1074.64 906.246 1067.6 924.039 1063.57 938.118 cv
1072.87 942.994 1100.36 942.737 1105.63 934.904 cv
cp
.701961 .694118 .631373 rgb
f
1087.8 905.358 mo
1087.44 905.35 1087.07 905.352 1086.69 905.379 cv
1080.64 905.815 1072.41 912.853 1072.07 916.885 cv
1071.74 920.918 1080.24 926.55 1086.85 926.774 cv
1092.47 926.965 1101.06 923.881 1101.63 919.786 cv
1102.19 915.691 1094.65 905.527 1087.8 905.358 cv
cp
.866667 .862745 .835294 rgb
f
924.508 944.843 mo
926.833 931.929 943.667 918.264 953.38 918.799 cv
963.093 919.335 974.205 933.341 973.813 947.696 cv
954.127 955.65 938.106 951.566 924.508 944.843 cv
cp
.305882 .305882 .305882 rgb
f
926.03 943.828 mo
928.609 931.421 945.903 920.142 953.463 920.677 cv
961.023 921.212 974.713 934.864 974.319 946.427 cv
954.635 954.381 938.359 950.297 926.03 943.828 cv
cp
.580392 .568627 .517647 rgb
f
1029.71 949.481 mo
1032.79 938.212 1043.64 925.554 1055.01 927.862 cv
1066.38 930.169 1071.12 940.777 1072.89 950.269 cv
1060.01 953.868 1042.56 954.989 1029.71 949.481 cv
cp
.305882 .305882 .305882 rgb
f
1031.51 948.723 mo
1034.34 938.399 1044.28 926.8 1054.7 928.915 cv
1065.12 931.03 1069.46 940.749 1071.08 949.445 cv
1059.28 952.743 1043.3 953.77 1031.51 948.723 cv
1031.51 948.723 li
cp
.580392 .568627 .517647 rgb
f
975.48 948.225 mo
979.816 939.471 985.837 902.421 1000.46 902.3 cv
1015.08 902.18 1019.38 942.018 1022.66 951.139 cv
1007.71 958.29 986.386 957.899 975.48 948.225 cv
cp
.305882 .305882 .305882 rgb
f
977.105 947.365 mo
981.143 939.253 986.749 904.924 1000.36 904.813 cv
1013.98 904.701 1017.98 941.613 1021.03 950.064 cv
1007.11 956.69 987.26 956.328 977.105 947.365 cv
cp
.580392 .568627 .517647 rgb
f
932.398 939.051 mo
934.364 929.591 948.034 921.474 953.799 921.882 cv
959.564 922.291 969.518 932.216 969.218 941.033 cv
954.209 947.098 940.495 943.765 932.398 939.051 cv
cp
.701961 .694118 .631373 rgb
f
953.243 921.866 mo
949.737 921.931 939.571 925.693 939.291 928.652 cv
939.012 931.611 946.213 934.814 951.375 934.99 cv
956.819 935.174 964.219 931.053 964.28 928.909 cv
964.342 926.763 956.844 922.099 953.806 921.884 cv
953.626 921.872 953.439 921.862 953.243 921.866 cv
cp
.866667 .862745 .835294 rgb
f
985.097 935.484 mo
987.743 930.169 990.606 907.825 1000.34 907.604 cv
1010.07 907.383 1011.88 931.715 1013.88 937.253 cv
1006.18 953.021 993.151 950.722 985.097 935.484 cv
cp
.701961 .694118 .631373 rgb
f
999.012 954.974 mo
999.169 950.342 999.57 945.688 998.969 941.077 cv
996.014 927.28 988.639 921.37 980.702 921.085 cv
972.525 920.791 964.111 925.524 958.96 931.602 cv
955.577 935.593 952.815 944.028 952.712 947.05 cv
960.269 957.503 984.995 959.694 999.011 954.974 cv
999.012 954.974 li
cp
.305882 .305882 .305882 rgb
f
997.057 953.906 mo
997.203 949.595 997.577 945.263 997.018 940.972 cv
991.435 914.906 968.898 921.84 959.448 932.989 cv
956.3 936.704 954.064 943.718 953.968 946.532 cv
961 956.259 984.013 958.298 997.057 953.906 cv
cp
.580392 .568627 .517647 rgb
f
1036.69 946.422 mo
1038.79 938.757 1046.17 930.146 1053.91 931.715 cv
1061.64 933.286 1064.86 940.502 1066.07 946.959 cv
1054.42 951.566 1041.78 949.429 1036.69 946.422 cv
cp
.701961 .694118 .631373 rgb
f
1003.81 940.643 mo
1005.59 934.335 1013.79 925.994 1021.72 925.655 cv
1032.29 925.205 1043.62 934.92 1046.68 950.79 cv
1041.93 956.554 1032.93 958.316 1025.72 959.2 cv
1018.51 960.084 1012.69 957.889 1004.75 955.529 cv
1001.57 951.254 1002.03 946.952 1003.81 940.643 cv
1003.81 940.643 li
cp
.305882 .305882 .305882 rgb
f
1052.47 931.537 mo
1049.26 931.394 1043.97 933.158 1044.03 936.296 cv
1044.08 939.435 1047.5 942.052 1051.85 942.2 cv
1056.38 942.354 1060.73 939.62 1060.4 936.647 cv
1060.06 933.674 1056.74 932.293 1053.91 931.719 cv
1053.43 931.622 1052.95 931.558 1052.47 931.537 cv
1052.47 931.537 li
cp
.866667 .862745 .835294 rgb
f
1005.33 941.478 mo
1008.01 934.94 1014 928.012 1021 927.203 cv
1031.21 926.02 1042.28 934.843 1045.25 950.259 cv
1040.81 955.649 1032.4 957.296 1025.65 958.124 cv
1018.91 958.95 1013.09 956.658 1006.04 954.691 cv
1003.07 950.694 1003.66 945.559 1005.33 941.478 cv
cp
.580392 .568627 .517647 rgb
f
993.998 949.044 mo
994.113 945.661 994.406 942.261 993.967 938.893 cv
989.586 918.437 971.899 923.879 964.484 932.628 cv
962.014 935.544 960.259 941.048 960.184 943.256 cv
965.702 950.89 983.762 952.49 993.998 949.044 cv
993.998 949.044 li
cp
.701961 .694118 .631373 rgb
f
1008.24 947.787 mo
1008.05 938.639 1016.41 930.569 1021.5 930.028 cv
1028.84 929.246 1036.77 935.607 1038.9 946.683 cv
1035.7 950.574 1028.87 951.224 1024.76 952.36 cv
1011.1 952.444 1008.24 947.787 1008.24 947.787 cv
cp
f
993.676 915.195 mo
993.862 917.315 996.117 919.616 998.415 919.471 cv
1001.74 919.26 1006.17 916.899 1006.5 913.582 cv
1006.81 910.429 1002.59 906.647 1000.07 906.579 cv
997.559 906.51 993.356 911.575 993.676 915.195 cv
993.676 915.195 li
cp
.866667 .862745 .835294 rgb
f
1023.14 929.966 mo
1018.92 929.814 1012.35 932.224 1011.76 936.781 cv
1011.16 941.336 1016.98 941.67 1020.76 941.798 cv
1026.01 941.977 1033.1 936.544 1031.97 933.748 cv
1030.84 930.953 1026.22 930.077 1023.14 929.966 cv
cp
f
980.363 924.807 mo
974.908 924.712 965.549 926.876 965.357 931.662 cv
965.164 936.448 972.971 940.693 979.401 940.912 cv
984.915 941.099 992.116 939.639 992.756 934.697 cv
993.395 929.755 985.369 924.895 980.363 924.807 cv
cp
f
929.753 434.32 mo
929.753 434.32 953.834 358.522 946.547 321.057 cv
938.415 279.252 902.507 249.113 881.8 210.912 cv
863.376 176.923 860.108 124.892 860.108 124.892 cv
860.108 124.892 839.472 208.387 856.349 254.836 cv
876.421 310.085 893.517 306.287 901.773 334.347 cv
907.561 354.017 899.81 364.87 905.157 391.325 cv
908.199 406.371 929.753 434.32 929.753 434.32 cv
929.753 434.32 li
cp
.231373 .494118 .054902 rgb
f
922.429 410.858 mo
922.429 410.858 945.592 347.316 939.744 315.566 cv
933.203 280.051 900.835 254.538 883.669 222.872 cv
868.397 194.696 859.842 154.81 859.842 154.81 cv
859.842 154.81 848.607 220.765 862.601 259.266 cv
879.247 305.061 890.771 300.113 899.147 319.254 cv
905.961 334.824 913.432 343.578 911.691 369.451 cv
910.363 389.19 922.429 410.858 922.429 410.858 cv
922.429 410.858 li
cp
.458824 .839216 .203922 rgb
f
882.594 225.211 mo
868.64 201.259 860.17 167.011 860.17 167.011 cv
860.17 167.011 852.255 224.304 865.385 257.212 cv
881.003 296.356 920.731 307.869 925.207 298.037 cv
929.685 288.204 898.276 252.13 882.594 225.211 cv
cp
.529412 .937255 .25098 rgb
f
872.207 224.604 mo
867.978 226.951 867.46 234.097 871.05 240.565 cv
874.64 247.033 880.979 250.373 885.207 248.026 cv
889.437 245.679 889.954 238.533 886.364 232.065 cv
882.774 225.597 876.436 222.256 872.207 224.604 cv
cp
.886275 .988235 .662745 rgb
f
1133.13 123.602 mo
1133.13 123.602 1090.8 173.031 1082.4 209.988 cv
1073.92 247.304 1084.01 284.846 1072.49 319.722 cv
1065.06 342.234 1048.17 355.01 1035.47 380.441 cv
1026.16 399.061 1029.64 445.806 1029.64 445.806 cv
1040.64 438.514 li
1039.84 440.037 1034.19 427.349 1053.79 386.896 cv
1073.49 346.254 1107.02 328.071 1118.15 291.309 cv
1129.45 253.965 1115.78 213.233 1117.6 174.259 cv
1118.85 147.631 1133.13 123.602 1133.13 123.602 cv
1133.13 123.602 li
cp
.231373 .494118 .054902 rgb
f
1120.9 144.458 mo
1120.9 144.458 1089.23 200.744 1082.91 228.571 cv
1076.53 256.667 1085.9 288.765 1076.49 316.665 cv
1070.44 334.62 1061.41 341.338 1045.46 364.29 cv
1036.52 377.157 1033.43 423.914 1036.1 418.123 cv
1038.77 412.333 1038.66 394.962 1059.38 368.204 cv
1083.42 337.147 1100.16 319.337 1109.74 289.785 cv
1118.3 263.403 1118.02 235.867 1114.42 206.712 cv
1111.32 181.613 1120.9 144.458 1120.9 144.458 cv
1120.9 144.458 li
cp
.458824 .839216 .203922 rgb
f
1112.49 172.445 mo
1112.49 172.445 1090.31 207.339 1084.37 233.515 cv
1078.37 259.945 1085.12 289.531 1078.33 316.381 cv
1074.62 331.03 1049.39 359.693 1059.74 357.721 cv
1070.08 355.749 1100.88 317.435 1109.59 291.094 cv
1118.26 264.858 1107.94 235.802 1109.24 208.2 cv
1110.13 189.342 1112.49 172.445 1112.49 172.445 cv
1112.49 172.445 li
cp
.529412 .937255 .25098 rgb
f
1099.1 213.179 mo
1103 213.179 1106.17 219.511 1106.17 227.321 cv
1106.17 235.131 1103 241.463 1099.1 241.463 cv
1095.19 241.463 1092.03 235.131 1092.03 227.321 cv
1092.03 219.511 1095.19 213.179 1099.1 213.179 cv
cp
.886275 .988235 .662745 rgb
f
1018.73 112.533 mo
1011.91 129.446 1008.36 147.872 1007.57 166.091 cv
1005.14 222.897 1033.2 270.399 1027.94 335.445 cv
1022.67 400.492 953.142 443.376 953.142 443.376 cv
956.838 452.747 li
956.838 452.747 1011.12 417.669 1028.69 399.025 cv
1046.27 380.381 1072.03 314.574 1074.38 275.978 cv
1076.73 237.381 1062 216.957 1056.44 190.959 cv
1050.87 164.961 1045.56 142.827 1044.91 118.319 cv
1043.86 78.7457 1066.73 31.1207 1066.73 31.1207 cv
1066.73 31.1207 1032.88 77.4425 1018.73 112.533 cv
cp
.231373 .494118 .054902 rgb
f
1019.66 126.63 mo
1013.54 141.811 1010.02 158.339 1009.64 174.704 cv
1008.47 225.608 1033.88 267.923 1033.88 325.524 cv
1033.87 383.124 973.136 434.81 972.108 434.98 cv
972.108 434.98 1013.33 406.701 1029.11 389.965 cv
1044.88 373.229 1068.01 314.159 1070.13 279.515 cv
1072.24 244.871 1058.48 220.354 1053.49 197.019 cv
1048.5 173.684 1042.67 153.801 1042.09 131.804 cv
1041.15 96.2833 1047.6 68.233 1047.6 68.233 cv
1047.6 68.233 1032.37 95.1314 1019.66 126.63 cv
cp
.458824 .839216 .203922 rgb
f
1019.51 132.011 mo
1014.14 146.45 1009.54 162.191 1011.31 177.494 cv
1015.92 217.392 1040.35 304.511 1059.17 288.061 cv
1078 271.611 1058.41 219.194 1053.12 197.369 cv
1047.83 175.543 1041.84 156.986 1040.74 136.307 cv
1038.96 102.913 1044.31 76.359 1044.31 76.359 cv
1044.31 76.359 1030.66 102.054 1019.51 132.011 cv
1019.51 132.011 li
cp
.529412 .937255 .25098 rgb
f
1042.3 207.689 mo
1047.11 206.865 1052.08 212.443 1053.4 220.147 cv
1054.72 227.852 1051.88 234.765 1047.07 235.588 cv
1042.26 236.413 1037.28 230.835 1035.96 223.13 cv
1034.65 215.426 1037.48 208.513 1042.3 207.689 cv
cp
.886275 .988235 .662745 rgb
f
1031.32 169.962 mo
1039.11 169.28 1046.1 176.54 1046.94 186.176 cv
1047.79 195.813 1042.16 204.177 1034.38 204.859 cv
1026.6 205.541 1019.6 198.281 1018.76 188.645 cv
1017.92 179.008 1023.54 170.644 1031.32 169.962 cv
cp
f
948.452 26.6558 mo
948.452 26.6558 989.646 81.0655 1000.91 153.37 cv
1012.17 225.673 964.454 291.169 958.12 333.909 cv
951.786 376.649 973.394 397.422 970.736 424.069 cv
968.078 450.716 953.296 452.846 953.296 452.846 cv
944.938 447.343 li
944.938 447.343 958.148 443.688 948.567 412.368 cv
938.985 381.048 909.357 335.147 915.293 294.756 cv
921.23 254.366 935.37 232.601 952.173 204.708 cv
968.977 176.815 979.778 161.44 981.023 129.463 cv
982.267 97.4869 948.453 26.6558 948.453 26.6558 cv
948.452 26.6558 li
cp
.231373 .494118 .054902 rgb
f
977.924 89.4923 mo
977.924 89.4923 986.962 96.4732 996.224 155.954 cv
1005.49 215.435 977.802 257.457 964.975 286.503 cv
952.147 315.548 949.315 344.697 954.687 371.781 cv
960.059 398.866 967.885 408.797 964.109 411.686 cv
960.335 414.573 949.512 399.473 938.965 376.297 cv
928.418 353.121 918.128 318.123 923.004 284.896 cv
927.88 251.669 939.498 233.765 953.305 210.82 cv
967.112 187.876 975.359 179.574 981.865 149.99 cv
988.371 120.406 977.924 89.4918 977.924 89.4918 cv
977.924 89.4923 li
cp
.458824 .839216 .203922 rgb
f
979.631 97.8956 mo
979.631 97.8956 987.83 104.454 995.428 159.292 cv
1003.03 214.13 974.861 259.291 951.965 256.244 cv
929.068 253.198 942.097 229.966 955.14 209.081 cv
968.182 188.196 975.89 180.69 982.323 153.587 cv
988.758 126.483 979.631 97.8956 979.631 97.8956 cv
cp
.529412 .937255 .25098 rgb
f
985.99 170.448 mo
980.457 169.72 975.146 175.41 974.127 183.156 cv
973.107 190.902 976.767 197.772 982.3 198.5 cv
987.833 199.228 993.145 193.538 994.164 185.792 cv
995.183 178.045 991.523 171.176 985.99 170.448 cv
cp
.886275 .988235 .662745 rgb
f
965.998 211.023 mo
963.714 215.72 964.945 221.026 968.747 222.876 cv
972.55 224.725 977.484 222.416 979.769 217.719 cv
982.053 213.022 980.822 207.715 977.02 205.866 cv
973.217 204.017 968.283 206.325 965.998 211.023 cv
cp
f
935.958 92.2623 mo
935.958 92.2623 914.544 179.764 923.103 224.488 cv
929.309 256.916 956.684 273.793 966.851 301.515 cv
978.083 332.144 971.683 368.174 984.997 397.69 cv
998.313 427.205 1014.98 434.24 1014.98 434.24 cv
1031.27 426.436 li
1031.27 426.436 1011.03 403.827 1013.92 383.132 cv
1021 332.524 1017.93 313.853 1006.62 282.004 cv
996.038 252.198 966.813 231.046 952.246 204.244 cv
930.124 163.54 935.958 92.2623 935.958 92.2623 cv
cp
.231373 .494118 .054902 rgb
f
931.157 131.553 mo
931.157 131.553 921.022 190.127 928.071 226.917 cv
933.183 253.592 958.961 273.382 967.553 297.014 cv
977.078 323.212 974.05 351.71 981.323 370.012 cv
988.597 388.314 1005.01 406.952 1005.01 406.952 cv
1005.01 406.952 1003.64 379.259 1006.01 362.238 cv
1011.8 320.616 1009.27 305.257 999.966 279.056 cv
991.262 254.535 967.249 237.124 955.273 215.072 cv
937.087 181.583 931.157 131.553 931.157 131.553 cv
cp
.458824 .839216 .203922 rgb
f
932.004 135.551 mo
932.004 135.551 925.885 192.914 932.527 227.562 cv
937.343 252.683 973.757 286.665 987.003 278.446 cv
1003.25 265.211 965.995 234.976 954.719 214.207 cv
937.594 182.666 932.004 135.551 932.004 135.551 cv
cp
.529412 .937255 .25098 rgb
f
952.392 231.85 mo
956.471 229.251 963.668 233.249 968.466 240.779 cv
973.264 248.31 973.847 256.522 969.768 259.121 cv
965.689 261.72 958.491 257.722 953.693 250.191 cv
948.896 242.66 948.313 234.449 952.392 231.85 cv
cp
.886275 .988235 .662745 rgb
f
1186.97 198.278 mo
1186.97 198.278 1170.42 235.328 1157.36 250.487 cv
1138.87 271.95 1106.36 276.434 1090.47 302.898 cv
1074.64 329.263 1075.56 372.39 1080.46 415.483 cv
1082.55 433.816 1073.27 447.806 1073.27 447.806 cv
1083.24 444.213 li
1083.24 444.213 1096.55 420.529 1095.99 398.136 cv
1095.29 369.811 1102.07 347.059 1110.55 328.196 cv
1126 293.81 1150.24 299.156 1165.81 275.546 cv
1184.7 246.92 1186.97 198.278 1186.97 198.278 cv
1186.97 198.278 li
cp
.231373 .494118 .054902 rgb
f
1180.15 221.751 mo
1180.15 221.751 1164.64 251.266 1152.72 260.51 cv
1133.15 275.697 1108.01 281.511 1094.12 304.663 cv
1080.27 327.729 1078.25 351.203 1082.51 388.892 cv
1084.33 404.926 1081.45 424.2 1085.16 425.01 cv
1090.3 415.66 1094.49 403.634 1094.01 384.048 cv
1093.4 359.275 1100.17 339.847 1107.59 323.346 cv
1121.11 293.265 1150.04 293.043 1163.67 272.387 cv
1180.19 247.342 1180.15 221.751 1180.15 221.751 cv
1180.15 221.751 li
cp
.458824 .839216 .203922 rgb
f
1180.15 221.751 mo
1180.15 221.751 1164.64 251.266 1152.72 260.51 cv
1133.15 275.697 1099.97 290.1 1106.52 295.977 cv
1113.07 301.854 1150.04 293.043 1163.67 272.387 cv
1180.19 247.342 1180.15 221.751 1180.15 221.751 cv
1180.15 221.751 li
cp
.529412 .937255 .25098 rgb
f
1136.11 285.369 mo
1135.72 281.275 1129.75 280.796 1122.78 284.3 cv
1115.82 287.804 1110.49 293.964 1110.89 298.059 cv
1111.28 302.153 1117.25 302.632 1124.21 299.128 cv
1131.18 295.624 1136.51 289.464 1136.11 285.369 cv
cp
.886275 .988235 .662745 rgb
f
906.7 427.307 mo
893.916 425.822 860.29 420.479 865.192 436.749 cv
849.916 437.956 839.05 446.343 843.197 460.107 cv
850.827 460.773 858.7 461.885 865.281 461.737 cv
874.743 464.969 884.223 458.208 889.326 462.662 cv
885.999 465.258 894.139 472.129 903.118 470.548 cv
912.097 468.968 918.004 468.777 924.719 472.098 cv
930.98 486.919 946.556 475.261 955.483 473.001 cv
960.926 479.294 969.392 473.752 977.539 473.568 cv
987.327 480.651 997.946 472.413 1008.75 469.675 cv
1018.1 478.191 1030.29 482.738 1039.61 473.766 cv
1062.13 480.919 1070.74 468.854 1084.26 465.43 cv
1096.84 466.772 1105.22 463.426 1106.67 457.482 cv
1116.6 457.08 1126.41 456.686 1131.81 451.487 cv
1126.41 437.739 1110.66 438.519 1096.18 442.186 cv
1083.87 444.855 1072.98 439.536 1068.82 438.548 cv
1057.46 439.258 1053.15 429.039 1041.97 432.239 cv
1014.47 430.651 980.156 437.045 957.187 428.298 cv
942.014 428.407 920.116 418.058 906.7 427.307 cv
906.7 427.307 li
cp
.858824 .623529 .313726 rgb
f
912.859 414.764 mo
907.556 407.912 901.752 402.805 894.044 402.697 cv
886.335 402.589 878.539 408.296 873.911 412.474 cv
868.216 418.979 867.896 420.855 865.991 429.376 cv
877.595 435.56 887.122 435.275 898.608 437.855 cv
907.947 438.14 910.034 433.831 915.085 430.024 cv
913.23 424.071 918.163 421.617 912.859 414.764 cv
912.859 414.764 li
cp
.305882 .305882 .305882 rgb
f
911.047 415.218 mo
906.177 408.929 900.848 404.242 893.771 404.143 cv
886.692 404.044 879.534 409.281 875.284 413.116 cv
870.055 419.086 869.761 420.808 868.012 428.628 cv
878.666 434.304 887.414 434.042 897.962 436.41 cv
906.537 436.671 908.453 432.717 913.09 429.223 cv
911.386 423.759 915.917 421.507 911.047 415.218 cv
cp
.580392 .568627 .517647 rgb
f
907.834 413.243 mo
903.975 408.267 899.752 404.558 894.144 404.479 cv
888.534 404.401 882.861 408.546 879.494 411.58 cv
875.35 416.304 875.117 417.667 873.731 423.855 cv
882.174 428.346 889.107 428.139 897.465 430.013 cv
904.26 430.22 905.778 427.09 909.453 424.326 cv
908.104 420.002 911.693 418.22 907.834 413.243 cv
907.834 413.243 li
cp
.701961 .694118 .631373 rgb
f
902.596 410.344 mo
900.151 407.205 897.477 404.865 893.924 404.816 cv
890.372 404.766 886.779 407.38 884.646 409.295 cv
882.022 412.275 881.874 413.134 880.996 417.037 cv
886.344 419.87 890.734 419.74 896.028 420.921 cv
900.332 421.052 901.293 419.079 903.621 417.335 cv
902.766 414.607 905.04 413.483 902.596 410.344 cv
cp
.929412 .929412 .898039 rgb
f
934.69 400.013 mo
923.374 400.862 911.45 401.858 904.387 409.281 cv
899.058 416.969 890.512 419.243 888.52 428.14 cv
888.038 438.258 895.958 438.88 902.401 444.137 cv
911.59 447.072 920.991 451.495 930.977 451.25 cv
939.688 445.296 946.071 442.313 953.317 435.784 cv
955.632 429.95 961.744 425.718 965.672 418.432 cv
958.764 410.881 955.556 406.809 946.165 404.704 cv
940.037 401.777 940.566 400.602 934.69 400.013 cv
934.69 400.013 li
cp
.305882 .305882 .305882 rgb
f
934.034 401.558 mo
923.693 402.334 912.797 403.243 906.342 410.024 cv
901.472 417.045 893.662 419.123 891.841 427.25 cv
891.401 436.492 898.64 437.06 904.528 441.862 cv
912.924 444.543 921.516 448.582 930.642 448.358 cv
938.603 442.92 944.437 440.195 951.058 434.232 cv
953.173 428.902 958.759 425.038 962.348 418.382 cv
956.035 411.484 953.103 407.765 944.522 405.842 cv
938.922 403.169 939.405 402.096 934.034 401.558 cv
cp
.580392 .568627 .517647 rgb
f
933.385 403.198 mo
924.598 403.857 915.339 404.629 909.854 410.384 cv
905.715 416.344 899.079 418.107 897.531 425.005 cv
897.157 432.851 903.308 433.333 908.312 437.408 cv
915.446 439.684 922.747 443.113 930.502 442.922 cv
937.267 438.306 942.224 435.994 947.851 430.932 cv
949.648 426.408 954.395 423.128 957.444 417.479 cv
952.08 411.624 949.588 408.467 942.296 406.835 cv
937.537 404.566 937.948 403.655 933.385 403.198 cv
933.385 403.198 li
cp
.701961 .694118 .631373 rgb
f
932.319 402.484 mo
926.535 402.917 920.44 403.424 916.829 407.204 cv
914.105 411.118 909.736 412.276 908.718 416.806 cv
908.472 421.959 912.521 422.275 915.815 424.952 cv
920.511 426.446 925.317 428.698 930.422 428.573 cv
934.875 425.542 938.138 424.023 941.842 420.698 cv
943.025 417.728 946.149 415.573 948.157 411.863 cv
944.626 408.018 942.986 405.945 938.186 404.873 cv
935.054 403.382 935.324 402.784 932.319 402.484 cv
932.319 402.484 li
cp
.929412 .929412 .898039 rgb
f
1000.53 429.587 mo
1004.67 418.85 1015.38 410.891 1026.23 405.127 cv
1039.85 403.335 1046.46 408.862 1053.53 412.674 cv
1060.49 422.54 1066.64 430.311 1070.58 437.727 cv
1063.09 445.752 1057.03 451.596 1045.52 454.775 cv
1031.41 456.143 1017.98 455.021 1010.01 447.431 cv
1004.97 441.922 1001.68 437.254 1000.53 429.587 cv
cp
.305882 .305882 .305882 rgb
f
1005.15 429.029 mo
1008.75 419.715 1018.04 412.81 1027.46 407.81 cv
1039.28 406.254 1045.02 411.05 1051.16 414.357 cv
1057.2 422.916 1062.54 429.657 1065.96 436.091 cv
1059.46 443.053 1054.2 448.124 1044.21 450.882 cv
1031.95 452.067 1020.3 451.095 1013.38 444.509 cv
1009.01 439.731 1006.15 435.681 1005.15 429.029 cv
cp
.580392 .568627 .517647 rgb
f
1009.79 425.401 mo
1012.76 417.703 1020.44 411.996 1028.24 407.863 cv
1038.02 406.578 1042.77 410.542 1047.85 413.275 cv
1052.85 420.348 1057.26 425.921 1060.09 431.238 cv
1054.71 436.992 1050.37 441.182 1042.1 443.462 cv
1031.96 444.442 1022.32 443.638 1016.59 438.195 cv
1012.97 434.246 1010.61 430.899 1009.79 425.4 cv
1009.79 425.401 li
cp
.701961 .694118 .631373 rgb
f
1016.56 421.176 mo
1018.73 415.564 1024.35 411.403 1030.04 408.391 cv
1037.19 407.454 1040.66 410.343 1044.37 412.336 cv
1048.02 417.493 1051.25 421.555 1053.32 425.432 cv
1049.39 429.627 1046.21 432.682 1040.17 434.343 cv
1032.76 435.058 1025.72 434.472 1021.53 430.504 cv
1018.89 427.625 1017.16 425.185 1016.56 421.176 cv
1016.56 421.176 li
cp
.929412 .929412 .898039 rgb
f
934.24 442.071 mo
937.373 430.256 946.765 423.749 953.976 417.433 cv
962.631 413.65 971.784 408.676 984.188 405.25 cv
1002.83 413.18 1014.23 427.351 1022 443.732 cv
1012.88 454.51 999.045 466.542 983.159 466.932 cv
967.689 466.954 962.052 459.844 953.006 455.595 cv
946.756 453.13 940.699 445.555 934.24 442.071 cv
934.24 442.071 li
cp
.305882 .305882 .305882 rgb
f
938.527 441.074 mo
941.388 430.288 949.964 424.347 956.549 418.581 cv
964.453 415.129 972.811 410.587 984.138 407.46 cv
1001.16 414.699 1011.57 427.636 1018.67 442.589 cv
1010.34 452.429 997.704 463.413 983.198 463.769 cv
969.07 463.789 963.924 457.298 955.663 453.42 cv
949.956 451.169 944.426 444.254 938.527 441.074 cv
938.527 441.074 li
cp
.580392 .568627 .517647 rgb
f
948.84 435.302 mo
951.05 426.979 957.673 422.396 962.76 417.946 cv
968.863 415.283 975.319 411.778 984.066 409.365 cv
997.216 414.951 1005.26 424.933 1010.73 436.471 cv
1004.3 444.064 994.545 452.539 983.341 452.813 cv
972.43 452.828 968.455 447.82 962.075 444.828 cv
957.667 443.091 953.396 437.755 948.84 435.301 cv
948.84 435.302 li
cp
.701961 .694118 .631373 rgb
f
965.512 424.98 mo
966.684 420.581 970.197 418.158 972.897 415.806 cv
976.135 414.399 979.56 412.546 984.201 411.271 cv
991.178 414.223 995.444 419.499 998.351 425.598 cv
994.939 429.61 989.761 434.09 983.816 434.235 cv
978.027 434.244 975.918 431.596 972.533 430.015 cv
970.194 429.097 967.929 426.276 965.512 424.98 cv
965.512 424.98 li
cp
.929412 .929412 .898039 rgb
f
1050.09 445.754 mo
1056.52 431.285 1069.84 422.914 1080.35 420.734 cv
1096.04 424.553 1103.67 435.081 1112.55 444.955 cv
1104.1 456.548 1089.71 458.858 1075.5 462.785 cv
1064.3 461.916 1057.64 452.952 1050.09 445.754 cv
cp
.305882 .305882 .305882 rgb
f
1052.91 445.392 mo
1058.76 432.234 1070.88 424.622 1080.44 422.64 cv
1094.71 426.112 1101.65 435.687 1109.74 444.666 cv
1102.04 455.208 1088.95 457.309 1076.03 460.879 cv
1065.83 460.089 1059.78 451.938 1052.91 445.392 cv
1052.91 445.392 li
cp
.580392 .568627 .517647 rgb
f
1058.58 441.804 mo
1063.26 431.289 1072.96 425.205 1080.61 423.62 cv
1092.04 426.396 1097.59 434.047 1104.06 441.224 cv
1097.9 449.65 1087.43 451.329 1077.08 454.183 cv
1068.93 453.551 1064.08 447.036 1058.58 441.804 cv
1058.58 441.804 li
cp
.701961 .694118 .631373 rgb
f
1065.73 437.075 mo
1068.94 429.886 1075.59 425.726 1080.84 424.643 cv
1088.67 426.541 1092.48 431.772 1096.92 436.679 cv
1092.69 442.439 1085.51 443.587 1078.42 445.538 cv
1072.82 445.107 1069.5 440.652 1065.73 437.075 cv
1065.73 437.075 li
cp
.929412 .929412 .898039 rgb
f
501.439 422.163 mo
501.439 422.163 454.613 357.878 449.672 320.031 cv
444.16 277.801 468.688 237.85 476.245 195.06 cv
482.969 156.987 469.607 106.595 469.607 106.595 cv
469.607 106.595 515.6 179.272 514.286 228.675 cv
512.724 287.436 495.305 289.242 496.351 318.473 cv
497.084 338.963 507.871 346.806 511.168 373.594 cv
513.043 388.83 501.439 422.163 501.439 422.163 cv
501.439 422.163 li
cp
.231373 .494118 .054902 rgb
f
500.963 397.589 mo
500.963 397.589 458.886 344.64 454.388 312.67 cv
449.357 276.91 471.991 242.466 478.255 206.996 cv
483.829 175.436 479.326 134.892 479.326 134.892 cv
479.326 134.892 510.851 193.904 509.756 234.855 cv
508.454 283.564 495.957 282.516 494.067 303.324 cv
492.529 320.25 488.212 330.918 498.049 354.912 cv
505.553 373.216 500.963 397.589 500.963 397.589 cv
500.963 397.589 li
cp
.458824 .839216 .203922 rgb
f
480.016 208.875 mo
485.675 181.738 482.874 146.57 482.874 146.57 cv
482.874 146.57 508.509 198.416 506.465 233.788 cv
504.035 275.862 469.99 299.353 462.632 291.442 cv
455.274 283.531 473.656 239.373 480.016 208.875 cv
cp
.529412 .937255 .25098 rgb
f
489.677 205.013 mo
494.432 205.901 497.184 212.517 495.825 219.788 cv
494.465 227.059 489.51 232.233 484.755 231.345 cv
480.001 230.456 477.249 223.841 478.607 216.57 cv
479.967 209.298 484.923 204.124 489.677 205.013 cv
cp
.886275 .988235 .662745 rgb
f
700.24 119.526 mo
700.24 119.526 712.227 183.489 701.048 219.704 cv
689.761 256.269 662.269 283.755 654.825 319.719 cv
650.02 342.933 658.276 362.439 656.582 390.816 cv
655.342 411.593 628.986 450.356 628.986 450.356 cv
623.095 438.543 li
623.026 440.26 634.26 432.092 637.48 387.255 cv
640.714 342.208 620.745 309.711 629.463 272.303 cv
638.318 234.304 670.503 205.842 688.388 171.166 cv
700.608 147.475 700.24 119.526 700.24 119.526 cv
700.24 119.526 li
cp
.231373 .494118 .054902 rgb
f
697.832 164.365 mo
697.832 164.365 699.745 208.282 691.324 235.547 cv
682.822 263.076 658.673 286.204 652.886 315.073 cv
649.163 333.65 653.633 343.982 655.987 371.831 cv
657.307 387.443 636.636 429.497 637.216 423.147 cv
637.795 416.797 646.56 401.799 641.975 368.271 cv
636.654 329.357 630.132 305.359 637.504 275.18 cv
644.475 246.644 668.38 225.131 681.84 199.02 cv
691.036 181.18 697.832 164.365 697.832 164.365 cv
697.832 164.365 li
cp
.458824 .839216 .203922 rgb
f
693.724 172.149 mo
693.724 172.149 695.513 213.456 687.59 239.102 cv
679.592 264.998 658.965 287.258 651.439 313.911 cv
647.332 328.452 654.881 365.887 646.901 359.011 cv
638.922 352.135 631.371 303.559 636.986 276.392 cv
642.58 249.333 666.023 229.31 678.683 204.748 cv
687.331 187.966 693.724 172.149 693.724 172.149 cv
693.724 172.149 li
cp
.529412 .937255 .25098 rgb
f
587.518 92.0396 mo
583.377 109.799 582.695 128.553 584.722 146.676 cv
591.044 203.181 626.078 245.805 630.87 310.889 cv
635.662 375.973 573.551 429.032 573.551 429.032 cv
578.643 437.724 li
578.643 437.724 626.886 394.72 641.388 373.597 cv
655.89 352.474 671.232 283.489 667.623 244.99 cv
664.014 206.49 646.321 188.573 636.826 163.739 cv
627.33 138.905 618.682 117.85 614.274 93.7335 cv
607.156 54.7911 622.43 4.21834 622.43 4.21834 cv
622.43 4.21834 596.109 55.1905 587.518 92.0396 cv
cp
.231373 .494118 .054902 rgb
f
590.602 105.826 mo
586.884 121.768 585.947 138.64 588.088 154.869 cv
594.751 205.349 626.368 243.255 635.216 300.172 cv
644.064 357.088 591.991 417.494 591.002 417.821 cv
591.002 417.821 627.392 383.542 640.408 364.581 cv
653.423 345.619 667.197 283.696 663.962 249.139 cv
660.727 214.582 643.362 192.47 634.843 170.18 cv
626.325 147.889 617.51 129.139 613.557 107.492 cv
607.174 72.5372 609.237 43.8282 609.237 43.8282 cv
609.237 43.8282 598.315 72.7491 590.602 105.826 cv
cp
.458824 .839216 .203922 rgb
f
591.281 111.166 mo
588.19 126.259 586.065 142.52 590.164 157.37 cv
600.85 196.085 638.382 278.414 654.453 259.267 cv
670.523 240.12 643.115 191.336 634.535 170.582 cv
625.955 149.829 617.187 132.413 612.918 112.148 cv
606.024 79.4254 607.235 52.3638 607.235 52.3638 cv
607.235 52.3638 597.696 79.8507 591.281 111.166 cv
591.281 111.166 li
cp
.529412 .937255 .25098 rgb
f
625.425 182.443 mo
630.057 180.889 635.827 185.637 638.314 193.047 cv
640.8 200.457 639.061 207.724 634.43 209.278 cv
629.798 210.832 624.028 206.085 621.542 198.674 cv
619.055 191.264 620.794 183.998 625.425 182.443 cv
cp
.886275 .988235 .662745 rgb
f
608.785 146.851 mo
616.372 144.981 624.398 151.08 626.713 160.472 cv
629.027 169.864 624.754 178.994 617.168 180.863 cv
609.582 182.733 601.556 176.635 599.241 167.243 cv
596.926 157.85 601.199 148.72 608.785 146.851 cv
cp
f
489.038 29.3682 mo
489.038 29.3682 536.127 78.7637 555.507 149.327 cv
574.887 219.89 534.89 290.368 533.437 333.55 cv
531.984 376.733 555.805 394.925 556.181 421.702 cv
556.558 448.479 542.112 452.269 542.112 452.269 cv
533.185 447.748 li
533.185 447.748 545.896 442.62 532.83 412.586 cv
519.764 382.553 485.128 340.302 486.452 299.5 cv
487.776 258.696 499.36 235.471 512.897 205.854 cv
526.434 176.238 535.425 159.738 533.04 127.826 cv
530.655 95.9146 489.038 29.3682 489.038 29.3682 cv
489.038 29.3682 li
cp
.231373 .494118 .054902 rgb
f
525.435 88.463 mo
525.435 88.463 535.205 94.3756 551.143 152.425 cv
567.081 210.475 544.335 255.361 534.878 285.672 cv
525.422 315.984 525.91 345.266 534.314 371.568 cv
542.718 397.871 551.619 406.851 548.195 410.149 cv
544.772 413.445 532.309 399.668 519.205 377.835 cv
506.102 356.002 491.914 322.394 492.996 288.829 cv
494.078 255.264 503.594 236.16 514.714 211.799 cv
525.834 187.438 533.088 178.256 536.202 148.126 cv
539.316 117.995 525.435 88.463 525.435 88.463 cv
525.435 88.463 li
cp
.458824 .839216 .203922 rgb
f
528.083 96.6192 mo
528.083 96.6192 536.972 102.207 550.731 155.832 cv
564.49 209.457 541.621 257.516 518.526 257.083 cv
495.432 256.649 505.746 232.091 516.339 209.863 cv
526.933 187.635 533.741 179.304 537.065 151.647 cv
540.388 123.99 528.083 96.6192 528.083 96.6192 cv
cp
.529412 .937255 .25098 rgb
f
542.617 167.984 mo
537.037 167.888 532.404 174.143 532.269 181.955 cv
532.133 189.767 536.547 196.178 542.128 196.274 cv
547.707 196.371 552.34 190.116 552.476 182.304 cv
552.611 174.492 548.197 168.081 542.617 167.984 cv
cp
.886275 .988235 .662745 rgb
f
527.349 210.562 mo
525.611 215.488 527.435 220.621 531.422 222.028 cv
535.41 223.435 540.05 220.582 541.788 215.656 cv
543.526 210.731 541.702 205.597 537.714 204.191 cv
533.727 202.784 529.086 205.637 527.349 210.562 cv
cp
f
574.958 83.3258 mo
574.958 83.3258 538.954 165.903 539.771 211.431 cv
540.364 244.442 564.464 265.734 569.762 294.782 cv
575.614 326.878 563.171 361.292 571.264 392.643 cv
579.358 423.995 594.581 433.765 594.581 433.765 cv
611.962 428.85 li
611.962 428.85 595.87 403.124 602.247 383.224 cv
617.842 334.562 617.992 315.639 612.273 282.329 cv
606.921 251.157 581.725 225.337 571.936 196.445 cv
557.07 152.569 574.958 83.3258 574.958 83.3258 cv
cp
.231373 .494118 .054902 rgb
f
563.535 121.225 mo
563.535 121.225 543.572 177.216 544.253 214.67 cv
544.748 241.826 566.778 265.717 571.22 290.467 cv
576.145 317.904 568.307 345.471 572.357 364.744 cv
576.408 384.017 589.403 405.177 589.403 405.177 cv
589.403 405.177 592.776 377.657 598.008 361.288 cv
610.804 321.26 610.922 305.694 606.219 278.291 cv
601.817 252.647 581.121 231.4 573.075 207.631 cv
560.857 171.534 563.535 121.225 563.535 121.225 cv
cp
.458824 .839216 .203922 rgb
f
563.689 125.309 mo
563.689 125.309 547.889 180.792 548.534 216.064 cv
549.002 241.639 579.096 281.325 593.548 275.483 cv
611.814 265.208 580.25 229.07 572.676 206.684 cv
561.173 172.688 563.689 125.309 563.689 125.309 cv
cp
.529412 .937255 .25098 rgb
f
567.378 223.673 mo
571.84 221.807 578.251 226.972 581.697 235.21 cv
585.142 243.447 584.318 251.638 579.856 253.504 cv
575.394 255.371 568.983 250.206 565.538 241.968 cv
562.092 233.73 562.917 225.539 567.378 223.673 cv
cp
.886275 .988235 .662745 rgb
f
706.226 197.208 mo
706.226 197.208 694.641 236.097 694.669 256.104 cv
694.708 284.429 716.453 309.018 711.262 339.444 cv
706.091 369.757 677.297 401.877 645.5 431.374 cv
631.972 443.922 629.897 460.581 629.897 460.581 cv
624.669 451.355 li
624.669 451.355 630.004 424.715 645.019 408.093 cv
664.012 387.067 673.691 365.389 679.549 345.556 cv
690.23 309.4 668.362 297.665 671.929 269.605 cv
676.253 235.584 706.226 197.208 706.226 197.208 cv
706.226 197.208 li
cp
.231373 .494118 .054902 rgb
f
696.106 219.457 mo
696.106 219.457 688.638 251.951 691.655 266.728 cv
696.611 291.004 711.888 311.79 707.346 338.408 cv
702.821 364.928 689.062 384.053 661.268 409.863 cv
649.443 420.843 639.069 437.341 635.73 435.54 cv
637.917 425.093 642.577 413.243 655.703 398.699 cv
672.305 380.302 679.832 361.156 684.956 343.805 cv
694.296 312.173 672.491 293.153 675.613 268.606 cv
679.398 238.842 696.106 219.457 696.106 219.457 cv
696.106 219.457 li
cp
.458824 .839216 .203922 rgb
f
696.106 219.457 mo
696.106 219.457 688.638 251.951 691.655 266.728 cv
696.611 291.004 712.391 323.544 703.595 323.736 cv
694.798 323.928 672.491 293.153 675.613 268.606 cv
679.398 238.842 696.106 219.457 696.106 219.457 cv
696.106 219.457 li
cp
.529412 .937255 .25098 rgb
f
688.06 296.41 mo
691.027 293.561 695.865 297.085 698.866 304.282 cv
701.867 311.479 701.895 319.623 698.928 322.471 cv
695.961 325.32 691.122 321.796 688.121 314.599 cv
685.12 307.402 685.093 299.258 688.06 296.41 cv
cp
.886275 .988235 .662745 rgb
f
485.594 427.465 mo
472.811 425.981 439.184 420.637 444.087 436.907 cv
428.811 438.114 417.944 446.501 422.092 460.265 cv
429.722 460.931 437.594 462.044 444.176 461.896 cv
453.638 465.127 463.117 458.366 468.221 462.82 cv
464.894 465.416 473.034 472.287 482.012 470.706 cv
490.991 469.126 496.898 468.936 503.614 472.256 cv
509.875 487.077 525.45 475.42 534.378 473.159 cv
539.82 479.452 548.286 473.91 556.434 473.726 cv
566.222 480.809 576.841 472.571 587.649 469.834 cv
596.999 478.349 609.183 482.896 618.5 473.925 cv
641.027 481.077 649.637 469.012 663.159 465.588 cv
675.739 466.93 684.113 463.584 685.566 457.64 cv
695.494 457.238 705.305 456.844 710.704 451.645 cv
705.303 437.897 689.554 438.677 675.075 442.344 cv
662.763 445.013 651.873 439.694 647.717 438.706 cv
636.359 439.417 632.043 429.197 620.868 432.398 cv
593.363 430.809 559.051 437.203 536.082 428.457 cv
520.908 428.565 499.011 418.216 485.594 427.465 cv
485.594 427.465 li
cp
.858824 .623529 .313726 rgb
f
491.754 414.922 mo
486.45 408.07 480.647 402.963 472.939 402.855 cv
465.23 402.747 457.434 408.454 452.806 412.632 cv
447.11 419.138 446.791 421.013 444.885 429.534 cv
456.489 435.718 466.016 435.433 477.503 438.013 cv
486.842 438.298 488.929 433.989 493.98 430.182 cv
492.124 424.229 497.058 421.775 491.754 414.922 cv
491.754 414.922 li
cp
.305882 .305882 .305882 rgb
f
489.941 415.376 mo
485.071 409.087 479.743 404.4 472.665 404.301 cv
465.586 404.202 458.428 409.44 454.179 413.274 cv
448.949 419.245 448.656 420.966 446.906 428.786 cv
457.561 434.462 466.309 434.2 476.856 436.568 cv
485.431 436.83 487.347 432.876 491.984 429.381 cv
490.281 423.918 494.811 421.665 489.941 415.376 cv
cp
.580392 .568627 .517647 rgb
f
486.729 413.401 mo
482.869 408.425 478.647 404.716 473.038 404.638 cv
467.429 404.559 461.756 408.704 458.388 411.738 cv
454.244 416.462 454.011 417.825 452.625 424.013 cv
461.068 428.504 468.001 428.297 476.359 430.171 cv
483.155 430.378 484.673 427.249 488.348 424.484 cv
486.998 420.16 490.588 418.378 486.729 413.401 cv
486.729 413.401 li
cp
.701961 .694118 .631373 rgb
f
481.49 410.502 mo
479.045 407.363 476.371 405.024 472.818 404.974 cv
469.266 404.924 465.673 407.539 463.541 409.453 cv
460.916 412.433 460.768 413.292 459.89 417.195 cv
465.238 420.028 469.628 419.898 474.922 421.08 cv
479.226 421.211 480.188 419.237 482.516 417.493 cv
481.66 414.766 483.934 413.641 481.49 410.502 cv
cp
.929412 .929412 .898039 rgb
f
513.584 400.171 mo
502.269 401.021 490.345 402.017 483.281 409.44 cv
477.952 417.127 469.406 419.401 467.414 428.298 cv
466.932 438.417 474.853 439.039 481.296 444.296 cv
490.484 447.231 499.886 451.653 509.871 451.408 cv
518.583 445.454 524.966 442.471 532.212 435.942 cv
534.527 430.108 540.638 425.877 544.566 418.59 cv
537.658 411.039 534.45 406.967 525.059 404.862 cv
518.932 401.935 519.461 400.76 513.584 400.171 cv
513.584 400.171 li
cp
.305882 .305882 .305882 rgb
f
512.929 401.716 mo
502.588 402.492 491.692 403.401 485.236 410.182 cv
480.366 417.203 472.557 419.281 470.735 427.408 cv
470.296 436.65 477.534 437.218 483.422 442.02 cv
491.819 444.701 500.411 448.741 509.536 448.517 cv
517.497 443.078 523.331 440.354 529.952 434.39 cv
532.068 429.061 537.653 425.196 541.243 418.54 cv
534.93 411.643 531.998 407.924 523.416 406.001 cv
517.816 403.327 518.299 402.254 512.929 401.716 cv
cp
.580392 .568627 .517647 rgb
f
512.279 403.357 mo
503.492 404.015 494.233 404.787 488.748 410.542 cv
484.609 416.502 477.973 418.265 476.426 425.164 cv
476.052 433.009 482.202 433.491 487.206 437.566 cv
494.341 439.842 501.642 443.271 509.396 443.081 cv
516.161 438.464 521.118 436.152 526.745 431.09 cv
528.543 426.567 533.289 423.286 536.339 417.637 cv
530.975 411.782 528.483 408.626 521.19 406.993 cv
516.432 404.724 516.843 403.813 512.279 403.357 cv
512.279 403.357 li
cp
.701961 .694118 .631373 rgb
f
511.214 402.643 mo
505.43 403.075 499.335 403.582 495.724 407.362 cv
493 411.276 488.631 412.434 487.612 416.964 cv
487.366 422.117 491.415 422.433 494.709 425.11 cv
499.406 426.605 504.211 428.857 509.316 428.732 cv
513.769 425.7 517.033 424.181 520.736 420.857 cv
521.92 417.886 525.044 415.732 527.052 412.021 cv
523.521 408.176 521.88 406.103 517.08 405.031 cv
513.948 403.541 514.218 402.942 511.214 402.643 cv
511.214 402.643 li
cp
.929412 .929412 .898039 rgb
f
579.429 429.745 mo
583.568 419.008 594.27 411.049 605.122 405.285 cv
618.742 403.493 625.355 409.021 632.422 412.832 cv
639.381 422.698 645.532 430.469 649.47 437.885 cv
641.98 445.91 635.926 451.754 624.417 454.934 cv
610.3 456.301 596.878 455.179 588.905 447.589 cv
583.869 442.08 580.579 437.413 579.429 429.745 cv
cp
.305882 .305882 .305882 rgb
f
584.047 429.187 mo
587.64 419.873 596.931 412.968 606.352 407.968 cv
618.176 406.413 623.917 411.208 630.052 414.515 cv
636.093 423.074 641.433 429.816 644.852 436.25 cv
638.349 443.212 633.094 448.282 623.103 451.04 cv
610.847 452.226 599.195 451.253 592.273 444.668 cv
587.901 439.889 585.045 435.839 584.047 429.187 cv
cp
.580392 .568627 .517647 rgb
f
588.68 425.559 mo
591.653 417.861 599.339 412.154 607.134 408.022 cv
616.917 406.736 621.667 410.7 626.743 413.433 cv
631.741 420.506 636.159 426.079 638.988 431.396 cv
633.607 437.15 629.259 441.34 620.993 443.62 cv
610.853 444.6 601.212 443.796 595.486 438.354 cv
591.869 434.404 589.506 431.057 588.68 425.559 cv
588.68 425.559 li
cp
.701961 .694118 .631373 rgb
f
595.453 421.335 mo
597.626 415.722 603.242 411.562 608.938 408.549 cv
616.087 407.612 619.557 410.502 623.267 412.494 cv
626.919 417.651 630.147 421.713 632.214 425.59 cv
628.283 429.785 625.106 432.84 619.065 434.502 cv
611.656 435.216 604.611 434.63 600.427 430.662 cv
597.783 427.783 596.057 425.343 595.453 421.335 cv
595.453 421.335 li
cp
.929412 .929412 .898039 rgb
f
513.135 442.23 mo
516.267 430.414 525.659 423.907 532.871 417.591 cv
541.526 413.809 550.679 408.834 563.083 405.408 cv
581.726 413.338 593.128 427.51 600.894 443.89 cv
591.777 454.669 577.94 466.701 562.054 467.09 cv
546.583 467.112 540.946 460.003 531.9 455.754 cv
525.65 453.288 519.594 445.713 513.134 442.23 cv
513.135 442.23 li
cp
.305882 .305882 .305882 rgb
f
517.422 441.233 mo
520.282 430.446 528.858 424.505 535.444 418.74 cv
543.347 415.287 551.706 410.746 563.032 407.618 cv
580.056 414.858 590.467 427.795 597.56 442.748 cv
589.234 452.587 576.599 463.572 562.092 463.927 cv
547.965 463.948 542.818 457.457 534.558 453.578 cv
528.851 451.328 523.32 444.413 517.422 441.233 cv
517.422 441.233 li
cp
.580392 .568627 .517647 rgb
f
527.734 435.46 mo
529.944 427.138 536.567 422.554 541.654 418.105 cv
547.758 415.441 554.213 411.937 562.961 409.524 cv
576.11 415.109 584.151 425.091 589.628 436.629 cv
583.199 444.222 573.44 452.697 562.236 452.971 cv
551.325 452.986 547.35 447.979 540.969 444.986 cv
536.562 443.25 532.291 437.914 527.734 435.46 cv
527.734 435.46 li
cp
.701961 .694118 .631373 rgb
f
544.406 425.138 mo
545.578 420.739 549.092 418.316 551.791 415.964 cv
555.029 414.557 558.455 412.705 563.096 411.429 cv
570.072 414.381 574.338 419.657 577.245 425.756 cv
573.833 429.769 568.655 434.249 562.711 434.394 cv
556.922 434.402 554.813 431.755 551.428 430.173 cv
549.089 429.255 546.823 426.435 544.406 425.138 cv
544.406 425.138 li
cp
.929412 .929412 .898039 rgb
f
628.984 445.912 mo
635.414 431.443 648.738 423.072 659.245 420.893 cv
674.934 424.711 682.562 435.239 691.447 445.113 cv
682.99 456.706 668.599 459.017 654.396 462.943 cv
643.192 462.074 636.539 453.11 628.984 445.912 cv
cp
.305882 .305882 .305882 rgb
f
631.801 445.55 mo
637.65 432.393 649.773 424.78 659.333 422.798 cv
673.607 426.271 680.546 435.845 688.631 444.824 cv
680.936 455.366 667.843 457.467 654.92 461.038 cv
644.728 460.248 638.674 452.096 631.801 445.55 cv
631.801 445.55 li
cp
.580392 .568627 .517647 rgb
f
637.476 441.962 mo
642.157 431.447 651.858 425.363 659.509 423.779 cv
670.932 426.554 676.486 434.206 682.956 441.382 cv
676.798 449.808 666.32 451.487 655.978 454.341 cv
647.821 453.71 642.977 447.194 637.476 441.962 cv
637.476 441.962 li
cp
.701961 .694118 .631373 rgb
f
644.622 437.233 mo
647.832 430.044 654.484 425.884 659.731 424.801 cv
667.565 426.699 671.374 431.93 675.811 436.837 cv
671.587 442.597 664.402 443.745 657.31 445.696 cv
651.716 445.265 648.394 440.81 644.622 437.233 cv
644.622 437.233 li
cp
.929412 .929412 .898039 rgb
f
105.117 420.928 mo
105.117 420.928 47.2764 366.341 35.4664 330.047 cv
22.2882 289.548 39.0582 245.77 38.6246 202.32 cv
38.2383 163.661 15.8448 116.582 15.8448 116.582 cv
15.8448 116.582 74.4083 179.57 82.1944 228.373 cv
91.4556 286.421 74.6651 291.397 81.064 319.938 cv
85.5499 339.945 100.322 349.273 108.484 375 cv
113.127 389.631 105.117 420.928 105.117 420.928 cv
105.117 420.928 li
cp
.231373 .494118 .054902 rgb
f
101.378 392.517 mo
101.378 392.517 49.3638 351.551 38.7496 321.944 cv
26.5621 287.951 43.1534 249.702 42.794 213.684 cv
42.4742 181.637 30.5977 142.611 30.5977 142.611 cv
30.5977 142.611 72.4288 194.826 78.877 235.281 cv
86.5469 283.4 74.0704 284.666 76.0352 305.467 cv
77.6339 322.387 77.9049 332.214 89.4283 355.445 cv
95.0821 366.843 101.378 392.517 101.378 392.517 cv
101.378 392.517 li
cp
.458824 .839216 .203922 rgb
f
44.8697 215.207 mo
45.4464 187.493 36.231 153.439 36.231 153.439 cv
36.231 153.439 70.9556 199.691 75.4464 234.837 cv
80.7877 276.641 51.6392 305.987 42.9527 299.563 cv
34.2667 293.139 44.2217 246.355 44.8697 215.207 cv
cp
.529412 .937255 .25098 rgb
f
53.6568 209.636 mo
58.4937 209.636 62.4141 215.633 62.4141 223.03 cv
62.4141 230.427 58.4937 236.424 53.6568 236.424 cv
48.8199 236.424 44.899 230.427 44.899 223.03 cv
44.899 215.633 48.8199 209.636 53.6568 209.636 cv
cp
.886275 .988235 .662745 rgb
f
243 83.8844 mo
243 83.8844 209.005 139.376 206.545 177.196 cv
204.061 215.383 219.952 250.862 214.091 287.118 cv
210.308 310.52 195.643 325.803 187.113 352.921 cv
180.868 372.775 191.68 418.386 191.68 418.386 cv
201.394 409.448 li
200.846 411.077 193.26 399.442 206.23 356.401 cv
219.261 313.159 249.5 289.912 254.686 251.853 cv
259.953 213.193 240.024 175.13 235.67 136.357 cv
232.695 109.866 243 83.8844 243 83.8844 cv
243 83.8844 li
cp
.231373 .494118 .054902 rgb
f
229.271 126.637 mo
229.271 126.637 211.833 166.989 209.984 195.465 cv
208.118 224.216 222.44 254.432 217.558 283.467 cv
214.417 302.152 206.558 310.212 194.435 335.394 cv
187.638 349.511 191.965 396.17 193.686 390.031 cv
195.408 383.892 192.564 366.754 208.795 337.062 cv
227.635 302.598 242.28 282.5 246.147 251.675 cv
249.803 222.529 235.133 193.909 231.863 164.716 cv
229.628 144.771 229.271 126.637 229.271 126.637 cv
229.271 126.637 li
cp
.458824 .839216 .203922 rgb
f
230.335 135.374 mo
230.335 135.374 213.943 173.331 212.206 200.117 cv
210.451 227.163 221.791 255.313 219.325 282.898 cv
217.98 297.948 197.587 330.235 207.492 326.654 cv
217.399 323.072 241.765 280.377 246.199 252.992 cv
250.616 225.716 235.846 198.654 232.772 171.192 cv
230.671 152.431 230.335 135.374 230.335 135.374 cv
230.335 135.374 li
cp
.529412 .937255 .25098 rgb
f
115.082 94.3697 mo
116.821 112.522 122.156 130.514 129.858 147.044 cv
153.872 198.582 200.67 227.806 225.971 287.962 cv
251.271 348.118 209.327 418.216 209.327 418.216 cv
216.925 424.83 li
216.925 424.83 248.933 368.686 255.94 344.04 cv
262.947 319.395 255.486 249.12 239.786 213.782 cv
224.086 178.445 201.603 167.106 184.682 146.597 cv
167.762 126.089 152.85 108.893 140.981 87.4415 cv
121.814 52.8028 120.16 7.94592e-05 120.16 7.94592e-05 cv
120.16 7.94592e-05 111.471 56.7047 115.082 94.3697 cv
cp
.231373 .494118 .054902 rgb
f
122.401 106.452 mo
123.963 122.747 128.456 139.038 135.662 153.735 cv
158.076 199.455 200.133 225.296 226.671 276.419 cv
253.211 327.54 223.125 401.4 222.291 402.025 cv
222.291 402.025 245.848 357.93 252.135 335.807 cv
258.423 313.685 251.728 250.603 237.64 218.882 cv
223.551 187.162 200.041 171.744 184.858 153.335 cv
169.675 134.925 155.34 119.965 144.69 100.71 cv
127.491 69.6163 120.29 41.7491 120.29 41.7491 cv
120.29 41.7491 119.162 72.6427 122.401 106.452 cv
cp
.458824 .839216 .203922 rgb
f
124.749 111.297 mo
126.632 126.587 129.805 142.677 138.426 155.444 cv
160.902 188.729 222.733 254.787 231.857 231.514 cv
240.982 208.241 199.445 170.747 184.693 153.814 cv
169.942 136.881 156.078 123.171 145.568 105.327 cv
128.598 76.5118 121.114 50.4771 121.114 50.4771 cv
121.114 50.4771 120.84 79.5709 124.749 111.297 cv
124.749 111.297 li
cp
.529412 .937255 .25098 rgb
f
179.843 167.962 mo
183.737 165.011 190.72 167.67 195.44 173.9 cv
200.16 180.13 200.83 187.572 196.936 190.523 cv
193.043 193.472 186.06 190.814 181.339 184.584 cv
176.619 178.353 175.95 170.911 179.843 167.962 cv
cp
.886275 .988235 .662745 rgb
f
152.72 139.535 mo
159.314 135.343 168.866 138.563 174.056 146.727 cv
179.245 154.89 178.107 164.906 171.514 169.098 cv
164.92 173.289 155.368 170.069 150.178 161.906 cv
144.988 153.742 146.127 143.727 152.72 139.535 cv
cp
f
104.355 8.4117 mo
104.355 8.4117 67.3604 65.7594 61.5523 138.704 cv
55.7442 211.649 108.244 273.38 117.767 315.525 cv
127.29 357.669 107.301 380.005 111.951 406.377 cv
116.601 432.75 131.501 433.764 131.501 433.764 cv
139.423 427.65 li
139.423 427.65 125.976 424.996 133.18 393.046 cv
140.384 361.095 166.486 313.101 157.536 273.269 cv
148.586 233.438 132.853 212.795 114.003 186.242 cv
95.1549 159.688 83.23 145.167 79.5904 113.374 cv
75.9508 81.5806 104.355 8.41219 104.355 8.41219 cv
104.355 8.4117 li
cp
.231373 .494118 .054902 rgb
f
79.6812 73.2823 mo
79.6812 73.2823 71.1925 80.9215 66.4195 140.93 cv
61.6466 200.939 92.4049 240.765 107.376 268.766 cv
122.346 296.767 127.357 325.621 124.032 353.033 cv
120.708 380.444 113.649 390.934 117.63 393.531 cv
121.611 396.128 131.27 380.258 140.048 356.356 cv
148.827 332.454 156.462 296.782 149.107 264.015 cv
141.753 231.248 128.823 214.266 113.334 192.422 cv
97.8438 170.577 88.9971 162.919 80.2901 133.906 cv
71.5826 104.893 79.6812 73.2823 79.6812 73.2823 cv
79.6812 73.2823 li
cp
.458824 .839216 .203922 rgb
f
78.6094 81.7901 mo
78.6094 81.7901 70.9254 88.9459 67.463 144.199 cv
64.001 199.452 95.4747 242.373 118.078 237.617 cv
140.682 232.861 125.947 210.673 111.374 190.825 cv
96.8013 170.977 88.5523 164.07 80.1026 137.526 cv
71.6534 110.982 78.6094 81.7901 78.6094 81.7901 cv
cp
.529412 .937255 .25098 rgb
f
77.7115 154.615 mo
83.1744 153.474 88.898 158.749 90.4952 166.398 cv
92.0924 174.045 88.9586 181.17 83.4957 182.312 cv
78.0328 183.452 72.3096 178.177 70.712 170.529 cv
69.1148 162.881 72.2486 155.756 77.7115 154.615 cv
cp
.886275 .988235 .662745 rgb
f
100.691 193.576 mo
103.321 198.088 102.492 203.472 98.8394 205.602 cv
95.1861 207.731 90.0928 205.799 87.4625 201.286 cv
84.8321 196.774 85.6612 191.39 89.3145 189.26 cv
92.9674 187.131 98.0606 189.063 100.691 193.576 cv
cp
f
193.597 79.1768 mo
193.597 79.1768 145.55 155.378 139.491 200.509 cv
135.098 233.232 155.712 257.916 156.566 287.431 cv
157.511 320.041 140.02 352.185 143.292 384.399 cv
146.564 416.612 160.14 428.567 160.14 428.567 cv
178.064 426.329 li
178.064 426.329 166.035 398.47 175.341 379.76 cv
198.097 334.006 201.099 315.323 200.47 281.532 cv
199.881 249.909 178.868 220.584 173.548 190.546 cv
165.47 144.93 193.597 79.1768 193.597 79.1768 cv
cp
.231373 .494118 .054902 rgb
f
176.588 114.92 mo
176.588 114.92 148.409 167.26 143.433 204.387 cv
139.826 231.307 158.002 258.248 158.659 283.385 cv
159.389 311.251 147.483 337.319 148.58 356.983 cv
149.677 376.647 159.333 399.525 159.333 399.525 cv
159.333 399.525 166.818 372.828 174.46 357.436 cv
193.146 319.796 195.61 304.426 195.094 276.627 cv
194.61 250.612 177.356 226.487 172.987 201.776 cv
166.354 164.249 176.588 114.92 176.588 114.92 cv
cp
.458824 .839216 .203922 rgb
f
176.125 118.98 mo
176.125 118.98 152.138 171.445 147.455 206.411 cv
144.06 231.764 167.824 275.535 182.992 271.94 cv
202.598 264.537 176.846 224.052 172.735 200.78 cv
166.492 165.437 176.125 118.98 176.125 118.98 cv
cp
.529412 .937255 .25098 rgb
f
164.936 216.775 mo
169.628 215.603 175.187 221.676 177.35 230.339 cv
179.514 239.003 177.463 246.976 172.771 248.148 cv
168.079 249.319 162.52 243.247 160.357 234.584 cv
158.193 225.92 160.244 217.947 164.936 216.775 cv
cp
.886275 .988235 .662745 rgb
f
269.815 172.375 mo
269.815 172.375 265.717 212.746 269.49 232.394 cv
274.833 260.211 300.798 280.293 301.397 311.153 cv
301.993 341.899 279.723 378.842 254.011 413.771 cv
243.073 428.63 244.153 445.383 244.153 445.383 cv
237.29 437.299 li
237.29 437.299 237.543 410.132 249.18 390.992 cv
263.899 366.782 269.348 343.674 271.389 323.095 cv
275.11 285.578 251.431 278.146 249.681 249.915 cv
247.558 215.685 269.815 172.375 269.815 172.375 cv
269.815 172.375 li
cp
.231373 .494118 .054902 rgb
f
264.04 196.127 mo
264.04 196.127 262.789 229.443 268.52 243.395 cv
277.934 266.313 296.833 283.87 297.356 310.869 cv
297.877 337.767 287.942 359.13 265.472 389.688 cv
255.913 402.688 248.812 420.837 245.194 419.693 cv
245.387 409.022 247.745 396.508 257.915 379.763 cv
270.779 358.583 274.587 338.367 276.372 320.363 cv
279.624 287.542 254.643 272.941 253.113 248.243 cv
251.258 218.297 264.04 196.127 264.04 196.127 cv
264.04 196.127 li
cp
.458824 .839216 .203922 rgb
f
264.04 196.127 mo
264.04 196.127 262.789 229.443 268.52 243.395 cv
277.934 266.313 299.527 295.323 290.923 297.158 cv
282.318 298.994 254.643 272.941 253.113 248.243 cv
251.258 218.297 264.04 196.127 264.04 196.127 cv
264.04 196.127 li
cp
.529412 .937255 .25098 rgb
f
270.546 273.224 mo
272.927 269.87 278.34 272.426 282.635 278.934 cv
286.931 285.441 288.483 293.436 286.102 296.79 cv
283.721 300.144 278.308 297.588 274.012 291.081 cv
269.716 284.573 268.165 276.579 270.546 273.224 cv
cp
.886275 .988235 .662745 rgb
f
64.6343 427.358 mo
51.8507 425.874 18.2242 420.53 23.1265 436.8 cv
7.85017 438.007 -3.01556 446.394 1.13191 460.158 cv
8.76179 460.824 16.6343 461.937 23.2154 461.788 cv
32.6778 465.02 42.1573 458.259 47.2608 462.713 cv
43.9337 465.309 52.0733 472.18 61.0523 470.599 cv
70.0313 469.019 75.9385 468.829 82.6534 472.149 cv
88.9146 486.97 104.49 475.313 113.418 473.052 cv
118.86 479.345 127.326 473.802 135.474 473.619 cv
145.262 480.702 155.881 472.463 166.69 469.727 cv
176.039 478.243 188.223 482.789 197.54 473.818 cv
220.067 480.969 228.677 468.905 242.198 465.481 cv
254.779 466.823 263.153 463.477 264.606 457.533 cv
274.534 457.131 284.345 456.737 289.744 451.538 cv
284.343 437.79 268.594 438.57 254.115 442.237 cv
241.803 444.905 230.912 439.587 226.757 438.599 cv
215.399 439.31 211.083 429.09 199.908 432.291 cv
172.403 430.702 138.091 437.096 115.122 428.349 cv
99.9478 428.458 78.0508 418.109 64.6343 427.358 cv
64.6343 427.358 li
cp
.858824 .623529 .313726 rgb
f
70.7935 414.816 mo
65.4898 407.963 59.6866 402.856 51.9781 402.748 cv
44.2696 402.64 36.4737 408.347 31.8458 412.525 cv
26.1505 419.03 25.8301 420.906 23.9254 429.427 cv
35.5289 435.611 45.0562 435.326 56.543 437.906 cv
65.8824 438.191 67.9688 433.882 73.0196 430.075 cv
71.1636 424.122 76.0977 421.668 70.7935 414.816 cv
70.7935 414.816 li
cp
.305882 .305882 .305882 rgb
f
68.981 415.269 mo
64.1109 408.98 58.7828 404.293 51.7047 404.194 cv
44.6265 404.095 37.4683 409.332 33.2188 413.167 cv
27.9893 419.137 27.6954 420.858 25.9464 428.679 cv
36.6007 434.355 45.3487 434.093 55.8961 436.461 cv
64.4713 436.723 66.3873 432.768 71.0245 429.275 cv
69.3204 423.81 73.8511 421.558 68.981 415.269 cv
cp
.580392 .568627 .517647 rgb
f
65.7686 413.295 mo
61.9092 408.317 57.6866 404.609 52.0777 404.53 cv
46.4683 404.452 40.796 408.597 37.4283 411.631 cv
33.2842 416.356 33.0513 417.717 31.6651 423.906 cv
40.1085 428.397 47.0406 428.19 55.399 430.064 cv
62.1944 430.271 63.713 427.142 67.3878 424.377 cv
66.0377 420.053 69.6275 418.271 65.7686 413.295 cv
65.7686 413.295 li
cp
.701961 .694118 .631373 rgb
f
60.5299 410.395 mo
58.0855 407.256 55.4112 404.916 51.8585 404.867 cv
48.3062 404.817 44.7134 407.432 42.5801 409.346 cv
39.9556 412.326 39.8082 413.185 38.9302 417.088 cv
44.2779 419.921 48.6685 419.791 53.9625 420.973 cv
58.2662 421.104 59.2281 419.13 61.5552 417.386 cv
60.7003 414.658 62.9742 413.534 60.5299 410.395 cv
cp
.929412 .929412 .898039 rgb
f
92.6241 400.065 mo
81.3087 400.914 69.3848 401.91 62.3214 409.333 cv
56.9918 417.02 48.4464 419.294 46.4537 428.191 cv
45.9722 438.31 53.8926 438.932 60.336 444.189 cv
69.524 447.123 78.9258 451.546 88.9107 451.301 cv
97.6226 445.347 104.006 442.364 111.252 435.835 cv
113.566 430.001 119.678 425.77 123.606 418.483 cv
116.698 410.932 113.49 406.86 104.099 404.755 cv
97.9713 401.828 98.5006 400.653 92.6241 400.065 cv
92.6241 400.065 li
cp
.305882 .305882 .305882 rgb
f
91.9688 401.609 mo
81.628 402.385 70.7315 403.295 64.2764 410.075 cv
59.4063 417.096 51.5967 419.174 49.7755 427.301 cv
49.336 436.543 56.5738 437.111 62.4625 441.913 cv
70.8585 444.594 79.4508 448.633 88.5758 448.409 cv
96.5367 442.971 102.371 440.246 108.992 434.283 cv
111.108 428.954 116.693 425.088 120.282 418.433 cv
113.97 411.536 111.037 407.816 102.456 405.894 cv
96.856 403.22 97.3394 402.147 91.9688 401.609 cv
cp
.580392 .568627 .517647 rgb
f
91.3194 403.249 mo
82.5323 403.907 73.273 404.68 67.7877 410.435 cv
63.6495 416.395 57.0133 418.158 55.4654 425.057 cv
55.0919 432.901 61.2423 433.384 66.2462 437.46 cv
73.3809 439.735 80.6817 443.164 88.4361 442.974 cv
95.2008 438.358 100.158 436.045 105.785 430.983 cv
107.583 426.46 112.329 423.179 115.379 417.53 cv
110.015 411.675 107.523 408.518 100.231 406.886 cv
95.4722 404.617 95.8829 403.706 91.3194 403.249 cv
91.3194 403.249 li
cp
.701961 .694118 .631373 rgb
f
90.254 402.535 mo
84.4698 402.968 78.3746 403.475 74.7637 407.254 cv
72.0391 411.169 67.671 412.327 66.6524 416.858 cv
66.4063 422.009 70.4551 422.326 73.7491 425.003 cv
78.4454 426.497 83.2515 428.749 88.356 428.625 cv
92.8092 425.593 96.0723 424.074 99.7764 420.75 cv
100.96 417.779 104.084 415.624 106.092 411.914 cv
102.561 408.069 100.92 405.996 96.1202 404.924 cv
92.9879 403.433 93.2584 402.836 90.254 402.536 cv
90.254 402.535 li
cp
.929412 .929412 .898039 rgb
f
158.468 429.637 mo
162.608 418.901 173.309 410.941 184.162 405.178 cv
197.782 403.386 204.395 408.914 211.462 412.725 cv
218.421 422.59 224.572 430.362 228.51 437.778 cv
221.02 445.803 214.966 451.648 203.457 454.827 cv
189.339 456.194 175.918 455.072 167.945 447.482 cv
162.909 441.973 159.619 437.305 158.468 429.637 cv
cp
.305882 .305882 .305882 rgb
f
163.087 429.08 mo
166.68 419.766 175.97 412.861 185.392 407.861 cv
197.216 406.306 202.957 411.101 209.092 414.408 cv
215.133 422.966 220.473 429.709 223.892 436.143 cv
217.389 443.105 212.134 448.175 202.143 450.933 cv
189.887 452.119 178.234 451.146 171.314 444.561 cv
166.941 439.782 164.086 435.733 163.087 429.08 cv
cp
.580392 .568627 .517647 rgb
f
167.72 425.452 mo
170.693 417.754 178.379 412.047 186.174 407.915 cv
195.957 406.629 200.707 410.593 205.783 413.326 cv
210.781 420.4 215.199 425.971 218.028 431.289 cv
212.648 437.043 208.299 441.233 200.033 443.513 cv
189.893 444.493 180.253 443.689 174.526 438.246 cv
170.909 434.296 168.546 430.95 167.72 425.452 cv
167.72 425.452 li
cp
.701961 .694118 .631373 rgb
f
174.493 421.227 mo
176.666 415.615 182.282 411.454 187.978 408.441 cv
195.127 407.504 198.597 410.394 202.307 412.387 cv
205.959 417.544 209.187 421.606 211.254 425.483 cv
207.323 429.678 204.146 432.733 198.105 434.395 cv
190.696 435.109 183.651 434.523 179.467 430.555 cv
176.823 427.676 175.097 425.235 174.493 421.228 cv
174.493 421.227 li
cp
.929412 .929412 .898039 rgb
f
92.1744 442.123 mo
95.3072 430.307 104.699 423.8 111.91 417.483 cv
120.565 413.702 129.719 408.727 142.122 405.301 cv
160.766 413.231 172.168 427.402 179.934 443.783 cv
170.817 454.561 156.98 466.593 141.094 466.983 cv
125.623 467.004 119.986 459.895 110.94 455.646 cv
104.69 453.181 98.6339 445.607 92.1744 442.123 cv
92.1744 442.123 li
cp
.305882 .305882 .305882 rgb
f
96.4615 441.125 mo
99.3223 430.339 107.898 424.399 114.483 418.632 cv
122.387 415.18 130.745 410.639 142.072 407.511 cv
159.096 414.75 169.507 427.688 176.6 442.641 cv
168.274 452.481 155.639 463.464 141.132 463.82 cv
127.005 463.84 121.858 457.35 113.598 453.471 cv
107.89 451.22 102.36 444.305 96.4615 441.125 cv
96.4615 441.125 li
cp
.580392 .568627 .517647 rgb
f
106.774 435.353 mo
108.984 427.03 115.607 422.446 120.694 417.998 cv
126.798 415.334 133.253 411.83 142.001 409.416 cv
155.15 415.002 163.191 424.984 168.669 436.522 cv
162.238 444.114 152.48 452.59 141.275 452.864 cv
130.364 452.879 126.39 447.872 120.009 444.879 cv
115.602 443.142 111.33 437.807 106.774 435.353 cv
106.774 435.353 li
cp
.701961 .694118 .631373 rgb
f
123.446 425.031 mo
124.618 420.632 128.132 418.209 130.831 415.858 cv
134.069 414.449 137.495 412.597 142.136 411.321 cv
149.112 414.274 153.378 419.55 156.285 425.649 cv
152.873 429.662 147.695 434.141 141.751 434.287 cv
135.962 434.295 133.853 431.648 130.468 430.066 cv
128.129 429.148 125.863 426.328 123.446 425.03 cv
123.446 425.031 li
cp
.929412 .929412 .898039 rgb
f
208.024 445.805 mo
214.454 431.336 227.777 422.965 238.285 420.785 cv
253.974 424.604 261.602 435.132 270.487 445.006 cv
262.03 456.599 247.639 458.91 233.435 462.836 cv
222.232 461.967 215.579 453.003 208.024 445.805 cv
cp
.305882 .305882 .305882 rgb
f
210.841 445.443 mo
216.691 432.285 228.813 424.673 238.372 422.691 cv
252.646 426.163 259.586 435.737 267.671 444.717 cv
259.976 455.259 246.883 457.36 233.96 460.931 cv
223.768 460.141 217.714 451.989 210.841 445.443 cv
210.841 445.443 li
cp
.580392 .568627 .517647 rgb
f
216.516 441.856 mo
221.197 431.34 230.899 425.256 238.549 423.671 cv
249.972 426.447 255.526 434.099 261.996 441.275 cv
255.838 449.701 245.36 451.38 235.018 454.233 cv
226.861 453.603 222.017 447.087 216.516 441.856 cv
216.516 441.856 li
cp
.701961 .694118 .631373 rgb
f
223.661 437.127 mo
226.872 429.937 233.524 425.777 238.771 424.694 cv
246.605 426.592 250.414 431.823 254.851 436.73 cv
250.628 442.49 243.442 443.638 236.35 445.589 cv
230.755 445.158 227.434 440.703 223.661 437.127 cv
223.661 437.127 li
cp
.929412 .929412 .898039 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.0
%%For: (Olga Bikmullina) ()
%%Title: (Environment.eps)
%%CreationDate: 10/22/2018 10:17 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj4NZeh6lLI]dJdLBJ;W,g>PSYbb8q'GPo!#pDR0#ps(<IQ5+@*VUC.6_mR]/t_1tYh)p>b,ebEW6sJ^o&Z;5_;9KRDf_fS
%f2P1A?*Ui4Jhe'@./TY:\U=4%lY3\PoVn8c1")gSjfHAk\u)R8W+9X87BSZ&DB/"$pNk#RG,*aXcF.rNSaKHgp@%iaj\^GiI]6CT
%2g9H!Io^0)lA]Y\1VM^1ghlF8n$Y<ioj5Vh$8+.W\FT5DeY3l<1REk-$bKBFdd6Y*F7a?4Iei6ARDC5LPlD\N],J%[%F2-]X6Eta
%s16_lPl0k:VnhJ>@sH8jJsU(NReubQ^"7#f;+!0fqJVUIXNWO\l3BC6ktgF1.Jh[9X5F`QQ)/nnFLd^8:+6+FaT'@@(&J0rIhN1h
%5CDhm-[aJ[;mFcro(!dSd.2]?.^Uaqr_pk;*PQ3O4,MX=f%f*=WV;jo]ZCsI=)fS7hZKLo7qm,@1$;N<TYDu1fp_H"g+kkCJt\p;
%?-Q5DY&h)bRX_]5Inj#32s]eS:1!DR:2d!%L"96M9cY`nOahV%Yg_r$heVm=I9`(K5p!GcRlb1!^YnNTSX4h6[/>,si`Wt$g$I*M
%DXSQQ4f0^6."?SkYe+$;]@e'8A8/fhpT4=F]/lWbTV;1GC+7+u_0kI@L_ZaLNSR63T"YFkYbpO:nLD2MCa*8tQ>+YtF]t9:]r=Q7
%69BI:hU;-ZXnBRP9oV[=M[*4>"+O5E-hj*BU"=)JPljn[_sF.LZVf3nXe>Lc^%L(P/f(7@Y;8o<#T];'p1F<sn-f7cY;k1\j5GS#
%O5!X-[>,RukC4PrDt1a9c2mlgYL>\f?eF+Hs6"l$Vq9[=c,trVUY"q\'!GB&eiqKJZ-):1d<a@<@b"TWj-BO^Kp9ss20;6Ge+gU#
%5M2'I:koc;^,mfgnk9>]mXBMjH>A#s4.W-69XLZ@5BFjP/apT(6ZMm=g=Pt`c(1MW]qNdELDF4Q28AlUF/Q_/Ut<\'cdIC+Sbc[+
%;rJgIYl,`F9Tp,`T$`*,%\Y(&LbG^F1YSJ\+_hl8C%bl(V9cNr3mGQ&j0.RZB,WRsKmd.$efX!XqW%VD!s:cYV5_GbhQ^.`)HG&a
%VU$?V0(7!^`%RcE$TgETh&[1'G,NphX80G@=14U3`mtYX/?_$_e'%F@(1!l`^%LfSmjAjG,52WJ](1,_R719^C$@0A0jEPgBl/%Y
%qcg0lAYsOqh5WSQ[s.h*:?mCY?1)Pc0W?soQ?"[Zh"UVPi/9)q=!R4u#5cU"7;pL-d$;@if@i<gmdB%s]<@Qi7pupBQd<?Ri[;X0
%=4'MbH^+W#Vdq]qNl)C-E_&CiX]h=3>hE<D$CmZ5Vq5\M1fs\Ep6oWh::O.^HV8^kX8^(,e)lafqf6\6_l<FN_U*ui*BMfPr'j'<
%fD9]P;8-:fc5T\T:\f\\_`7V)2gAsU*J>nd`5&qHmm6f%CK^pA*`lR;p,q?Y"blM\CDeD24ZE0uFu(5hb5?RD0"b-8K5Wr[nn4LG
%cGeAgGA\]XoL<VW,a$6l6*&TO[T%Z<*Ob$mnl,n6[0)ah^1`,_&,Yk8.u-9,+,I6EjI@SE^<9G&q$ds7n*ceoZ0RSapY(,bn[HXT
%NIbVD>/5Xr,#D';W.fapLEb(P#3pYEYRUTf=Cq&CICE@i7W2IEOjM_H^T+4`iNGP`oMlnX:[,&d+u)WN"B#WT8$D00=32>-8ASI8
%7f;/EBiHPCbu]DTgB7<EM9>fCiNDaMo(H?d=oT$282'++eu:IKFW,SfqLALB1.eQ'54J&Uap&(MrE3C.muY32P^tBhSYtZ6;%N.)
%^%rrEIs.C"EeFA8*0-fOg[f97`E'JB&!m4iPfep`iSIOfr$]c!?M4>`jn,jRV5L__LK8-qk3>+`F-f*bQ3Gp/ptBIJDQe9`c3:Bm
%/O"'U2c'8FH=c`Ph46]T@"KdqVmU]pCD&FNN?=b[FR!Lcc+hcN^iPL;f$8T>\X/r:Q,s1JA,g3>eb^9e,l^!<g[*JBBhBA9gD+I3
%DtE:-s/>B+oH.tQTCUJQSbW*oFTmh3q\LXE2jrtf9Q4WmA#d8o53SPOSd1kd"fM7<kL4fkn$\mWSa??\3DNA?AcE87RX^lBC6)-Q
%OcHC_?Kh(%e-7FrceP!sHuk?dom6L6PEYkKSXirrZT5SQT`=Jhn-G#X[BmbsoWtV3[WSM$D'*j<V`fP-*#r!=f2;=bCFg5"SJD-(
%L=GMUS:+'qZSRT\eB<#Jqj6LS[c#WF]>)U)*nfk.pnQ^1?9cVa`=Lc\S^dSu^Nj&^?_=@3p>24Yg.o8bh)lVY<Bg8o6PdBp^pOps
%B%:#g8UG'GfmCr<3Q")e+90*l_Yd)j5\"T[f63Tq3Z5[];4.4?lsp.CrYc^sj(o]WHgTWrJGfAq/NVFa6ULsDR*O[DGO#4J\R?;0
%?`QE+f2:sRr:p`en,EG]hVDm'INL>JS56QN]rOgjD:WpF1%%81lb0DV/UW$<QQY16hm)VZn#s(bl!It'ai@TU-@L)?>Kta]f%Ca.
%jeKT/!)$D.mu?f)1C`a??Y!,(I:h4#DiJD3h'5[)Z+86qLTN?Ams([9L8eQq\\cK+p?DK4\-fh6IYiN<qY#E41[0ZV1VB;r+D9DL
%"&Eu8OkZL7:o_sQVQ_RXA[/tYGu3C7<gMM;YaBG7Vlc!X8uY_Wo[_ahc?c>'m]F(+fkDLslJiBr2D6Ec:[H^-S"30\[<o-q%^JS7
%-Q_Mpl?h@c3mD$lDec8Z:60m=*e,%:VAs9GeSW3<[B]uI,at>&[!0g*dg)TsS\Faqh(^!8qVAUj:=",+?9;ET;[0_Ef5>E6%smm)
%p=\&2i4\EVpF^ZYh.Gi2B'!1eY9)HClYEVn<j/=;b+!)@D_Ce-Cjkc5H?\Ii,t<er_>gR#*sOXdb):Tgi9NGQrp/,#'1Q&&2T.nH
%2?SqT#G-48o0:gbP90,b3pl;u_&Rj-+*bB2f5"CO40<i)TSl6aCCRc`_TDMh;d?QuJ+X:Ibr6[J3WJBtA(R!jo1+^Ylko*?]A#ir
%g"gS5mkVUnG/(atDRiRbOS/QQmH=plL]bm!oKm-cT\$>/X`o-:cJa)?2Q)P*eimphLmNV=-JsK;HJ.TB`r2o0LL347#<UO<f'5?i
%]tQg_oW:)JP[8r\bpiU8`*oD4>mlDuL#Qn*>rJeY2q(??lYaHn]UaD7!Sru\rKY:BGgu(tok-Y)ndjQkb=OA$Wj6`ngSaZ:SP#Y\
%f4aU`oQ5G+iU4P-:>+58Zu6L*d-H'l%JIsig&@c"fnW_C>_5g4_4Q+hAioC.3a_UdH,EK=c@>HUQNIl9Fc<lYm]8A!:Y<^QaiEf*
%f=qi6#Z[:"?HH,&.=Tj5RBO&N3r8?odF!BG^%1<S4CjU%5IK*XFK@aqO0j!#.;l0"ZSV=BQZ\bHX_nfsQKrWPF3!-/G9u'@S&[2N
%UJI0YH1:(I]$T8NmB=peD4bf9jh&8gp.X3!3qK#X#.LH:-MNH4h5<8c/adQFDV''tSaC<AA#%TmfOcN(De#tP>Mn*[DWDahQ&#&p
%)stO;E7/h)h&8fs*K0@$+[,Y;*Ep4KDfgpZ=_hI,hemA9\QK/k5CDa\)'L&r\UJWicL?(^]moa2GNao%47h0rn*.`MS2=N2h-*C1
%)S:K;IqLLJ#A`.jI-)krC\P9+SSt^JNl%gJHcN,VOU&L&L`5Q"!2kcc?o+C%:?clK7UlnuiL>idaH)V9])/UX.o.5Q288enZ0\jK
%jn8Td0$V3Js4XXc8-o'F51(&"K7,q%Ir;Z?c,$N.d_kJNon2]rdJXh(i$TH1Da+7,Nqp.ONrGi>VC03uI-6@[*g-8iE/rgn2Es7D
%O1J72h<Z+m$GNdml?dl+0!Bbg*dQ_ud2V_rm>nsUSXkR(dd/!"E4#N7hFqKhIb(R\rIh>Q;g&Qkg\+*PV`Au9:[2o^fF49BchDa%
%JN\,h;PS>^2-YFb,cV=-VR<TA@Ss%lO!d[;4j)&?2:9<hU[e?V\s@I^Z2jaUY<=/-/t1L<*rbSU+[[Ieh/2j'3cSVQiG7GgkM?W;
%s$?*ip4glr_^Y+Y/d$=9C\s>r8+Qh9i\YOa^"I7>ma](Yj?+9FjhEn<5JJ--aaNLKG%?#iSUiDbriArhrVcD-O9IbU/s3dAe_f)t
%eBt$m`JG,e2h$65qs1bbG0Vf%gq1D_G[^ntag:WS<puPedK]o+'A%0#;sT>dCC&)^0$F-_Ol23F)('Y'>F5*Bb4M%iS$Q&^Y-iSf
%p$t*%7TKD+.<?=UJl>SPjn(o/rFn2<"H=aLcB#`Ll$3'(45')fgWRN_hKRSWo?D'<TD=q:3;'O/I([5%1nF;C]@0(drq@g$?3_pX
%73]`q(Ag21!#k74G.rC8j.U@cZ1i)fP98N9C%QOM-Zb==>^`MQqr=agDLM+!n[*0,htG<Mau>l5oAc8;G.7--RS&WX&?E.fmX4hJ
%PB>)nlMG325^r3`n#\X86QCK"fZEU<Nrsu*[&OmO3q]*Dl:V)r&JH'F5RUk<23$7D;dTA:TrVmOWdmJ?#MR/c&Oqj%Tf"4&52R%?
%^1'LU+KU"ar/"M#=0FjP2WreR)14SM3A=ai*)mH5_d'9eHdc-,YV:9#BsmNk*`U,l(3cQ$rAOCdm]`p&@sN.UK_I`!q2fLb,Eb4g
%_U0dX%]puPn>H)q7XP(n[@gmp&oTd,B<_>9p&,Or99b?u?a\O(S7J-T(O"E!l_<u3??Ng-Cp^c\m=nNnVi*nGk&Tdkk0A"RZdES/
%druna1p?8rO30>jO"2K#$_G6B_rKr:gfWD2HK-::K!%d#5g.:'oOfO%hQtK[5IBtjPrkS,L9c7(R'?:,MmLbfcXpJSe$!l<a.>Fe
%_pEOUVd11Z2]DZu$>VKq9eH%3G#ZJ.<&n-P\eYAU2Q2c"f6g47qf@M7c$j<$LBbQ-p7[Y]db83S""q;$Q1sk;H_(!o=Hc@*D`qn-
%^T"u7>)`/?`/JK:WU!ZgYM54#5'LL7m0p*7AaSDb*>/L;Zmu6u[E4h;WN2RrR9`pNDQ_ZCG6EAs<ibfsC&,ThL[+20\'3Xgdf":d
%DZ+V=k01ufUZ"X_rGf7!H!+*:m/<i+VO$ZB;X<bGeLtq,otf58OaE#`?bUoe<l[DL<NB3)$rs@'%u0;Ud4NWsI6%3I2,i%L3_pM*
%ICReCf4WRkh<#2q\GV$Z)N+9$mPOB(O%-SIJ@kF4h<-NhE9.FVSc@>EG_!!Lq<Nurf5K^8P!&[/9k+N;)uOh>4u)s,@<;c.^G-aq
%5AecFZ((ObN1.;$V)Ea]^0JWU6Vm/VhL9;)e$[5p5!Rfe5+BJlm])bW4e:fbLC(r7hOSM,53(sMI%?Z)GjFrL51Ji#jC\&8>)0l8
%BG1!_]A:@0m`o^_]D9F\nbZP^CX7m3]/Sj^VJBf6p/Nn)3O(^FluVplh>*J>Rc\thh>H!'WOHpf=70FeH[&rTo;qJ0)L=QM_"dP@
%F\C%4Qq)JjdbCb\isYPPbEn@i9:\0$5A4p1B+qK+kkXM^biI@CXmpF+W&jq:KuO`hhoJH8Fo..4%fCXP6aJR2KXi0(^kJ^^jUZ%'
%=!#)Ro'KKRnB_l8B^#WtZLILj_gsbkb`e=HdB#O7WI$G)h`RHY\pf!:Aq"dQEfW\*S"JT!ce[<h3Btr@FnOV8WrG&b4gfb+cKEf]
%R=QB$pt@%\2nXED$J%_U5>UaV2\5?5\@]!+rPQX5g"+FF;rdJ1(=eu%[i8b'Idui9D_<%e^3l@(IdjR&I]M',H'\.F9MM]q]<aHN
%g0@,rCY2q+<L[cIDhn-I)g>r_9KiB^4o'&,gkOXolM6SA4M&8R]tZD=<a7_RIe\56K@]YCprl-PnoenZIGkOHDJ&(WNg\R?Qe+Qk
%lu&3T:1HSLDl7e=-ppcO:tpoql'6ndf(dJ%hRGMH3YUOtB!8:1a,/Nsgr@:4R@AKokgn.8bq&XE2tNC$n<fZC%So!+X$c4I5?4b*
%0.h%tc>9n7q`t`U*QeaJG4jZfFmSY!cdf'pkpgUp=^?>!TAIt>pbmMDZlP&XroM)Dpmpj*B#IIYf]:SFlHmVaWTru\\]<5nH@2i@
%3RB2r\[_irYNhCPia-d"p<MFXf_e@RHM-7i>'9bbcqO,dMt\m)'<C_sWjT6kZ0LC^lXmQW?%,[Oh9`6liSLE23I'tmDWJfiWkUIi
%^)GLV:,UmRA?+ms]jI=V?@?1ohIp;bW]*FSL?bmF&!j6)?ejG<hUtifeX<D;F4JsQ_]PoM,FqKX]??i8<:=2N?`bq3m138?:)lr/
%([IDP<$1!=+0.#TpkA!s[HU_7A`8cR4tg5*YJ*!k1fSnR^,B>HoASgIRTY(34B13&fibG+I-.S3f3URFWNO"i^Js#k^U72"C=dg_
%m?-CWFa*-DkA#@CG-CbQna^b/G>6s:W\2d3L5,G8*Y"+Q%$(gVDS:?[1d68u(n0Ypr]!k>Wa?i'lHq4A1ZU_o4W'';YD`rsTA!Ki
%\ojiuA*?\Np#i%%Xf![:GMbWl6OW>uG(pc6mk5,%XZs*Y:NrDs%6a0nGW,3*TGO_*mgKYR=K-`d>2,mN2m+gtU"4:2_=$gl]:o2b
%\:A1;=.]<JTp<p"i=UE`CNuqgp2YCe`SVb<k&hYe,A)<_maf"f2a1R*(r#V6e!o=,`t+Jjn#mFLLDO<8h],s/I:@u(IC_Enr-EVS
%b4*$M5;ZVPY'5ViRk)+gTCg#seBIF=e(Lk^m`>%_V4ja?)jd^4S)(_6rr1d*V;h?h:R>>Zq<k)dqVh%B>7^J/QY,F1PtUkroYdRr
%j"K5bVq8L=0>4G]h7L$Tq-s.tI;8QEV2[tU[k;NIllKEcn(k$MY$O?&8^1K]H1cFPo(^%de][5tIIFK19oiYqnTa-GjdBRfjmp*e
%-X2oZ4hNduGpUu.>^eicHZf/_cM$GEl^qA[nu!!?QS7fG1j2BhlZG:0AUFBt88Vm]J&I)8lQ]?OlKuZ`f(:@J1NLgVGW>9Xeb7k@
%Z]T#^8)?A=[l.,;>'=G_l/%Hec+U3<*))=)]J@o`3H8W)3VhrtIIXI`jnb2,X&imS[dB?6V3U^(bH&*i?[:<Ch7rO[@-c4*%KCbP
%b3n9+LF^(*41@KbYM?]l*Na1S=/.tTWR73-@W-Afme'YVO,-8c5209Z)-pOM2b)C@ln=CebS5N52tM!%m)i#.0fD$R^-!/H(N5;h
%Ic%8eh>9=d*F#[`YE-AC0`,nWA%VSVXEEhHRMl"8'A_3^F.^LVejeL+?hNmM5$u!Ohelf7D_<oN4rJ(dYJ+m5hd9[DWNTXaDS:CD
%[FbEIG'n+BoA-p:m187/mglO[c[@?&`ZJQWgDPM:kZ)9.51I8.rom:]NVA1!!ep'rk_J,bC\mJ9j(gS#g2F1>GOMuC/N(,Wf3Z3r
%2V/ihc2>!*[I':o6[R.f-RLJ')P7:6'@RWDO$CCLGdt*-Sp3PKj2B!gQ]EK%CJVDd%Q<2Y[IKZoO(s,SD5VPiCELgN*kiJ>=aRDu
%j&3#YnG3%:c@`g$ae8t%`oP(eVe_K9IFq9>*o)60\MVhmPAd$WGX"dSd7o'rI_SpBN_\I[bk'f\ijPoF/KXPMLPlt<F"`HZ-cE:X
%;8_\i_WW1$UX\>/8Tf)cCeHA0Mb!&X4(u%!B%q(hrpgGFq/^=Tl^Ltqor[rcNd`tbrj@2t[<>?L2ckV1]Jt;XN6SKk)/mPZRT]CT
%\QKCu&'VY-l&PSH\/F\\b9`h[fu`+;\@m/4N7\B=a+s#^X-\.@q>+"@G0Qkd)rJB`F6R6QEqa0Y0>$D294P+ZZ!"T_f<,=-p$0b<
%+4\F/rpJ"kMLY>Ajb$pp);XhTe*E-8Fk->M`n'V<L:d3ZiN)J-QJN,;SbCU\?,pOJB^'*@EW?#eHoO2tj-s9)+32sM4.jsjdN+m#
%oAO_Y)0rKZT$2-/80==fkiBc'f;>^Z?9ajH\iWk;noaideEc8Jr`&4:brKP$qPAs/mH\rhhVIL=F'#s)T?Y&R]Y=C9_3O?"HL^Pq
%0fnZ=gmS,j]!8ou=L_4hX(+(PDnPmjF5loZfpfIRY)hCd>i0;Or:&^o_jgN6S@Ne0hS[X@Rr`B6DEWGnFlCo,2ik0HDXFq,7rD*r
%b\l=PosjV]p<rs"o'Q;0CNHsHqt5&DEp;HAS`sObgfYN.>eRJX]=gF7IK+23g=5#gVWZQ<Dbe(&I(;!1kt6A>k/r\N:G_7W_=#Ob
%rLu+>IcfMVb^QHE:<h#6*a^e2dsCQ8lq4JU@!6&IhM\p;Y7B.H_U@K4gk2G,D=66'Xm*CpO,m?(-V&'^k%E](Z2*R`e`ln\e_Si$
%YIse_]mG0J/)>X/gjX]rD5l.#=.L8AH-]4'p\,HC*i#-Mmk-O?h>9;uf"#.`LU6a<Q93jq?Z"'F]"`T7B63%cZ\Q"*VT6\?/NeO;
%QsKKOmWBS0*U(NSDDd3i+07TZHM:h57J#*JdA=>.LH",'J+8W]NC:^keQX#QS_&cY5A6^F/?W6G^:LiIipEX6A#fCbdB2!Dm%\4>
%>PcaFRHrDDj'd#pn[+p<qtR!,If+Hb`p2>WmEsbU969P0^%?L3i7cWBq<]]UHE06B]Pr5j@/31YIIBc#h8[9pGdfj.A1<LEVIlE9
%N;KlXUQ`m?e(a"`GkrUZhL<'5q"]Q-al^\9Q$\]jf2g`]NU8s2%]taUMpH:uGd]^l](BgF\$>Z)C?*;&o9m&uVk1Y+\b"m-kLoOq
%([h5rp#=BMX[b$&7clqK*1L(3Gj3E9c&Lm>ho*]*00:,^k$Rr]mlnEg)BZZlC308Lj7W2f9B#R!]B<t5hn@S19srj3GVcb8Gl,al
%CK'UZ]CTNjDq.>OlJ%)+oDRG:pM76=a)3f8X0\-sDcTrkp2@XF^8m5i1[hJ2Sm$L8r5m+@]CrS%nD;apnGB'IRuR0EE:s$^g@OM!
%*u7=Gps=8n2?%U>/f]8/h,E&MhnSP9lB`:;<pR6`]QdS/F(]cpI^$'SAF96BjlNldlS"RU3`jq)2WEcR$YlQDdT(3)m=u)BFan9"
%e,#7td95@TnTM!J*u(lgI.PTVF(b4Cdg^BuF(8_Ejf=#nm>X2>dqH(l\[4-_@<9'8Y&9XTHe5`m-[/p6m;-u-/\=&e^%LI^eD&R2
%j$bZ!TDW_>iR>s7q!P'Yc%VYABk1k)qo.?4f^=4BYOC86IhHs3+/n>id&Yu,]6A.om-_U>G9?0W),43+k-(`6]uFT&Z[FFTHL1t3
%c-,h3g8u=k\l]m-?XEQtEPFYCI6c&)NZW2McS$+"6_16V2*6"smp:*">RgG=A!].&s1*9NBfn\eSRY1TUKWYBqB*sP#<TWMr_@P2
%Qq,VF-`$hhTHbR65Uno$:!,GrJh*W$J7(aE-ljhl3Vq`3]"%I+ru#+D+#H%o2-*l8@f`)\FAbBNo7]1;b2qjuoX#%;!:]@H^;fd]
%%kK1R+<$dtHTX1>]=[ID/u(`!Fbe9a1tlW5,AOU538<ftY7:NX5Q@h`BmA.=-jnmrS:0V!5CCo3q<;7(n?'CkDPOr'P_Ccu`SJYA
%r9Uc[SJikMa^LHADI2n2:ar6_6;M>Zd95@okl/9IX8b%sXoh#`c7pXCoIi'@K-2nnSL3Ab:TBkP4SohoT8,n;s(XBbgKngce"<(Z
%eni]<1i%H_hW3Iu\c.X'7;]_^)IUKTZm40a%ftorq),$^Id`=uVnIip;*-#Y/;GpehJV\N'mJY^V-da174mb-;<]L,;`YR9>:+Pm
%In38Kg$m[T<P%nm%.D6Sit,)WCoc*W(TMGOi>eoIkNY52V30^\?iBems#DJ>-u6sP?'n5]dmcD,`-nhS2u$3_BCJRd3`lV\8*c$8
%."#etiDN.H"NRFd"@).AWl6.pX'#.cM)nUZ;<h(S9+HncWdHW\X(+DL$`]p!5Z.)0g(M-J5h1<l;0)om/70/5m2t^FLQ.TG>g_2m
%Yr3%RVJ.YlE!*</QOL<)((Tu<I+LX`Nt%?=DOc:BD=6btp:F%#`-;XL4(-,/Yd-\ZGJGW!fD.\_[hb]<$L=S&/V:f*eJ(\fMO.NJ
%7$Z=Yd8O/s_V%n%?<!@q=4>6V@#V;.jLqWo_Rg.V0f2'5"%J_G/U=BI-Fd5V7%/g+,^NON'dT_+P-U?UWZ+p;)%p25=#HTod[neo
%>,P*6fL3'BphdSXXeDc7eU4%1\S>PgKsB,FX(o4b!Higmn-T%d2&`:6bpo0'e4m3LX/N1qG8in23uEYV2%;THN!;6j&uo?H_0W+R
%:BsPP$`\Lk&Zmf\'qL$[Gprg.bo0e@oT#lTk!%5J$CV<m@]aIsa$AZ]r0[.`aZO:tC$H%?.n(=>D)</H@;8Q(do6J(9FfCrdM0]&
%\B$%.(eLSoEY[cXLidV#f]n,d,[*BG2:Xf0g'XAVR\tu@&gpQOMPd(,laXm_B\df"HWjNaC`[>af4ZGMd'[ER>dC`dFSn!rd&+l)
%:,1-e4U1@qIiUlGWFDgZ^bqmb[L-6df%"4d6)H4OjPI,JJV_N@UW?sY!d03_7Me8N#8MQ_HnBRga2-Itj/<+rCE_?C2MibV+Ti*h
%*L1k>(ttp5S(9INT=cC^'.9qTV_I=TL-86Y9rqAabp42OO%]`2M*q[76Xk('X6HmmBW=cV]1hgpV3E#PY`$3([)A*`&euf^O?(l\
%i(Q:%?&EZF2#WH"Vs-"ZQcnTtMZSl4(OUI@hGqD*Y8Q/gj[aHMbtG1,Je(XF:T--@4n18JgU+qHD%nq5Ei'P2PeqH#T=6m>VR]7F
%&ZG37Cr?rg?1Z'?+a/E_8u.M?(%sQJ`R--@OksOkD)RFg5YE1Vg,4VBBP(guI4Z1Y\&K%hf[r+7(lAf08D4EYNn2Y>+jQ/FS7e7u
%VStaNZrs01ElqX['1MejVM-rW*Ql7YThl-"n9LaAepoc@;PeVO1bHOHW^;Kq.@qtL+"h4Mca:L!hlM[V<p6L13p%L<7,q(9D*3,h
%\'aN@JEUXiG=`M>5_X<(o$'I)XFM(>G+^Tm9i"uT[KHK,!6J++-`j%.`Z#Y3<mUu3Z"UAJM"4`iHVkI,d0^PG,X=83Q^ZGeS(+P$
%@2\F+.'o>#jmD',JV55;/=igSq$nO4[%qeEpl_Eo,Gu%EQ?o's,gd4b<E6%ICD&5Y"(4C]XHt78m6]N`7D?.B2'A+T,8po#LGe8r
%5=cIM<PDq59!YXW!9\]2L)nY6E_E&>=+HerCe:h8h*IEai6ZA!EYB5i[lNhpA'/to2oalsd3aa@9ZU-CX=_dOD'p]8;:FjXHeS*;
%Q5ZagBjHriD\>E@bB>hS/4b#f3>[ipMkZm)WGtl0ko1W]l8R*`>#JNMoU-Ik-gR1<"[83iC([;;@FA<!M,q/>Z+i]12/Qj7/9t!I
%<[d!]>$B47jD^,:f;(.^<p<.((H`?oXaNAqbcfEb:HP&(5ctdfE?Z5fk=Vb3V)3EA&Ja]D%I,"*Bb\s5)FO[UUEA_=T^u.T#>:R(
%4@F0r7*nis$-c'b&qu9;1j<9O3uqSU-%b8b5'JuQZre5&mfP3IY&IVrFAeMpKC0:t9",.uH^_-3gh9TA>%t]u2.hu.Lf11go!M(G
%cUG3s"o&=+#S0\5Ig@$b#[I5W8bZnN&3]"X*Sib)U4$>NgsVL;.o`.bd'ZWt8%^!N)OXV/:K7ft1-M.Q;57gIBI=GG.#Ao!$'o`Z
%m31aVhZpMPoE[<i_0%Ko&cTrpnmA^NEb1/A@k7<>]e*^LMc4lCn-tu[=')aelA]\Jrf@)-l#uCjc^-<[>lG7FNUCLQP*73UZC/%M
%I@X@)(QkH<,rmp<H[G,0370_Lr))o'FO$aNq">)E@u6Z<C+P16&uAOb3]Lgn;%Fj0OJE!%5m>1sP-R^-MF88J7u3.Ull#YoQ"#:K
%GGg@*6j?.$)i7T`;-6(qY)bt!-Z!9Ai'^hD&?Kt_EJB9ITpb<[1F[-M7'8f8=U]="F%]o#N9*sKRQWV=#Y1K.-OEf[GCd!n?r#rU
%V5@KHcd@Xp"@'Jl\->l#,1b6Y@Om8("5,#`_ut19(`["78lh<)*b$\"P\pp99iM6Y"4R!pgH8.,FDF52EPa"n>o'aj$V5Bu>FDDk
%//=@rnG1k)5^]+GcFs9c;p$SPqOH;2_Y>'HAduS?/pk5>S@sOd72)=c`b8o*)]TH*(9M&)_D2eFU0+qR10P<cLp\o\>gY-nHONnT
%;KAht`aLkd+cQt;pr%7E7?^hWZ@#m1PadA#8]0_ke3'<I;1Y*.H5jBl`6obh5a!t[n+=%b?5@Xb.YTL-@;pV[#7(N2fFJSpGhu$O
%/W@bAb3?f8VPQX/]u9[s?dX>",)t2WT-[SId8rVu2>K9\[`Dq.BI<slX_?#DO@1]n/0H8.e!e6(6dg%j_Z_;FimEUL@,[PtIY]Pu
%;)`W:1<6DVr?:1=Cd(gY77cS-<0C1Q+q(P]KQQ)+-5A'4@$*f`\5Il<)qr^e,oNdm-Br&jUmXSF:^qq>FP*SdE1SU_:Wn,hP/Sgh
%j<?&\ese5Pi"XVeVKL%/!*C3Ml'MraPV^*+2te#_?d#/^4b]u0O:SurV-$3FU(*n&)Ji_L=qk!fON<Xfo9p52k`m>\d7MMCMKZ,L
%+sRX(_oJ[:/O6q%[K)5#i3G3pOX*7Z1(J```UWC.P7pU__Lf?+D,ftL+58'YVNPKdg`[9(82Enc6aJ6LXLbgl%!3nSTOHt>P6f'X
%)A*G1kPSn'0oX&hN$^msQA5ggr$]uQ[>OR/d]c>$$n,pP=K"04T2c3@_`@fh,Npk%Ga;o6D0>!V0f#'>d8SGi3"f*u":9j"2Co9`
%+tFF?=E.gA6l?G?SMt%f;@Y];MO7<fY"0j\\=ek6C;so'8>U96VgSr`b_sCN1klQECVWm35Wok*,UB@f_^W#r11mGDXGr+]!7Tq@
%?V9dUQ#q+-6`E!G&]/na6BYoe#Y;>XNeJIaiJ``P-I<srKH4[<'H*!oR"ZMh0el-"l'IYk6+CH;b"6%Vj\57,&YLaHlqeI*6Hm'^
%)^@*Ic+9':_31/)#/L5"5""0tG`YJ+is,[0$5?9j7;/24\e=7u9IgKXPUh[*!cg\a4,WN!Vqcm$iWQ-!@1C.om6Tf*RYo@l=U!rm
%O=!WGXEVOG=cjRECHL#l_M==^$>'I4)3*C@23t>E``OJH6PfYU.VRd\+4345H(p^.4S'\t9F`fE#n)RtNjbLBohc:09L6GHo(ZUO
%7OJsc8g0-=,i#H!RmcIpVAA4r;NCDrH[pPkCKNo$[`ES)fEXe,Lr@03'.#A=['S>Jg+I'G$G6uK9ObCH(nUj2(Y)5\fE:8i_BCR3
%'(`:eV"9F'qKEWp\lm8Qd`nKqUms)n;N?.9&99CVS:=ba;3a.43cqSK_a)"/Q?XHGUL%HHL9nK(KC7CE`&9poFeD`hXTtXF'uULJ
%B!!iE^kteL&a#oIA=(*-_$`IILlk91!<L[58mN%s1`1K<8E+Gt-B7U`6_(+L,")O_e\nfu@Pido7jj*fBkUA;dmI+?*O8N\>'D:Z
%--7;ah9aCfr.$4%Z2jMj_$HZ'"OI?M!>UoC<4GmJ(k(BY]g(#e6%oa-:%3N`Hb<K/Y"9V0&N3F30]kd^M<kK3Y_V3NoXBAM#l8;M
%+;@3p>f)d[GN)f.K(4`^4p_]Fh=kr>K'nh]au>S0n]/aOTS0:u5+=0@Y3W:lNN?-$!Ab(*VDhYqBjo1N#F".jl"6V.33Y5N9IVB@
%s(4D:o?3j5U`0;M2,=T9p_YZ,a7?>,<,t2E8j#'Ciq?$hrrtA>dhN0X2;:ggqCGb4JDnb>>#/6M+>U1td5+E$OD%nSXD9Y%X2,:^
%Rc./"B!,qc9Hl*.#6cZf8mGE<HI*j;[4M;:grq5>3Mukb[$J8I=*T8leNm#B*BZ4!l>DpS][m%<19AiU6.F$Y5q*2@Mr(-9mnf>I
%/F-KQFba3-e.0]VQm=dFD$NTF&1C*q?krcIL#8cDR$9]L9KJOh-tRI*P$"(\F"jV+Nn=N$==rkZ]$E;M-:T^&M?;L@<?SV7(1pU)
%jY*u5^X;Lq,88)u`Z"I5,HGN]LOgIaqkbq`%K-QM%C1OGg_=R>#$9t3DZMma`!eu<"Zn<iHgp"<@+)'mW*=$*<P^Gk#0Z9^=eQqi
%pd\5,P\,bj9$G,K(pehpPhUq(eqA1q_E8c)o*D$lMe0o%J]P^7laI4e.r$XO9+n`i/+-i_e^u7LA>`]VCi'<E0$?V`&U8(>rjC\o
%`>J#HMMT_m$%NlJ5[.S/I=l5_gS"\Es1f7n!eFd<&<U.<)>8/)_R@g-re*rZZ<1enjomXa,)[q!)#0b4?9GQl@#r,Enl$]s'TU,+
%!6mr`cEljDF,n)TZQ@,O$a)0+8>&PBrW.l[6n5]P#j4oN"^AO2XfsEVO;+5;B%Xt+m]+370TL^c#G%\6gb:-'?S)`jM\Q:#6EBFE
%^*<&QB:fHp`uFjL_p2OuBd>_<7,<NX<g(LT%k!nj?:p[!6F$47ALWj\5AYcWYY\lZ1PFTr5Y`LRRB4J\/AX[+,si!j1hDkL!Hjk+
%SIfkE=G^I[fs2gn#-iN[gre&^!><D\5]"+rag<d9"$ejJeI2gJoGm0K5TA?J$:CN81AV&1hpOug`+2BiX^Z$?]0!707=2TWiS21s
%!\,'b8KA_"K4-8dbYLZ.E7!0eooNoVOf:&TkQ+dY<K_D.0*V96$_1!AZn<+M#+Z"bN\Ki=pDHAEg>n%?5*(X4clu:p4t[!XSeZ)Q
%_\P=;$(Mrtdc$UU%k_[j\3TRN`AH'Uq=UC"J:*VlTqUAZB%*DN/l/a,ao]bA'o8qbK#U^tZrp)#+s+1(/OemTV*8G%\<./hXi23*
%((t^s/dG&XPelR'J.GE4Umb*p<oYH/'GgD9=J67cO,m_?Y%MgbKl:%,5:1[*Yr9W,<[;/B*0`:rRsY`Kco9s1!/@&*NY>&D4BfZ9
%$P`k^b](DV3J+Z1DaX.?oej2bp34JCE.Rg+iWrM:64W^--d#]X3P]]LSE4c!'7''N2B,l4D:Vr]p=5f[TfQ#bHK]N/hfu$%[5,%/
%f]H?mC4&dEP4Rpn/0=C(EDWDh9(IX<"hc^[RMaTh@k6M]APs//3.]*G;H&,34lT-`S=EIrTi`='`5*^"#OsBuf>/,Q3d57ZB)O*J
%VbDRAHm`l0l.U*^3#F75_f.8=`Z!OR`3D*:Y$*F69i,T?W^q8,jF*TWe:[&eMs3Q7=f<-!Ne`8;<L&G<[VW`9M@QrC2]C(b^qa[p
%*A8u$FYM=f9&b"hXETBVc\)Y\26S((n<c'X&cQ'&8SX:_#AR?pS#o>;+UmjHB.[tmSUo+A6F0bt+kkEH<^S8ne@Wp3.b5d&WM7_O
%dCbjJpXR)lc6>THJX\sT5-(>J`.:\b],KdF%Uf.<KA\;TFOljHq7p0O039%g/gW0"77C>qVOdc<4$.o]0d,HcFXo[h=OE9c0^.Vl
%c,l:Pq^Eid$4uqE$stZ8k4/sW%#Y]L[pmr@f"^=7_?-usS6ZX<?g"Yo^j$;X`A4Jd>r)h(PQJVQf)pRWkGn%;O;is'657\ZB)`-q
%e`jr-,-]DAK1U9T22HVfe'(Zr`)jel,'+W1&l=g7H/r\k7*le\2_N/K42aOR3LgB"'Gl%n%`.p/E&a[RO92HaM(U1/E0*+hZA8;Y
%46MDRa\EBY^CGHei&S6I4BAc\Zsj=B^(!2Ilr"FKbCs5rOnD`nA-M>(&Nq/!n-QE&G)r$pGVp/\cS#ZFe.DH\cAJ+,?qmZ^',=Y$
%Yu+1ni./'nZsaW8f@#Hk2)o<kL5D=63:F\r!O9IsUdr%`L1mpb??o[_d;W;U#U*M$>MWs%+ueK_CThGb>K]o>JidCT?]&53K"1f:
%P7p\98V\K"q39KsDb1AhQr4),nEqPO=Q1Zj4@nX:KHGLnY:X9iL_lY"IUuf.P(9G:OUZ="JD4Ib-5@Hh-lRd>:I;'#_2=P[H!nn$
%GY"!JBB0uI6IO/?9LuCF(7&&:3E6\"p'8N0_$=#;m"+;W,aLbAbRpBo92%3iWL-SS$)7_u`%ZA6dW">NThB7q%@/WP7gZ!=&Gm0p
%Z\"p%gG/<2e3ni)/rF>VE^q;V(Xt$1\[EV:NdYD.8BHlW6lMbM78Y3\09NAIL5i9(p$Gp$mRQ8Wl@R=t-K5"WO#A7Db#*CQN7R^u
%5!DsjffPZTQL#`KmNkpIEsn*IRLL)1Et%cdYZ7&-kYTA20+#31pA_J\7YVE^'bNf4)G5"C_>=Fk+=!K"(g2;A$+GK/]?mVpU4nDk
%0S5u*SupR3d_0lAl]f>%3:P/rgG,8V_!3=W:J5n!Lu#!;I^62'+c.7E/kXgA'/%%'M(1$@HSMe,'%p]L4gp#2o!B7tTNK\<JAS[Q
%c5C3j'.$+o=KHVc*qKq4cpV=;"@0st8btmbiSbd*iIUP/%fU8P%Id^m7pr/*(GAY@q,23VW-nJGSTd92]_r<4o%h<PDZ*31qY*&L
%Blq,>l`?BO;JPCjhaW5knTc\;b<O?<<.k1Hl?07shpX__.t=89^X2*Bo+7S*9XYB%Ws0'ZL:-SGo>'l6h"r^7s7l^7<Wc3k)0FY=
%XO8kCH%etuFAoFM&Mi]LY(Zs$*o&PGnQFFQIB@.c,\Kaj2Zu4HNGsZ[Rb98(`WYt@"7*'FVcl>5@[n5fbd(@RP9sP,8FZ8gqhf6S
%*TcBprHb]-F%5.7s3Dp0StD^M:"W*6MfM$_mqBNc_g_c$F*2R+rll"XoJI$:$0%UY`s+F25J,>2m!cWPqKSjm!PHkYgH`lZ3gu&n
%n3d5RINMOCqB3/*HSPk_cIeOXCS0hK4fVH6?Um&S5REYuAb>HfJ,[Ji7`R!^?60<RH1k?--`eg*a.HgODB+Z:;&aoP'"iBM<)"2E
%-j4N)H:WIrRK&=Q#_eb(#m`!?^`n"V1FEZE#c^udieCD^"s[5sq!f9@U9O9GlaB&(&9/=SZ,/5imol(d"mN7R\S29jIi,V-Ve/N"
%OER>p@JL>S5Bq4DKnLYL$eCcAVJnSt0[n<]l#QF5KcM3$3=g]k:3.NVej9)]n*^Pl=!FlHkIPm6-Y]=&"K;:;feRPrZi9E?lU^Xe
%$&-Tp'%?.:PuAepa7F3"L1;kD/REFAOI5(0JoWP<E<MoU`X\"8KHDOCi5#%(eC?8$Jld,]I5Je1F6"InL3-MXH\8I>b=6$n/mD2/
%&]:175oWrcQf*[X=?kGD&1&QDd4[JsdQ(<)k>40kGN53V!5Wm8dIEh*YasppEe[dgHs#(W"G%-4pMM$1?&=;Q\4Qg(+IYdgEpt7l
%:>kW<filSqh,<iDjKLqk1/@7JP!+E<GnLFM&F@?p+GW[Vg+EPsa,!8+9m-jr?u>(/%ebI,G\pU&"@91DeKOcV6\pLP3Jp`l`"o;%
%TJ=QN?q3_6m`@Xe1-*fo]*QG[M<p0,8<TWX`41Aie+QN&%gr8R.^J+fH5_hb/IS9rdu/Yq(P!5Dh&9>n4+sU'1'QGGXE=`$BD2ML
%oIcX'i0^I].nn!J<VR.Q(YJ;d$e`m,J0fiq^G**tW[4_QNXnu2kD8MH:gKhE>FLQ]p=s`f"728VL30u2(<aLh+WD@)=8(0s&P\dF
%WQ-^fZFYs:^`4N9qBabrU?T"G!K(ip[\@otHeq1l@R1k_qoa:fC;G9Ae?WUi%K$4!Z&:&A5A,o<9KZu6:cG[d0?VI1>95Up$(g0d
%;9o'r,Bf8t`rUP-a*R0Qrdbo,hBe1F1#\T'"6sd4D(!>HJg[T,3L#K_Y0hAh1Vq;U+hR5n%6F.K7b29n1[q+ZKgT^5U@i%##i`B-
%oZFBpX3q>bTpfG7"LrG`,IU(/,*\>1nl[D6abq':5sZ_q@<#j+#R;A^OuE)Zp7Cd%iM0mGmo6?;_Ai0G)J2of;aBrRS8)%Bq$j]S
%8e/O862^J@"NE4F5U":!(X(&pF9!1j@2)P4X$^Qm'ubXK9Y]7W)Nm'5_#>_q#!74@#oL^0fKaomX1q[JJ^$t^>o9V0l%!.R`!]p"
%>elrW%P:sOCbV@q$IR$;)st0`qoA+o\4l\9';gc3j;N^%nmk!gl*I=h<"M!KK"]7YZ3'tSju#E[f>n:e"]5Eb&JMg@\f)Oo$oM4Y
%<Y@K[-2*mc77ljF2`@BhM#5L70PG\B-]=]qq8/*4jcFUukSg9i3l'oK5p[DSr?cK2LF`<GNXba<Zi*ZPa'YG*a/fg[W.'iqs6BpC
%rkEo'[N?J"]-'Ld9HE\t73RHjinOS&ZJ^gZq!;S0F)gF!_]`Kc!L.:'#?#)"C!*ki>Qs';79d\H%.;_\A,jD@&?"3m/QsXZc3QXd
%>rX7'M[FHI;@q;MX#b&8m#VM5Pf]4S3l]C_&Z`a*oOGd%pK@A:k(oeI?kA37E:kDc1%g8*+7;PNZEF@<<%q2=gF,Z,T>Y#,!uW6R
%JIS-f\g=W)9%]/5m6hTKL%lX!!K9"oHtC43`A&nO!_mpY=P0o!No^US=bI*u6^,-J8j3:8(+a<YGU]B4@IoL2q9U_tG-F"cfQ5C3
%%rk+L'*@kLLDZ;c#iH+2a)n"RieN9%aFFsY4dI-MMOb>:#ENLmPf(L<KhYiANr=h$1.S^@XYB*i7#["5B9N=.^N-dI#[$f%&J%pe
%a;pR0>[lXg?=>'d8JJgF98PqXO9OJk)L!,.L%$@D\UUmB@sMn#kFHJg4"?<LXT1;FphO+Ys4?GOA())?Zkp<\T6R=Z2UD`(Mh;!-
%DK_^_&0M)e3qgh\TJDN5"YV86$QKF'\2q2CA\`U0/O#1<M@0P,QbC2_Y\u?W+TA8i;T(+<7/.n_"sLjYFci504GUCs(5[&`JB8Nj
%9i[DfekfOs1opD;nPV6\m2WK((HO(i^DcILl->@2$ER)-9FM>'"Tfom1V]On$NWng<hd$UcRq<f=;WqkA-HFD:]t:D!!C-A7'N9e
%!A&eCAV+(k%S)C0\!-oTN6Nu5Z;=:?T2CqCn#Uhon0CCH+kJO_i@>>OUs#3G-kt-:Td=e"^i+$'KC=W=Wn4EZHg\HD!B&Ta/7l3%
%s1+u-e*`'\%'_nuD01+6.KDa+Qtm%(i$8E9J(%d00.d_'p'GsS-g_a_YP_5rVW_snc4PgH`*cWNn8V'BT\[@p2*:+,s*uP=Q[?,$
%$GRg1&LM_(^jh,HM'3CKnVPjE5]#Y'ElHtr^GtVq3nH&M[CWs)Bk&0qX/iR&kGOrsYHBMEXgaaal#*ted[B9Zk8*5^<`_LJhck#B
%r^7erfu0/&FB;E_[X,!TDd*%=Wrk&\X/j@Gn$c>!lT:U/-Af80HY7qimGF_a^\6EQh?<?/cO:nBHKALd-S`U94A,/urh>8I8)oqn
%s4(WZqk&oIn&)F1?G'?2d``$#&,i+miW]kM7&FcojFRd&+lc&upWnHVV7.Tf'<]=ZBIC_eJ@fe,%L"qgi2l,^LE%H1#.u%R5IcDf
%;1Q,(8&:;Bb'XCc)-dG5&#ir-5hK/rp&HBp(eM*73>ti41npeCKm1:c&$^`Y%nB78kckC4!l>%0cD!i[]S3$^75oic_qq,b&?ei?
%iF2iDK]-%$=?0fkk@JPT%qt_AO>k3Wrr=OP"V^<_^qSMHMUoVL@`QM/ZHSLP<&TFL0W#7TK7K3%TF)ae*o]k1iH5;T>Qb57[u5sS
%NQp;`(jRY=\.K30L$Pka0(p'h2Cf!j`'tWf$96[Ai&&YY#7K/Q!d5JA,F@%'ehN2DBA[M72ef9")gYs!5c_-,/4)V/<S8^_".h&1
%(3DJ4G]l-WnFL2k70i]'0>C"*Jn8o=</(Zg;ckrh!@Ne<$+N+aM%=fYproHOacncpV3a<A%L65`/CrPuj5L%d%94<:#4XT^f5CaA
%@!9i)E'sB(@'db2k5HPW$eB5]8`NcQp()n7*7b1Y^LX9F6`<LhmlHKb["s2s+<O8i*$9o8-kJ.g0G1KDE\XaT#8.+`Mt("k+tOsK
%qM_q!@5\W)>YD\f%N&8iLcf_[dY*DcmP&*0TUCB>^Q/,?'er8W&DK-TYcoMjU1#o!^MFK@.)F.6i.>h\Eu2@j#Y*C0Esu\/5trgQ
%[$6jW3MA,pi%G=E?mAjpVh&'+bugAlES-igM2'gm0R#3919<%m&m`=A;IG/Wa?(!paT4('<EUNC$%S!e8K1tl&^r4",9^SmjcBoV
%EeBG_"lp\#?0-V.#\4fHMd]nl1OtL>C(>hrL4XDa'G3JK@U0)R#6EY:[Bi-I70Nof3sZHZHmnSEL(c_j4<kJt"+EKN$?ktI6s^_@
%Q:Crj0;,dj?69D"(kum"Ya$Ebbo(aA?uOHKjmaH._;+6c95tYj3SK(//I416NS7e84*lnh_IB*I_m!QG-5P]4L2MU&@6r79ks6Hl
%^j(kFDJ0k-7jB5i"0f3p#;%s\^cW7&_gBqM^E#87L&fJC6Omj12X!2lMB'!V78&N37M/aSYqcpnJrtT5;[AU(OEFsuF@KZUKX:cN
%!7;=C:S*c]WF5W_#1M!u2o)+^M`i<62W,e[L5D&Uf\BkE'K94*C.'.QV'P-1,ij6FNfj(TF84A9If0`SlbA2KXC&bg??jNj>&^(k
%;[cX/3o\GiLHJ^jE.7N5$6f"O%SlZc@q=M<>`MVa)$W"B5rN,2HpNDs//^rYimqb^"dVp&2_qb7)@Q^HUC?f!G/aPe!dpGL8.G&E
%OZi]:^!/)H$uHp^7L5$@-=)Ar@,.98$Y2LDN@7#Od_q4]_ch:MHhi&-!uM^ANA-;<@GHB&i$><XZ,$_W=XaDVV)#Rhm!P1fYL4EG
%N$0Hijhp3"R3%_4#B5'H3,l%]E)QDuZ5cW.GrLJQZ1,C>9Lca$*4'0*QH_2=1Ajq`P.AdC+U4(BC4`ZPnA0W&$g.f:?kqTM))D?f
%ALB&PF<5BA5RF^W#Rm&MIE2F%Q@W54QH*8S9*g7kl>JX=nd"YehW)U@gnXT)I1OT*6n6'A?0;TL-O5*O*-Gj<o:]K0#]5S8UO*9I
%b]b-`#.u2=kJk#KHs$fOV(c]l2s1pAh.6+p1[Hc+EX./E#P#tO?nX(`#0%F4Iuc4M"cT!lkY(,fn/2D)'4PBY\&9-cCTPHHmo7E(
%+N0SJ!Pi(K_L4Fa(XUi3_;%`tPJ:/$C_ZG4PYc>YHck2j/&6lb#HQ&O!**>oG.939?GtKJZXkhgK)<Z`i1:TI.#-;pN6oj8-UuJH
%V8jE(c=`8*;sAFpBn4lT@_.uT!1[I)RDgfsZD%bI<\E.hSJVVVA%=Y>=HbH<ieSK)IU+s0Kp^rs!!GRln-FC!^u`@J3i5Y\rAgmf
%KR:XF2-fkmn0kllhIrQUi[E4UAR<Z4J'g8&8FhOKQ32=38Ar%C*%*;a&dHPK\h'!jp/b^CXZWqHRDS;nlp\kahMZ0Rc[l=!dr\,T
%B2>>.k@9I"a2#Tr!!0i^\GuWB@#KIP>P*sW!*QW/6RIQt!/"f@Mm/cd=!1`hW7id\EE"m;iNo6g`*4AgK'!p6S>:kr#i&[HK#fC#
%pp+K32m=r/mW#iWG]Dtu@/fL_Ch"%%!*U_cp-i8(1J!t_U)-[7$cLlU=OWUF,H`8Q>;&Qk;O5'T*,/P"7[I8u#.78/[SBEUS]RBn
%e3`8:W<8-2l:.T(Td&8SXCX_7I`CK$JqE&sc.l*\J5O8/*tdY&R!]!p-3^+7Kf[`EfL*u+0@td,X9+$K3bGc%X!8Ji\&^9C\EHm!
%)97=(#2F5R6!4EA-2*qjHN^le+=8%hH`da_5N>ek*/N1%3c%M%AXO?^)-hs`E",<HPrUY)%2PVF%/%X86.d"?[VRqHQ59-28_jH'
%QHEtLH\Hmkq/0,6i=ceC$=-%#+@j.MiV"g:>!i6%7]Z_;(k_kOm=TXaL8RAn#ss"6F\-Z*(F*U,;A\$*3$4AS4J%aZ,dnjMEjB/`
%D;:4*0FA/+&mSJ';niBsoRNEe;)CH@f\$=Oi^B!-36R:n#@UV!)"Y''r.1Et<)*qeQN.o=K+U^dk-0GI6lHHpHg#6cBI&=ZUEaso
%&H7c8(b(&Z-+)HniQ.1GI!R+%i/m++P7SV.`$sp9]PpW&o=qO[8!mQec63]70dHo^5ap.)Ob%/k0tK@I%5U6eA*8@kO&3N#(c'.g
%$:Z!=($AW6WWc.]!+[?TjQ6&0@$M9cOS[/d%.dlr2AM5Za=>EJZM#fXX-e)uXF\J7f"AYMor%:eOeYq_Zo8huaK2Ml3LLL&?=JDa
%*-@<8&EHso7$6CN!RZTUMg2^G@:Y!cLFfYE`u1Bt5!n6k."8@O!=2+2$'mk6X5Nc`a)HrIfPK_>PKiqd_]1=]K,AVLH\E&`TP`dB
%d)_/^ip8JPjMZ;e(PC*>;R[$Z[%8.\:p/;\pc/c61=f[8U2@fNLA;*X,M:2hE`="_DO>niJcQMN(fU`:kG_"H*b/GUAJ"<@S4K94
%r?rhLPQiL+G[?Ki@:opM,h%9$7$1obFuiJ<K[=23W)=sp*6>($:eU()O?3Yf!bl4g3J8W#;$@3,8lGedYR4-k5Z0r8ZVo7<IRt`3
%7O7:d&hHs.)1t4?an8+tZ*aX`6d#!;F&FL=eftG1]?q@=-\DeMHqGqdku*W/M]k)L8']gXTZdCiN:RD?U*Ph^"BeWu=7[$D:$UF2
%!.S[R#=-'m6/DXR<Tr>MRaL.Ubh2*YQ4kGDDo]t=!"B+j(^biXb%=W`K]5+J]KnLj$%`n2P8C&R1iV;FoFgHa7^go:Q7uDuc%8!:
%5;^'H+\%;h!mp#$mN=Em-oJM3mN+>OnTN-F&C"18A&MNV+9>LH-\0>u4l!Sf_Eg[PrfK&s.4#;V-j$#r!4<;h;^&\>;4<j`c^99b
%U(L-'!'3\>7\HQ`(;[4U![OkkO8t<[Z+D&p4OLu!X:LUAn\dqcGg01m7't#@2HDr]4O9WgQ5=hNi+iE9:/&N47a_]G$4&Xn)Ur/J
%6#X[l3*U&.WPe6d*2eUa0Ido5*mTIgO.l6$)MNJTA/u,@R\=XklkkKqnN^GJO`q\+cN;d`<Tel`'p96G.H6@Ug,i.9"looBIL*LH
%qTTAqWtEgMkJ\!O>g835bt?P*73!s=!Q%`7WaV&5bU1tro%I9uoK[.,F?Xf#OnpZ"kqZKS<npoO_8=jGNFC2QOgmreNX!WP`R+XN
%P74rg-!=gf$dK=)8ht2j_b%YVb]2Te!q97ZqL#2NjauTq,FRBLTOh^Lq'n_.)P0^>FTti(MS+a2<-(p$;irfB2+)!_rhsDQ#XiGV
%SQq39_Pp.H!(Ekp#@aD-438cPP@U<GU;1;d)dK!n((A7g'e&5eJ_&3KA/"[nJqMC:X>3`n0[l7:cQ7\=_8@B8=Hn+4r2JkBTU5`_
%e2%>M7Rh)iI8q*-BA>m+F=%c[+e]Lpl18<lTJ&?:(O2>rNcYs1_(oOFcDX.:!G%A<L91;_7P&-ghQecs4OhReM:+s'_@l3%b/fEK
%0h@R=;!J_FYD&bCBf/Y,L&>l?C7Gd3e2RU^8c3BW&<e`2+$W9k_-T2seK!b("qYa8#[PW9jD_(qXH66;[,?I5Mk&0YMFG;g-o;oY
%Ot4(Lc@kF6K)oZ2-ifuW4Mr?c^QEK4^_Monq8M!F$Aa&L6_]9ofs93mo-9.Qnr\&e>@E0u4@2$LRa2hSQI?0[/`n@!dU@2U0V&aV
%`+]F9%JSZ7;Ek^tF[f/<H^[=Q"_c=["AOIj;)fpM70=fkh9;a0At#,RAMYH2IjFd(c,fl0@e8"V&-?dG*+^Pd&`@<[RZt+qK[st9
%A3at%"WcMRCOqdP=`f=X7j3$VaZj/nm0#D8aBMc)28V'EN[rnMDM%os@BU8$^bO:DBd%$m2Tss:a+o#uP@4D^!6VKo9jaP?rGUIR
%T[a(Z[\<fs-Jpib6<N*ib%0s4D>5)9j2UFH;fH,V6rqj+^<RrWG&H@lb.0-X9X*iWL#CaB\:t%e`0V);/8qb.1SZN12ImK`s,j\/
%B*UT;rgrWB%7OFO93,l[ffKeFOjQJ1H(AVANfNef#OP#HHnZ>\^(ZfP<_G(UF:-HsAN1PT!f;JaM'?#c(VCR_5%8P"VG5/#-pf"I
%,TM<Sm`SE,Z>*Xo90l-K0]Y;1I!NOQ\64_G>SJDG5]gME!\874J`m<CMe,7SWjSK]Jt`Ud(='0^2*h0fOt.-lX>Tg"\EBIN+,NsP
%IGBY!*o)sS`%]&cTi3*MB4XEoFpDphOj:'A>DIc6-6'ZTU(6KsMjugTRi%7E;=^NWLeTE-Duc7m<%UtZ=k/L2m+b&]XWeb>00R_9
%rk\BEdUea[`5p)oF6Xb4fK>oOYsN6B74D53)"+qIqaY,GZ.K)M2R"[8bN*P)cjJ.B$o"kQ)p[[FJiW:!hX)4d/1\),;LLDp5Th8g
%eMB_uf\%GqEHqgUB/uM]$3R]kpK:S=`7Vc=me!>ff7Nrh&]r9hoUeN?X>j%dZ7[@uZWAsX<$luXTJk4]a**$oK0A[.],uUpJQmkA
%!XLt0Slr\Y'Gl#?@Ud=R#+6h=.`[E4'heFSZ\LP^)VL,nnb\0*[utQ;c`&5Cbp$iSYg,b,<fNr<h2.U&':N#bSUGAa)jiH;/`\+p
%n4a'a6,[eR8(#]T30MdF%4'u^,Z_Gs+76Tdqa\MEq+Nipc3<6F[!As`Efj;t5cr4B;?J-F<Y88dWNArmOGhhZ_e)W.,l)"Q0-2u`
%MK*J-ajuYB*/tg(-t^X1Rl_&uHjW?pKB5NPG/&V:O8)!ajW0-E_OiOJ,on4]En!#<J#_kb>d2$XITQcCbDm&+gp?rh=!YR53/NA)
%JGe5d(-!NC-gekg_L?<eD'?VA8p-cJkt=o*R1]5]>ObHET!a^Mq.EnC.($3+L^S1]A^<R+V=YaIe%ufn,lRib"Xfdn@1#$Dp_m.h
%Da;,)LHYmI7f3I*74N#+@5NAmFqZgF@tQr=>lTuqnsAP:04:"C2u%j+NXQQ9H!)oh!''hn3Z5l8gK66,0FC(aF(k@,A<:b8/Y"u:
%Y^m,^`5b\b2c[lUj#iKp=G[dj8UK#eR?V+uE3.\/JuY?X>MNt1:+_l-^?R:Jnt7)MPemV;\DZ#5_hs!r_+ubX-aZZ06Km'0c[F5j
%^95TXJ?Gl1MOu:V@;40T)W1Ss_D8Orl>ucSBRgd^#n/$(gbim#o-41K'IQ*Wq'*<E!`%ljKJ`GtA#6pD#<qg1/GC9XnIh?9n&=5b
%\%sNkC#%^Y^aZY",cMZF_(#4f't]iXF):tu)7FK>?DmcE3cdLtS&,lY!'#\C!2m=,Vml`)pm8cFKSH$':6C#UM&S1!7,I";16HYC
%8$OLN+([-Bn9%QN8tL5t?O9>pZ>=NRN/HOO]/WX[KVF$dHY9i33n3QT:B_Rg^<[:T<\gFYLIDcW2&m)C*9Sq,3)N]WGP;B0FH-^X
%#&5#$:4rlM#t?_'Qn.q<_6.?[Fpq9-!uO$bR0&!qKCY5!M>Vl(EA4UV_&F]9=]9p3/=_6Q:*?cZGH=o#(qWo?SEj2&G9o6JS0pg9
%qCVJfOpqE'm1<A*pNr^#7*%M26Oa.]PFV&#4Y6L#R-4ZR'A<j;OTfoF:DNZq+?n\umku)e'VJ\t,lifH/L'b;)]5N9]Gj%I:p%Ub
%%1$L$j9$Nl.IfJW*.%!oKnO@Rodb"./=]TY*,AuL[N&]j:ePB'H;;*S!s:YRJ_P&Z+V"r!GX*.Fg]3K=7?1okKh4JE-Orn:5Z*')
%;ZN$`cQI*F#mB0C#)!7,rdYt]WC]oP-(X'+$:(mW^l/L)-9t<obbc05/+L-D18l$LRM!?^f&A!G]Tto0iPQ03"=IO$!6t4n#mU[G
%o)eV*O[BGjko;$MYTmZ^.M4=R@-kH13=[ZDlkBUc:Uoa8)_#F`K]>6O2SfVMk7,u\dU,le30"#&SXo21_\ShuE7BIc_\T5grhU5>
%Lp52.]b[M!FlK:V?kS@`n\nt/k*?R-.N8G_Y&MtTm"nJMN&t2Y+P[!biTmfn!Vj^\b;oKp!;H%'qF*:2^G#.:rjcui\o;cfQdnh4
%;Y24/6m0=9NDf1]_d6516>N!t3_$+Pr*nY6Ee&A_PlN0B,Etg^FN(aL1h,J[4&OueiAB:mgsA&lMBOgq0:YD*=`_N*"_[Nei^O@[
%U]?l'h5^QO`1.hR<uU7Y&3ip"i4r"9i:m>B.Iq)5q!/'1$82=@cBECg<Y.&a%kq)k+@55$!<+57<b-\`-Cq,VA6,e]4$$=',&sMm
%S+s06ESW8aW#cb.m:W)<\.IRd_3(e:>S,d=%WIhgO!]Fq6X"G]3$=o+$6J\-l33<hZOWS?+VRAM,KpHF,bQsONIc>!"bHdI>fO&S
%]U)V2nUPG?Nl(tXM["Yd!!O=eeH^O9(-r&_PN>d*9%"u[,,];J'$[3`FT;IJpDCj\9(;UD0Gb!>cl&!7U>T=GNEh2o[VJWIjoH0n
%+AO%8)))c?Rkg47mNquh';MVE4WePjM"G,:I*TN]q)C8eZR=#Kq<6LMM-SQ4?dQ+eHM3ObdXR'KF!1Y:_3*N12nO&LC^R6Xc5d]]
%rGE;h'u6b9iDqdfKd02*m^Prb+:r;pP0L(k#4R[a'="WZJ:dqjp_hciA;$@'"E5T]'-%`c%u[)e"ICToLRGNsJ;CQMj"dZ)r1lX^
%/-<KCBZ7YWE*uQ`/1sKYV@3j?;1r8[Mgu[UDZJ,J;B=7HKc'W<j7L2,Y'bX9/H(5/";+?6M[YF3!S%]W=b%==M"*YiV,8]`S`fTA
%`SVB<UiCr`E^:Ij$Cc6WJ.cJXMScYqW1pffR=\p)iSOV<;OhqVB/:OV8<aZjdgJ;#Ob"pbPGj&I'2l\._jTmibp/Pcj?/4%B6a4U
%8@t;X=j:[O+9ce/>'T'.^B:bn`7NVX_]c@Xp`:[3Zt%I<aIK)Zh@dMP*uWuI(eMY4hR&f,3\bSkKUWhASrVJe>\@G!Y\]72`Bclm
%HMV-8nbQMOl?A1W"M),%i\&=&:ViLt!C[sJiCi)d+Hfhb"dgQ&;Bt4j'C2(F-u,@S,")PC7LXqs"5DJ=XDPH9MWaVt#]3CL?5qJ9
%)+80ZCMrj!/tA!1q+Z#((NeYg:Ac+$[IXW@_Aj?nqcYaAP%_)XGDUjNIN]1VX.A0'WXX^aQR0TD'ODbF#7?Hd]0:UBJVY:!#!cn-
%/3u]Mr;lu>^ggEN)%O<Z?S]u;^TcV#ri>md5;pOQ3KFCEO7EqGV;\3VYh]EG_'>3Kdp]If$u21<%7?S)&d/<CWuWaB7tHt_l5'LE
%#&t$+Y6+]7PUVq'F$W0ZflCEXr^/<5lh0/a0,\ToYd!Ios%WH`*uj.KVtUGU43ln$855U$-D)q$gbE?$ZMIbK+9"uAgG=P7QX*F(
%0@/L1kfLU&B\?0K,*";US-A`B_o4[056Ibog2(<Eh3C<%g]9Ejj:B/"UBsfc85%lk)eJ8q(Q!2Q^tU14Wu+7f)%N.@MAR04QNJn>
%[)cB9HPPsB$nc%Og+Fo!Og:=5L4DHuk7D<7@!,.Di2<6k;*a4JM@^)?;@S]n_uKs+1.:hP0gJ`(3Zn4@;<u<l$fZi(ZfiV81HC'h
%UT;cSJId,O6&S:H8?<DU:a+p*Hns>u"r.``b9d@&dY4#"a5f!+Kl@npS/n6Hfor<.>TD@pM=^_I3A*e:^#6IS\?92UAdBCTJeJIl
%A476m"pmO[`8SUr!-jKnE_0C7ZQq77,S1QFXE1gQ2\)InS14[SUI7KZn2(spe0=86&9.g'(o**_p27.R!P"aVXH6B]=Bh:I1a5Tu
%>-,Ms,imr/`dfrF!nCop;lIWQ9Z(A`JBT:O#]ZOD+#h8*b)(HZ14r.N)f(Np#I-Ga_#[8k_r7^4*;53H@F.+A"qHcj%O"<0&4Qjq
%f.\(3+bV9^nW'pfhJu-LF7rian$`ud01aq'ant06;O0$Li@]g,6DPn-j[5>J$.<sH\ID6;!b:n,!#7ikUQ]PWY8D^hc=UtrUo%OE
%g&h%5:9l>ca]CH[)8n\ai3u+j3+7Xr\Ne.1\<+3.e^+=!L(,ffaK]`tTBDpsVre!WYGN^T0(`0\jQ'Yq-O*tI&?"0%#mp!l*'n[%
%Uch#49B*k2[X5gI"7epK'D_^k,c#\+S.NR>johRt0/oEbY2BS!_pK*eee%=)0\)j85k>fp)cA$$C5Z,SU(U&\3Q@KJ9B'!H3-sjV
%>hpt37Z]5k_7pY4Ta"oMN:b?1'[VL.,_/=`aLPemAUL#=%c%,J4_../GifoF4R)[ndkZ9u>b+Nrq`PV-2(k')>nEl?.@Z/_8<IIk
%(Cu02<iB4fH*P!c>Vt+2U#_*$>lXlj#fV&i.1f'c&SV=u-mW+d)UoHV(3OXcG[<`c,3"CM;i(AQ7M#qr"fG!?q9R%ND*]jki."_i
%/1PAQ!%U=hVoL@:@rOk)84C@VL[=7BdMl(u,XQ&GH\G(B3Q<CqCC;Dl[?=#\(c4`QcCP9]VrN.mlaQM(qU2m0cFKTO5=IUp^BG0_
%TK-SEMLlZUHA)>m?oF<^N**.]*fh:_#\4o'iIpc<<')XACcGn;qJRi?kMb[7QG5A3l:Kicndu+/pVE3g9*X-3/1eD4^8TrTUI.,H
%@HphaoJ7>]5^j/?9d78=TOe]u+-QP@`ghu!M$``%8H+@B&G;!t`lQ7,O_M+k,XCN-P+#Se;p(m.(5R[[^I>_)$PY&qfbS7m83t<3
%[2:ia/&qWs'=gI6BI="[X7BMY3#*i>m*S7%<XarU#Od+T0/;LEo@j70%dM'o@m'Jos(kf/i;Y)/kl59hJ,ch)%jihMQc"EVD.KC`
%arKT.JG%5TnI9>Q67dt5'"Fh_g9JU)bYX*Ucl*Nq-8:/5gt2fK0I(MY_CNN+ks/-:mS<&ELg6+,8oc='Bt%M%:gupcqXY,L<PZ4.
%Yg"g:fepAAWa;+8Pas+OF2]S`fL%fX6R=*&KqZerd2ZlA$3]UG2:>"tNi6g8H.fujJMkSYN/GrfNfmr^WR$9$!ZGYORm)?C+^/U`
%iW,39$U^ccSM]B;,3"'5n(_qi(rLXF$;Na:C`X00U.<gDp4Th6(NXaLB_?j4F4TH#&f9?V"aBZ5QjZ2R9OuHi^>5@,:ZA^B`X3"o
%,I.oes*"T\Zpm_E-mXt8)3@mQr"#76E8[21M8oT&JWtis`K.[Ea;%,X8$`Gdk!YIH*>WQ$L(7bf"0=iMC_kB#6*mCIhm4(*$;E_I
%^ldE-GeHF!8SGO@Z;kSJ2FL:E<n'+rTEC&gVi!;2mU0<:^oA'gEPq0qE@q6=_'u"=0rV<C693:+P)>+F4K]%1.E(1CDnL=[0^:WL
%'brgibCmmQ$(X4nQHr&-InML2TnsT.[0o=r9,S=mC`bc0:,C<IMcE#\=,[:+C%K+e+eK8-rep9p!lp"r#8X*@q88@@Bgft2SCK@E
%J5@^p$p5Jr^;PRW8-g0ep-;WC</],=-2*rRg8`j#;&dLg2GD0%4\fYu\cuWi'p2fZJUmsDPt)OM!S._@1Dg.#j?,WCF."+G`SCL^
%VF;;9rX2?je"WYaYN@2N7D^AAN\aRX@]s[jDhdk5CLgM$Gc7b*EWj,lOH]9)#1d5rK.J@>RE329R%nF:&q5C;0h;nufjfpQOXoMj
%[7K856scN$$0Z2E*/d)?Ij*<<1Sm_iA/=MMV3"3uYf]J@1rrClE*1!,.?cmVUPps2]X?rHP#;OFBuFXRH[lP-1@ObTG^\!KSWBWD
%/cE!?%+',_a=[bO0>p`hU"r@>L4HWZ'&F$CF<Sp6`c;3$jMW;01?tt&^h:i)0GH<?_AEG)PYd+M&Krs#E>fr/S6)($7\L/F/8'i@
%O4Yn@KGI*^_?o3GgdF"U?%s@o=h%..\BHT$$:5rlq[7Y-!AB5H<6rC>)HkQWjk.r*`Cc\ijQ4.F#'DS8Nu&Mo(CEG24+u[(i'%3_
%61,*O+CG=`+]p#/EY[W;!e.L`!l.beWK7;k&]KLG[Jm38:o[o4-lX]F)C;O9TMZ5lZ:$9)Q$<&$_ifQTqh=utoj?8<qp?"If1P`]
%$'<ND$VIocX'@+hLn]n[$ScWH4+_$4RbA;W99A@2b__+/7&h9*WU%;+JX7@`e8MTCaV,XV37Ypeb*hS1Wa@O6iaH9KZ2Ug#SNf$P
%F3j=d,X"2`*V.]b58SLaJ!fPQk4CJZiEs_"0OY@I=q`p+VLWHPF'F__ol&.N=b,3&4b;;C9/k4ko4J"cDXBS"lfhE&<s"'4Jj/,q
%@Y#EZS62ioAdVJP?ua&='0seUm#cAt"B2X#fhLHGLl#!*OkL:RRg_:d0NO5[?2t8/(Kr^K31\lI*<O@!ah`1f]knADR>Clr)Zt=[
%5Zt<Flk:@hI>P+,5bH@_:$H,]]7GXd_D&3p/d,(#TSquA&B!u$;g[KgJ&*6+$jkIaJ:%esgJ@mLSk:i)5u)PB'F<;!=?c8kK4V,<
%KG=On=\a[7&_O!h;,^p-OqiqE#dYo"#sMH$n)i,r7_J<N-O"EkRpl9r?5'%,09G'%-jIW("X%M&khIuXZBku^8FgCKMP27D(@YIu
%\0./73SlMgCK-BH(ED]"lj<VSO!6.QXtHpp2!0D0r;/=jB]VouNE:f'%Gh0s&^/OG70E])[o"PuKu3:6/&T#ua+VMnP1?X#65>K]
%hFqG[\ssIt=qDV`Zj1+mM&b(+_(SYa!qW<8a)*6pS./A[5`<U[oSbU=/Z7)Hi&:tL4q11_YWO2dP]9C<dR&%GBq(JU,/,RH8ekVl
%f"prt/AJ$(n:I*6:m7O2:%&]-r?A/G`fYq#bK#]525VOI,\DTVMFIt[>VI-)0aVfBd[;XOaOuhFA2TN*,eF?KdV3`Y=.,R$-aJgI
%n\J[^"##@_Z`PG<LOHB68;]rBiIQt^/-`^28;^E3=_'93.`MN#M+7m*,bbO5A[sZ6Zf!rs"KeU*fEc+IaqR?W6VN,b"-G2F0.gda
%J<kh(5Xp.l;&4_iPlP+t/3u7dRgb58'$!NaSW`TlYM[bZf_En.YR4]5Y^`3qSP>"X:5t>p8'JbE;^&D!63J,A!105g7gh]h)3%I2
%`Eo_JfRiu9M1ZBK+<21):`&35;\F9`#j)+6/Kkc=>X=L'%08%(d19R]qe^qnaMFu/]:qV.*E!&#A#tE>V_&Kp+A''_XSGj$cUH30
%:FGuHL?sM^rJE'M`7&Z<8#V4EQbFud1E+W+&ZP0VC2P#qYW,]Z!Y@+XJ?jni-u6e[!,h*'&Od$%,2'dP1#%H%12pVd:^>'Ab0L0&
%)%Kp^8M3YWQ6FA7R(*FbLLY`o+!%mg'4&tI$T`;t3qC0N$KE$,L6":u%m\GLl>%OO#%/'bMAo%:Z_CAf$3qaVaCgA=$dRolVT@3n
%]ebh*+cODcUo2QS!/t)]_H7[6@7?[1=r+YOI0DXp-$9]\:lr3L(`LCoNqMjg`8j6XF?rSQLro[_>t^@qPDD)(%`1i4/NAb875rVW
%JFI0tOp#E5-tr[=^kj"l@lml4$ed?B<CkMfQkTOd!m7`Y9#?t7*i=*"R4&2hk2]dje4WQi%;/;Yb8$DO(sD_i#(,OUX>""(pfn$*
%hp\q/K",%sQX>nS6%UHf1]f_>;(sph1cQ*I&`>:$OL*jJBa$D87O(23!+h9X&!/;0X'!%C-Z$!JZ%UnWYb$42.RXgTJ-IObi!TS.
%OVEIPYYR7J9E7,M&We!JnrS+7E)aq[Ncsqt]ZT^-UjYO(0$)/<aK$Gd2BYLE*SKA0KY7O5&Xq>Yc:\C%&O_!i+p@UZKlC,=.:TF@
%&gC'p`"YUg(b-N`QmtWZ);)\8Y#]N<i<&M:bchf,k1ElKN6G+<BS;SKH]jog25D5fqc+0Q7nkVcYntpNJsr3lRf'D!%59mE[M8^j
%p>2o1Ou0err[YY275aV,&&+7lJRR4#B@tc8@h`;b3,P@?Y*hT-aHl,CJ,<CGNQgHTWbA[`Fs9BoM=iV[Nf4_MYkD7VO*!,Q1boG<
%N/ZR=oC.]V=k80a)26V(h265.E8cGMAMQn:+m9>d,Ne>ECPleVcTmZuRt3Sa$O']t>A"2PE+?W"5(ikhSp36R<OASD*Sin)3=<%s
%OrR$`9h;S0n6\ht_:3M&/>Ph;;k,Gi6!e'L.;h=!,f\Z%^TQ9EPL1P,J"""+ZIWWPbt4c).oEll=OW+5J=pQU<tkVBn3kAq68^\)
%$XPl'MH/ARA("F6'P[R8fu!B5c1It`>f0Pb`eBC4Ha]*MX^o63?oKW5'A2EWiE#)]YZ@%q?)5TEo@AHG_[E^[\?<15qrN@2"1l5$
%f^%iJTe?#F!dqBA]OTIF9$5,"6OZ'e`YOlV5an0$A/'6L&l*Ep@\ft3?gNN.dP.\s>)$\o,ti83>DNiO8#p,5CE#s:[D;8o$>J`?
%:T0Rso0eT/nM0ILQ)!boTZVg8HNKqn(Oq2aRBF9.:JA#MBJ_Y.J0P5nLa]$G>I#eg#NH;c.o@:L6q7Eh19KknTLU1?MGo(_YX\>%
%N)WNa#ZdbLTH&k\PLE>2e59GF+$LG,YbrW/NQ#E\+X/#,ScG1IMHc>^geeub=q$E-n0g.?DHP;h$udChJj!^F%B;*V3c?JTD/A@^
%V7:kuF`t0tg/Z^p;1(J+m/XM;=F!C3LM.">93aNf[PePSW"1,#T>kpBQ#1%LEjor8+MseqJtonkLdrX8<:'-eU,Gu_+XYkTk*plm
%Uje;e>afYbV$R?M)0<AG>).,c1G&a59/U<HZ"Fs"mZG"21.lRO61CD1)cg!SL8"YBpp>4`<:)0Yeb9:Q*>nEt;mi.Ve=E,dl[hP@
%hV=FZI%B&3USMFR@2$1U\*#dk4B0Oh49b%cW7U5[idHu'%69JN*9ms9>%FiOaWMFLkh4NuFGJR%m4k4uJ?fh#&MN/:5l5hSJGV%^
%-sRjUE^7c+L,H/1d3^Y>cM&pOA"UFIP7XFl,R[mJQ"s!EfZ3>,9O^t?VD"1"2c^uq*a>&;/G:g+*fAH$qJo%FgHr'?FNbVT"s"0;
%6jtqaOdSHUMn*@1Q\t/:T;=ps2:irc;NMg/ZF/WP,rEEs'VbopSV5C&cHJu4`TTmn70fO;BI[:VRequ/J@[*EipN4mZS+bZ`_,sV
%0DNR.=E\**qeX.2P$CSNRa-`S_IZ.'e^I#Kg7E_sWDR`B^kY15Is2<^/@ufL70Q2_Td<:Q6lA$uUoFkXHG!5bRBb;do(P%UWqoW0
%]6?e/6`D:[@>3\Nnm9d!QN^=kal<eYr(BS2)/OH&K7M66OpAS8-`G":\*4!m#.lAob8,h884GiLn8d[9?s@:#DOt*h]4WbA5!6I&
%$Mr/<47MV6V0fDK4&)MrL9/C!E=!.(c,)k8X"KGE0IgbA/(3d>\_-EH`c]5Moe"S'*Rirp!jk5V7dO^E=#;Z^mBV\$+`tbX=0Bk^
%A;PJ2+$[6B/5fAIX>LWYV?LXfQ&1<6cK^3t&Xl.UQ*glSToa,a/^e0>f[S3HUFoMC1?pCB8sJlc].[mO_I^CT>,PMJoAig9at*?H
%(<euTNI<k7lThZB'90\s="p$71*gPp2Y:!,V[^[3WBj-^:2'?'-\A3]lV1_9[_#isT<$h8Zf!5tcCR"q@;8C08XP8WON]ffRnD%,
%`a"ZG;+IHp?8'LB*'kfqMg"#^5b51Ms&.]i82:fDF:T&W.q5ts;'B8VBrp@,32sNfkIE+Il:2`j5c+XOG/RBK5S=ZE"<VW$;,L,J
%PncroW'b(C9:]algKHG!Ng6%r^a"1VJ$\:V+qi@>(!;`Z.(&Q]N/40G,+-KPJX9VCZ)ckHX\c![=_]`"?8+_*ho.h(b\J57i5C*4
%[UjERdiNma(4Xtj)HU&i5O:ZGe9JaY-!p22>f<8iZGeU7a'/7r8Ff#HlEa-POD;G<5@I`M2&4`mXWCbGC91Rbj4OkOD+H%ofk'Cb
%5mtoHI?'8_13)]iI&]b_$rKIA1,N<1O%uU9"=#F>nVfNkOA/A"@'Bh8k/Q#I+8_68]6i[NpB<G+=T/6kl-n6/h)aKYXl5,Qomt5[
%4`V-7^X$4SBn=YC)JOpo<)Gt7?"IH:Il@eXiWS@*[Lcr1HhDW!JPK/Qe8V4kK`Y&5b##pmZ/^o/@j%"T)JVFZd2)lsMEIFR&(7PH
%IaHlF,%X>JmQniPe<=W($pgmnWj0!t))0"Mn2B%GPEX^%YIWA%o77tgI_7Ca^jZbY_13:A4<J<lm^GlQ8nbO18d$oe+q2_ffg<d:
%%4ZMFT$_a@XQeBn_[j*Wa#diHALmB>dul1^ogtkQ(n"r?Fk3Fi$B"Fo*%_4imnB\tUE"u<UJpVeP(_a]pWP.sS0\7MB[PQ8Vh@>#
%j0RGC+QF@J^0_:6?@mb25Rmei[/fcW;U+6u9'':2WqGm[ARh(/RUp`nU$Dr(42\3=lA$H6IQi0h3QQXD!NGp+.8g!S/Lq2G>/.2g
%RW_eN[Y)(M*R;poGNXU_'[DbU4-ojQX0kTSm$O!UQ#n2N<t<8I3**'V+a$EBeD\G=r2M'K?OHfF)tN/cf'7pg2$M`[`NGbM[`$lf
%iX))1Be2!1_d!Vq8bV,C*[]m2L@$9P0,o6786_o=U`;p02q%@3,AL%TI!.o^oqctm5>oJo&hV8J</i3G-sL0$QL4Of(0:#]]7ett
%<R]Hj%'VL5LU&re6\h\4r<$fL^=9DrQNKR^BK1g;Q8<C&`nS^tY99hQ:ST(,Q#A.GnY2."!*!^EWV4%G"(S6["$pIko<K'KA(8f5
%imPu&/(\cKaPHE.HF'U+>%hd1c!=&q7[C7HF>",#gmeXo(+(adfg5;a9Kn*50=Jm*N>jm3[UjkLm64[ScBhFcH?0<gkD7f*cL=U'
%c>B61X0F-Zfkmin-r>;s4O[TPQPBFVL(uCDAd#fMrf(_cF5[g:7HPFuYCMFBAb+Y`s/>B/SASIZ)@6klY#Y+5Uu?$&k8h_;d<H*W
%,lI;3)VpmRK+./_pqZ;`I3VZ1WD[&h7B.A800sn)!Ug;b'LIIYCQYQKibY`&i<^tR3He"HQ*%KX[cVhM*h&M*"q_G)6eI='EE)2b
%iNj-ZAgR61H.c%qZ/"acURM(,):RpOIQ\%R7tC4)!KMMd$42W;5o]O]`>6Xi?-K&p4rp/a#^7UtJn)'A3'6ONXV,RWrC3,thaALO
%Zb&WtJuoI"BOm<*TY;%rXQR43>b'Guig']C,]?LL".@6",Ec]5Z5a=Lqd`>oh(/C#7%=?<*erd3pQFOcb_:I]8itG/^g%c+nMipI
%hDE=a0Y%4kGgN&?jmHM.,Deu"*/A%\!Kg-gD4ZH;Mm9rQD_&u4nj0_5NqRdU3T>&+jLj8FJWBI"R3I9!#Uil^(kp+Lp#*HqL@!G'
%+Ws&^5Z_@#lmo`S)+$,=Y.Aq&?WMa5Vd_@sZMc[q%2e4<ZHQ&IlOR=UNm5h&3gG+=$M==d+L/TjIdbW)#XZ%2WGm^\h(,"]o\1e^
%i:6<>hE?(`pJer_<K?9l[05"YHiN?gJ0,p4*@0HmVHXpBm2-HcRC(#*s'-ahoB)PFEeI\#jk%09%n!,H$#)I.Qm^9m2DE()2,iS5
%84E!JnT5Qm)oi"jLd77+7'R;#)PG/Hbr_XR!(gEd*bi3.=_1;,,!PNRft]2p2^4J/>_9ai_tG?@2Jb$M),/8rd_;FUKbRJi\qk';
%O%@O#c'epT'02al(OX"EfH`knQP_M7Yt2T:b*bGgr=fqD4j%ss7J-hu(%V47':_OrPfpkphEJo<LE[3rXHZ!]'6sdrBLZO-VJ)OK
%;]m%b%ne5@a&)gT(b>:q[=`sV2t!9J6i19`)VIstUL+NC4[AZ,6.DQZJIo]L_DJHKkh(L?3a6Rcjqrh:%\fY"qF_B%Q80+%)V@H`
%kLPnsKS;c$aI>TU@7$p"81tI"["iGX7TXVf_ErTumIQ4a&G?<re;ZFtT`K3?/)X#2k,T7R@Wd3km?$^6YH%;sLg/T#6>-c$1s(]5
%Os-poOl9hMAKn]93'YOg7HK5YBBWLuPLJ@n:"MqP&i(K;FPtT:j&0QV'./jEEf;3)LJH%r4AEuAU0Dc;P?CJ@b3K7-p<b4RZ920?
%PH7G-FPA!8]k2PH:C%Z\$gAG7-p`P?&R<SR3,i_hr&5a7E8'&\L$u:'7]O0SJo5Y,I,<@ej^N]UCYM-l><3l#PLI/D2Al;\kF[8#
%bEj<=Xa'r(niqap>P"5-l6+HDbXX9i]'=#,Bb;b2#hMn+SHuB*XCseFCglR36lWB*8bo5MkM8OGAD?.QU'lp^9>C7hC)`Ak[r(D>
%jh/Wl`U1H9RlVSfPB5N-KjWi7I)?\JMmCgr"NUa=*=m):[Wlfb#CVAN\\`ktb`?WS1TW`GhBY)acHD]a<Z^+n[<Q]af;:0$c?m3+
%g^`\XWRJ[J3QJfll,Dr_2r197)C6U4=PD+4@>pMb@2Dl8+W#,\mG:rCW5bC)?nn9BU+/2)UdLjQoJ&KEl$&&7afq6oRSZ)@-)FJk
%0NJtu6=sh)pjR&h#mZBn>#9:[67'6m?5(LM;1mq3I*gT*IuA<\4C"[<`:!<,b$_HR?'RgbA'>WuUlqt]f&#TmetaQCW._.\S30c:
%X&??PEdlnjKC46cjo/o\cV(fRr0I6O](^tkaFLare<mu6rR#=0Nq4HEJ>3:/Ao!@qEePkuHaJ'%jN?&UGGS$],D=d#g>Q5FpMQ9;
%s1J+<oU%fq\$N2!f\L93FB%"\c:@m/"F!'k0?(6SnE>7(?ba9F$/T+_r;XG:RQg:eVZ+db5K^=r6#)iV?YDV-17$??Q^gBeiG$5C
%O\R#6V;,>&6oM-FMStJK&X?p@=&cAtHF\\Z<1d0f.F!ljQ+N/nKBF7`@$)lQ[0]iVRXt;H?0.f8!8_CIgJ'I?KfSm]jtD9%S<LU\
%G;Nk]Xd5i_RP+/cf1@I><H`HLmY`o`-;]_g#up9[ZkUg=@[Of5XDoKKjE<\]>#9>^B\HCSlB3NmR9hs,%%>;u1a$H"J>eYa<=Mte
%$CFe7c=[qr<Cn%\=O&P?8`*NW#a+2PGI]mPW"RmZ*9)6p_4TY;Tl=R9ZFmPe%_%9ihiOP*dA"h[n><C4pnL',?.n.Y10.DQ3b173
%PjmMYqseSl2E,5_qoqc6%3]]mW&tYF?lZ]:i^CPHEP(L`=+`Y_7mbZi!*I3ZA5nB(m.2"6:!m*q<k;]i!Jc>\;f`q[I0$&#[)K:I
%Fo-a4PkRnOMF3RtTU^VEV2J%u2*2u&@^h!u->T.gOoVkm7_t>!B2:3_L194CL@\u=4[<UYdDA^)Pu_^#X4Rnf)]F;,CE8:f*7H=+
%2(sq`lkl*Hb4'5X%SUe659fY6iED6&FCe[`E0^D()A#K]4!=N%B!;`8!EGA"U0(]S,PV2o[.(Utc#d!qnuGaf,$emYbYN08h/dd_
%(\V/afiQOI&:P/RI4&<P9&9SY!s8fadEcT=5iH0Aj!mJX=cEG*Ue@k=a:J_?UJfM!lD*FQe`0)3),LAP(D*>q0kW>@J2#8K3i^^$
%msNbr16<MRKh&r`+@Mm=1*FRPWa,=pS4-78U6g5V^4^_E/LY.7JKq?Hc,@?M!)HC0ccAD!OWOI*7\QSQGp(IX)p.f4Mf)j`K[m)i
%Tohk:%_]GG/Wu?]8sJGa6Wri='MVW<&BjX[@Zh"[\fqp:Mr8)SnVO)CKFf:c@&dJAmB$EtiD8o7d0[)="H&ZadA3/Rh%`cFL_*oO
%MYAWc6Y07&D]t.e@h3fq\4D:cW,3'jDf8qD`F4R@.;AY.q^^rD%JD^q-UHm0%7o?I\9M3\VJE$6g"8m/=A[CSFTtU!L#)=>3,QcD
%*Kc]8H&(.3@e<.2I.8X8#-D-Jl*PKA_pdUg=PJR*#QEf^G2Jlm1g^(d&G%[d[l54B]i-^3qu+/5B>%&d-Tu_-l+GF]khBq3:5]a_
%N&TooeZQdBc$>B)b.9TqC#eg*aA3A*4E'MtEj<[6ip"6RRlVSfPB5N-RK&8Y0BX"Q<%BLAoCG[[M\e<$H1g[dIb86!0g<0?(^hi,
%3Sbt1XO=bo8SdGH:"hdS^*VO2c79]X4Put%^s4lQ48:2d\G%>pf5tA+%or74W1a=mbUe29qc;dWYq8kHNCbj:[qm'Lq""iLJ+MUj
%Zl!e#jfeNfWG$LZkrIJk\?-$X0U!is5CJJ&+s)?bQF;LjrLMNJUH38TI,p>aE;0<V.6RQp-8C!i6VZp%>30D3ijk\J^kl$u12sIg
%QRb*[^I%,&MP.,ERJr1UV-Y'U?gHV8Z:<L9(E_p;a#n;&]Q19doAXpik=oduroi-\?e=c(3gm0hS]$Em^c1\RTT#B[F*l$^oUjqc
%@a=5^cq6YMUIe;u$a^NdBaQKrT-.gl?*R"`784T#eP`YqPO\+AC6P>jg5E'U`B;)7W0F5/=&%DMaFl<::b=1KJMQ-P#'38bfof!+
%cD9-I1;-[a,g40mN?&MYmD\2K0>^JYe#CM-UlOLATDDgaJ/jSS;Pj;$-e-LM'ebkS-3IXhWV5:tS;]2l7K20:63RB,ald.Hj8h+b
%UQ;rOX=HIn&puku)_`Z7^a-Yf!bn*-7!"X3(PRsR%PphTb+4@CfOBRVbQV"Xb]%'iri+0X]qR%_,<EpQV][Y7i<DUr/(q<;aGj:Y
%4p#!(a>b4sE>Eq_aSl:qrp+@!H%ZS6YQY0Z`86S0FlO[;(@2KqL6j?q!M;O,osBH9D4!UpSH)or^TqnV/%^/j05jq>E*d1pL5I/S
%4^'a6f)@j:2Au<$"skHL%VVp6L6rbJ(>9<;>"^B_h54_NL<Je@`!/:'*4WL>_NITFcN;]!Y=H8LE!qO#!,jh9pro$d('n>OPgFEi
%78dZoT%a^lj.ub7bZs'^@L%#0,h`J%d,3]o8:^b*n&PnVHW1[\d%gK\)^9t#k1:bnDhuMcn1p-%TU?,/-'=?>9NJh^#439;8^-Q*
%_<;09.>bN'pQ#KFf5TM7@+L_-O(t6Z'#aE1qa47_j@5D)GfA*c)."6+Y^pmiM9AZ>;/>"E/<^isba`D/D4MR0;k9]o`lX]VJQ&b.
%fRof(`Qck<OO:5'#1>4^aPqXrk4Y*ZK(lD*5F$Aep,]Q'Y_pS&$=D!g+D<A2\m]JbAW^s(JSWjCc\4Tf+@VZc\m$H`B$o;WJ0p?i
%!XOGsU!&Nef9>H<hMVu*?s\(%44)bT]`!,"55?/2HgVDgcO7`6O"5UoHo\lJlp&N0k'4eVLX),j'MS3M4Y1K.LQj,qB;0d/iUOZ+
%L6'tedVK*e+aHtVo)^<;'sahDL=TAq,r"f/`X<t>p?!KAYp;)=V=<GtpPI0p;BJ'56qAn_qR3B?nUmT"FmkJN=5D#Y(E[3Z%8N*<
%nQI?sb6X:Y5Cblci"@&LKS<21-c27>1=C3UL]#8@L2mjoV-_4fUoUc7L2:ORWXE*lq.[N.dG.(aVK6>"'ohBLHM>Wph?ShffH(\;
%*\I3j#eu^Ybc`[VB)5p<M$M,#D4+f]<X)(&74K[M/kKY5&'qq++c5W_6L]7p,c>a*hG1p3#5+b?m^<kE#:["!H1A/:nW%k!WUn9O
%%Sr"\_`DZ"FQ?4mE+eF<LKB`.f_[oQ;'Xj@bM=A[j;5@7>Kei@e5.CYJs7lgie0ka,-9rr]@B9PQu,dSkEP&jl[.Dfmert\K*F6B
%O*/,l0",k*\Cf]IFulYPG"tR,j90[6hH+g>hOmPfnb7S_fTQPJ/Y4$ad_a04J6-i;quARBO:NB4WfR`5J@4t;!SBSZrc?sTFoGU[
%f\q*q408#UYT<P''AS"k?I`/)%5nqH@ZmUB14Q*GGT[%8Lu/t(DH4(".2E<nWma:R$$<?"[O.R<k!>&H#QLi-ptE0gD<9XS4B1gb
%pfKl"XBodZ>C!Hje)KVr[S<<Rr:(*]]f#<pmBge2>)]Z6F8X=#"WeL#IAgcPX_Lh8Qcr<&dkh67![;5am$cAf@s2#FjKck<%7aWY
%r>')0+Viaf,$^lI[CYYOoP5iWGnif[5m7-c<AG4&*@5Ush;'T7&W>TdrjAnd#a8,fq9Y@3&D,2[d*CR(cp3hb,N^/R;T`6EF2fDs
%]i#;tJI7@<%$Ui;j[rB<[1tE:X7@)\h,N)Rg#k#'C[O2#+:Y)2@W0^DlePUA57_T^%E(Y?L8)b&4t)#7pM$cZal;m5/_IsrlgYnV
%j6uI*<F%g5rZgEP(WCM)UQZDPn7YK_`.sj"3'a!nVVe36QW+oI*e$D4'jqB/6NQbAUB4a%.KjE!]a`X)[&h)?g8It"d,S_kJVn>X
%6<1*lHmPc.1JEnpY;^_r%cD?8i?0'q)OorD\%5F?0J7"NY%`%\L2a\cK/ZMQH];W"k`Fik9>ce3Y;ErVCWAE*elP+B44os?,7*%c
%*TTE^iRUPP@9_<!CkCLe(BZ"tW#!uV,m=5q%Hg2Q.SI*(Esdkdd/*)O,<Wb5B-Loubf/>31lHVm=Y/uf[+A<?P^p@N;mBpA-2X6)
%1/fir13ecsmE+3dqC#[ZR7Pft5%m<YW"F)ZTmH+kK@#SHrUEKgMSc$9Ejmd#dd/UjD_V1L?]1Q4PJ<brAY"(*:+u@B^jQ4]!VGiW
%`[tgaL<M4dCDal=TH>Qia21*FI!njI?m(eC[H;Yq#.IkgiREE'Vb\@fVG,Z.0&sd),..]E.Ljl&#al+CV?E83l$NT`Vp4YF'R2i*
%5c.L$[AB1j6!e(1&>-2E`[7&rq;hM"Vl+e6gj/@@Ve]ggHsn_q!2]jchHeAD7Ma^lU7rAUld-g`q7NS$8bEs+W#0V>Y;G;NQ?N7A
%Yp'oJ]kc@8;nE[ghfcI\n?lL$STsrZ+smcpDAtX=>jh'fGWMqTVG;pGq#'hdFj_e?3ZLn-!#ObE5(+E'CQ^CQ3%^#7=c!2AL'jYH
%S5qBYH!Xl@01oBAgmg=B@)cSQV`eoJp\rGEO<DjkZO!jOo(]Sko?,#nc\pP/SMkUOpa>77q[1)ik55u`kL0a1aBdUInpG#X`J^dX
%k%]BbgL.`TJ,*P.]#`OC9k&"'9q?4N>'Y@V[Z?u_rjJftb/GFJMq`fR2K_(U-g/#:-G=#ml';%nQ&q]C_L:P6A/'GPSS_4?)5&+R
%dR<<<$?r:(^H8@4jBR=q9u.MTe=?6B<pnf%,>0`ir38k33\NF7>.N;GH#YpMo;8sKIr^R]n'3H[2W%V_:+q<4De^S_?UELQ<^Ncg
%ph>6L*s2I`roXg9mBdd0rZL?3Fi0fBo%X!Fq%!(!c@7Hr=MHm;M<"s@0Z9DU4D;L`2Wu6SeG(Uh&$j6X.8[J[ZFCp\'C(]`&4J/*
%K:_ntR2WgS,j^S_dI/l,#8/HQ/K*lD);NpL.I-'N7,3.1)jhmAUMdLi\[GM866:b?G_G-R\\=^i`,gSX&;[hn-F"qsWD`N[,C3Qi
%Zun41iCQ3o`#T$NO^HU"q^ptP340a*a,t\\Gtk):XI'/63RE2Kb"FH&hsT4ZdTo^W"ArnYio11N`CaJ_5i-j18-ga]&%p99Ve81i
%?Nj4"6.H+UM26$[D=rHf5BMbA*`@s\,g*Mm3Wqk7ZVg#k9kmTGYE>@m0%`JJ5dpI7OfGGU)4RQGRBj+MbbBe]a*@@&EUTiE(rffl
%PO6/Q"(T&<K.TO'8HFh#gkfAnn=UJiNp\dV&F%=^p0&=,5g_(@WpLqH3*hZ3D*mW*;2SPFOY0\8oZZg[V7%iaDgLuu<%DYj*SJBF
%d=*nE$2S>QK'jSPOi6&3:rW\(0Vi-UdkrVc^4qY7"Eu'T2$?IoaXIrr2bsp&?c6uMc("l1%Q*u&BG0WAEnGhsWCe6n[PmtSeV#*@
%[AJUkGg"rm^eqL!Qp<6T<[1]hanb:]\;0q7L]WWDe@&tc`<@V_:-4uI6!ml#RkJBG7o&^;V]+ZR%M8'6?2aHYWjErg7LQob6qmsu
%UW4fZN5Fm=/>Y1=aBrUu'Y%7<@P-0\4\a+]UQDA"O>b"q(0BJ+M9G$*\_?-oFRol-&?t4Hg?Yg>:=f."P3g)iC[CcMhgbUqog#_`
%_>[/F^IN`M?#td?pNJ,2iA(t"ID$fE:mZN_+VrpM6TL_G9P"?G-I-B\5YG]/b-aq'-Kuur8biL5NH*p!4=k3B'nJT<UpMN"U2'J2
%gs'Y._h,98a>6K+V.38[Cf872kj\]A!jo#X'KcH&"4#b7$&NXpRADiF4"`4lk8)H2oLkPX?m)5]k][Vh-npK(.tT7:12_^C*NP8n
%Z`Ud`<1[6,=dAb`_<\bYp%\Y#eT+T"X>2W"'Au_3+X>_&j($i!,=e0c^l\^h^(EkA*M^Deb6[JYjcR/&Fsnf%%,r7Y>\KE`@4GS^
%(,6"CSV8ZG0Oe`t<9CWg4%!\IU_Gr-OO-+Qe[Xm1-tWGn)nW;t>J.LD2QLR*-O*ihkRnQ2s2W0h%nr!5d/bR!R/Cam[1Z5K()eTQ
%-u6Vni9jU]Ord'g?pqh?&;i:WqB;LKkiWYeLs%.0f&t,)8Ut_`0`i#O0W5#ZF9Xf,"U\I#P//D0^QD&3MA"U=O6F%hW^@;WDN0rF
%3oF9QXV\BO%raPEjT(XVN`;C*NQd$kKO)a?a@S.Ycnj*S;+;$1:n^D9Ap7IG-n9+&Gfs)jF"hii2p:2K1/cT*`$trs!A-h^i).[3
%Q5+O4$eJoJ1r;d-9m7ch8E4*K-?m'lLU\j8Gu9k%J<L(1%QJb"!XeL!USpN5O_t'`L+NL7?:e8X,AIa65pMNkGa'P`HJ!KA,1DJU
%m%+#/1q^J3>T2_Id*[+>:+@%'3C;@n$<Y19Xhs>+,9U7Ea`'Ca!tc6UB5kEZ#=l979oa8\JL1VjHm>)mRVd[j%YKk!5Vmm!RZR=F
%'gnG?0!3aQks,?3_CBFSN/D+2QX.b/9NMUi+;'dp,X1Fd%L,(0d\(,3?!TK"=%-,%#J)T-UEBf50qGZUWj/8Yj.k@a,Y(/o5`u4@
%^'RAY!o_[O)e>=Kb!Lum3lQAR0-",PP*/Ab)0Z1?MX.%^DR_M1`ER9V-E1iV3^T+_0-)3/9H).r=k]-s)b]2J(7m'm*^$8c6r$:q
%'T?je8RDc;,6.C*]NPK.l&ID*?E6EJ$uu]tU2Y+bXV@MQ+-g8cR_UQ%%C\*ZK/LcAd\!8UXn-E_;LNg6p&Wcf(4X(=cuhV*GFPO[
%I3_4S(\<iN33i(8&^)UP([hg,(I&a@?jI*jRu'7rI-[-[9oV?@/Djd@,$=2Fqr@`[A]gdCK]JH7nm]YV'89h*<Y`5)[mrsX!UofG
%'9+A,"ZIQQE/a[5jf&%tW,eQRSq-%t`S[@[VQ2B:'2pFk)U1rDddTgq&Q-Q:VoV#X0/;N`Y#O1F.A8;K\&ONk01F[4E.\3*@>uNJ
%)6#t$CPu/rj:*<]AGhb_rBO>?IeZmL_k)IY2\qUfTfEl^Quo&:QHCu7^hUM:WYMBHA>LHko00VlE2!PnL.kPUW\@..Deu%7RsB*)
%m[daU4`.9@Q0&Tj+!,rU!8;e$4QCNKZioR2njCI'L-UU\_cY82"."U%NJqN?Eu6V#$mMpn>`,P[\jdm?aT,=]a2!Rh)qgB*+:V!g
%p$9F"er1P!9e_sg2B%T$>oh&sc*S%p0%H<i2-?lrffcPB-0eS%>oR&fZYeE=:brO#il@t)-`/@pBt7UoFC<IH616^36a/1e$Y)Tn
%XY+C?0P>I@:6nfd-)4)6".^c=Qf#,KCSbG,9O<id[?.8\nqS?Q_*URD:l9N2H_u]93r=eW/qq#kK_.0Rd%khb&Bo[VZXibN*8j"S
%3==@CU`>KeNFC)t;maZjOn3u/q:K>``$@`!/BR2$Mc6c-\3g^;8#<>En:WHZAUg)A%.S.Fb'!s^0sr'[e1g`p,h4I,C.cO4C8[#e
%1'(!a`?jI^k,eb7FO!^A`]91HobsXK@JJK?XT^@2fbUj8L!bPD:6N>4AnJ%q7Sco63XE,_;s=VmI8AmR\gJ<Rm[9!>01ELm9(pji
%L1O^&/3C*&I5^%\oo+i=;UZN,P:)FGWLggenoV@VVFJhP!ZqIqrnXi!7E.H,Eh0Yi@M2=R/>pmO+%MC$8g1NW\22PM##-][MI@nN
%?l.AHh(f>V*TXo2@BSrQJ6$dMUQ;N%`f<&e7m!ZZm:\f/Geb]Bdmr-65&crd6HM34=@bnH#Olcr%5E%Ogf7/m>_p")0$ZXC]?Uc[
%d@!)cm/*W+YHBr]Uj5E7F]rbk%k,]>6pds"O9ANP$^W9&8"0B1(E4R(=AMA`4/RP-AgK\MF1=cGJR?gGW3j`'!f#&BZ'ndp*uSEK
%qj,7J1%#`)W@QO<M+eR1O)3HZ&_ii+&^;LVM_HYs&ST$Cc9PU0ai:QaSQ/0cW1mhP=0RCp*!NF^24BED/8-T!dqYF4:G0Vh]^eM+
%X5>[YI3KU,FJ.6:?Jd+KHTeP4k;jUL>Ib2k<R#6q0i3a+OS\nK]0XUL>N8H`0Y8]Z0:'pan&o-g$p!'?]7pl"UAQ:\6P5..[_SaQ
%1mKe^j@7WrWL;@,hF.&Ph>o$ZZQU7,9q4ko?I'<9ejN)TC.cjVLu!qWL!<@%qr>^EFnbMjG6M##qW.U@U$3u#+3=*1i[Q,pM24$@
%O#XVIW$fU-$5Qi6*K;dQe\GtJ<-ffr8oVDmb*Qho^c+-V-J(]\K,O5kX:a]=/8W`"C%dHi=0]sBMn'_CnRRs>N.RBeP\'kIraBDF
%lW=6:p+tQ4i(0b/q"QE>YR<=kZ;>G3EM1=&)Xk&E`+qQ#MtiK?[WnYb97YqR,09piWR!226E9S8re+u'el5mQ[sE-fmd<-?7htub
%0pBUV.eW!0=P3a^Mg_'X.hd7H9G8^7L8Z;1)&f[^rFkCoP$hgs/tPqL#YBc*%KGUc!%)7C?m0-&lq^CCm[99p(Xu]"p&!49:LB0)
%l[YnBL*m2W#IZD]a@0),5'mm<"\(jmUu<X=TJi+=ZEVZi)hqmCJoVo:LbZuaHGiW?.L'VsrT6XMP>rJMRAmItJ^W(LEFhS@LH0[-
%E)ku`'R>dPmDWA.WCU/)Q?u_'51HP?6]c&JC928`"q34A]ZkWkjJ;M"CTb,"I,N%r+)d)[Yb)"oJ9Q#BSe&4qpH,Z]Jjfn#*S7Ms
%dd3ARK^@Nf;V17QI<WRIr9$-=5j[ph.AJ:qMnJGpE)iMERZES6``6YgWiD^O&'*'A+SF$EMD<7N#WOO:8kY<YSEQPijd*5`5QWN`
%45bc`oTQW8"X#I%iVf&CjGO&[iQQQIaM3^6F*Z12n-s6bCbIGA2KmcR=b]Ee\pbd21[LR(Ie_m]kL1g6ccgip<.2':."6u<Pm,(N
%oX7M1g0qPF%cZVm3&dbmSI`S83'X_9=SaPLf"UOocP_62Q.OR^q9r]#r:i3A)%\ah%mT!/g?XQ5GTks+7fVo6IJiltIebeok0(f+
%GQ7VcJ,;H[p[R9nqU6O9qXN]d^O5j>eURUCs7JVSQf%b&O!"Drhu2f#5Q:6Rm'?H3roN9,g/E@iT7?_'a,g8dVn[WWpq&chhk,An
%o:L8<5CT-iO+6uij2Xq[s8Ai;Iu#12`nS9+l0ifsj,a68QTtN@f,t"<:HpLWfE7",^AL0$%?-87^BFRMQh"4K^45[^I-Ub(CJXo$
%cDQ+sYJIu1ca[>b+&9R3_:lCR>k@./d>^GZ?]E>1E:L]0:'OO5UO7Sr$-ZNCQEYR$M/(,3a!u7eG?mQN<V<>F_1WkfR&AZ39F"[C
%0^s(NRW%P+pKEN81AD<9'be-I@:As_7,cgnHU[9geh'FH%u)#Te$g$ddof6CI>DFkWg4]fA74jVIq??,M$C0=Rn0:V:@MXB&m`m5
%fns4M0/Q@!r'LI+GfO>?#fuS,R1Ml+"tcBVRDuVi<9>2tfWkI[WDXgalDgq?_15N2FW&E#:\;FH)3OlE1(@f!c1r,YS*u6SNGU\=
%IFtMFbEAgW`jt62FG,X&Finm(auVC,-FgL0Cr<(X;cN3C,EVcoo%uTS:NdFR/[`14ilIH>?Pic+d[MJpH1O=Yg3\cu3I"Upan`1q
%#>s"20joXkP2P=[M@T!K-IiKVaO,#@D?>*?JTCpW.5O+tL^d]""M8*)=ErBcd5DdiLu\`2GjPsnW)GC(\6EfoL][[0_P%"V2b$07
%>R_-tIkaG'caFV*0c5;[aYn%CKa\MN=&f`7[6"R>_cM#92:iNk)",\^Yr'?01tuHnnOq@CO7:`5j^T+e2PYR6D3GQKer_t/J1;[M
%AoEK&(t==lP@T,G2i-pkW<Z@S-:8n4ArY!gAo6MKjkN_Yl17?1T\h`i*Jen^hKM8u?QVK&0M=+;!%l#X#58[DceSSSDK)Yp6PZ.Y
%MrE%30RU8Cbfs!a`FH-_TZ05]EHI*E/,c.g7-P@I99X&tFO&7e(lHXcQte:6+>L.$p@i*A9U3I!Q?+.QA&lJ-+&k=r=;K%7PCZLF
%gF?0f8#04H\9,dD'P)N;HM_[F.`m"W&B',dhZ8ErKZ#Y_2%?!3XA2"o!i2(e^Gk\A@M`P411BOsB6N=\iZV#WLGX"POG5s*73n)X
%0.*J)qs\5=BqC\8c$3\6/W]:P1mYmNopaScK3OH=;YjB\hH0EY.`#eZBE4lcfGU4<#]%eMcNp-j`cg)ZpCUA)jJ4A>6R8W-(CbZZ
%KL]+T%h_VmBFF8Q_l^mA^+N&>?^A=eY19\>n2_T"mO^U`JE['2n&,I4@?O,0.kG0.#0kTN@T')UiNEA2a"?6=fEfUK2AJthel9)R
%0[DbD&m=j8fJJsq>#(_:))hEoi+'E!MUIKe2VP@&#JODWeOI7Jr<cpf@R:h1F[/OW$5PWNTIQM42HB.R34?lL@O(,bHsj_H"Wu>e
%f=Sd^fYe#@Hl$Sl2OFsJ)H$i@57K$Y^r79<AU\=<+Vo%(H<V>Q)N+gpX`+@IFX4_tK0cWN!B)F1+:gs#VF@E.,YNZV6'GC0RIt0o
%Xq?H?E4MrOR2BR6X<3\Afi%4Ze"^fS7>.G+je67Tn't0&o(.rf&4>de9U1c!U-E4;1#[&uQ5k@Gg3s%"o$S;#Ee=2:Wb\\LJ)NTs
%rZ(_)k%PPmgsOW.9;Sg!%FY?:)c.n'Z[%7:TEQEk1T[rp8-'10$r(M9g*nHdQ$@QeDhp%.9HJ42%9:7QlqADOV@:qd4]`(#)B,bU
%PN.Aupfqq%#p\2XX)+EMQ$-7rpgTp'_rDV3qBSK>JfFt4C=:.7:jM<q3UXbJX7YL7nDqBKIl$ej4]=#!5'QMeTY0rb%7V7P]N!hp
%kPF-"oarQRk^sX\bSkeE+*)R&eFAjK][K1&S.=T=Vt2Q;LN2@pFul##L]6hi;C);$c06>+,.8)[mkG9S>sb>g'KPYBZSXJ&<c5KW
%IN$GO9,,K'b$ORJSZYIESBB69#t\cne<!Kk8mU7O_eDJa>bO6Q.iV$QgdWZ<pLIsolno@5OGnug[=tHEX"hgVU8>/$])Hk.>m::8
%otsOaMHl+h?>>a&I]@@/9qdK+":$4D8n*8uL1bMS4&(Rar:OJ!3asP(DDT=++PgJEo9f``"@Eo^>#g=CQFVp9!^47j^Wp<[iQV%&
%cjmju5VH:FMq>S&"-#)jPXAdmQ\*Yu)!Pd6e^!L&S[a%7p?X:+?)Q!^D:,PZNn"#Pe\)>;Lk,q[7W*;iEcqR3EJ?_;iMM0mMOH&]
%OSBntPR)4^_:,'!Q`AO;5M]aub]sssTfW[D5n4rU>d5iogO@)_&>V%RX=k>'^1!+6P'>ZSV<j#Z`<`"e19WW"HCg8Ulp@Raa&cq4
%1h7+*pUW&NQ71bOkl&BLbHs/SUWW"#co&:f:-jtS"+\KM+eqDJHmmOmVt%*oD>;ehV9k]DJ9'"Jl-/r;blcP:E7(H(l#2Buf6AAG
%?=is'bGTt5EhM>P@u#1(R1c=QNk7Ps1dhJQWk"7XP\+bJ:JsZhN'<pid"s!R+_HtCgK]e&N3h"Kc<1Q6Kk_VimcZN#q]a&8N<X,c
%;'@pGe,ca_hF&>f#(]t>o9g'o]\Z%M>:Fu$;,ks^E<He">3X-qaquCS7mT(Z3?hWlHaD#&SBp`n\J*j*;:eq/4SlAh5^c/qbl.Ln
%0(%GICf>o6iRohX%`Bib3OWjN^k6pAJOlYEq0TuLKGgYr3,/skR:!/B>rjR**K%$5I2_+@=J?<GTSa:oHrrukR66S*e]ISCP7f<Z
%qe`jn$DRYo;-m8X3T]lp@T19`a.>G\-:/Bm79<o12LB&q2jE_I?s$1e9q+X>SQO$7V3&fHE[h"Wh"B>$@O#-UmF8'2qtiaIiIJ3-
%'kd'4qNqm/83tf8`)%Zh\7FDa)nN\Q(fZB;4+SRgV*cRZU@>dX^oek^V!m>9k7mSsWDO+718&i=m:t5U<ku?8cJuJq$_\Ab*5]#l
%rN>p/_/+X2a8\(k9teLL>);rK$h5R'C@l-g)iZo$8.k72g$KAq#hS<'Fbnoq..eP!mribQaIaBfR7pGOJ?-7_AcSj1cs6`uK@;ed
%;cLV)SfmlRWI.@n:3Hu?CLJnCKcH(e7hAmV,jPe4j^_XF_$gY6c!g_(]k;*u2B,D6'/)FJ&o'*5^Pen5%6`%5aJWH+IdbD4m+=3!
%[-i\#Tc/7?BO]Ms%eRU%h1$@HrV6!15Q0]eO+otS(#SUIK0nn$OOSHTD^^jp'\(#*2HukZ^0*\)@M,Z]H;0Bf7Wr"Kb\.:9\'%aT
%4XK*h9Q1S]((B.8SI&7b6#J$VlrB.O:??8-,#A5B`g*d/G):taME`ke7k"kWFcO7HkN)M-Aha(42J`fPW>X6_"SHEtj90[6hNs+G
%hf*kU:%0@>k\7<*V&?1:`>[,<_0i]QW?:Llp>Z$9ISpPa/8lJVp]2\pf(s&%EltlbT$2,Q1ibXOS*b`Df&90C>6f4j3XGB6r4pmg
%jSZIRbdS[.[ueK+[c@NQOfm0Ne#72;@2.9C/[[JpeZ+:,!FZLtI;FKQo.JL[pHA%l"BXs;aGflB_MlD3pg^R^;,+eV6!lAF/cYC>
%LWRYH>9,i$']^,5O'-M_`NmEHGgTi:2[I38rtCgZmTQ->c<KSbi:-I$"6gQ^d"YtBVW,R:I^U)r<?=ZTcs)YN]8C5QOhT6D@%,u)
%3J07!\ti<P/U+pSI%c:EmIA`]Plk?hP6)Co8$2`G^>;H%Z)'k@KD>MaS^$[6l3-4CN:n;^/W<8DEJ"qnBW)SdoU'Ld(s8%,_tDY!
%(81;jGrHsV_/ps?9gQbi`)pZR5*`ZtOY.n_ThI4EW94'&P%6:)!$b,V^#X)"q@Zkr&gd2*Q$jt`YM*M^S.%82.5*X-8ARI"+:)op
%.V3kFKaH3nUgkLQSC<QPlh!5U'2L7(h(tC4+.->H,5LIOb9'j[h(m)R'X`1K$SYKu[X(Pl(uLQi&=.L)L7_mN.On2%hu[,Ad$-6g
%6ng1kEp=A*iOJ`9$!EoBLi[oa'ql0>+-]Gl?W34R#%>?/>[Id!JoX_H(cs"J)*I>=Pr4+T`&a%l?%@A1&k?S.4VrOfi4%W9P:C^)
%!@C5eC2msq#I52k+D^J;YYrS2&`^)$I-Q@mqF)B8#]>YP84Hr2!k\(2H7B1SEV8hr9DI.%\t4,l>iU6_Gb'Mnq]i[6&FoWcGIr3d
%NQ7Eb%C6n\>],9!#%6pJlj&u9%1+.nX[kDXa@I"<Kfj.eh..GI+s[RikNHAq%4mSI#m:#l&TUus-C<h=kdD!rR^S%H<])EXE7JE-
%_EO-`2VW&aatHU8,7R,=N/Cknl0>85+P!%^O_4+>]&ltmHBpoV=k-oMXHG-!g:r6ONmTX^>@AU+Ih+3L*q,S;Q0&]/ruWA+JCM2G
%6af<Yh*Mc<hm=GUX%JX;!<\'SaGBp";?]E@Z'"H4ENU(`CM&o9liGWn",Y)!!`SK@N`;:E3fKo.l]\#h&J&&%QOss:+^5'[$&1d%
%?QW[H@U_-Z1%XEm<VZ7Zq"KJ0=3B5X@-3!-mmPm`he/aF4jaOf6,a8DWa.:nEmse\_aV(l=pf6_!C<HOAk55"_H&.XltT6,3*#='
%PO^R=A$jZt/EVcpiqd-73;]B"2#N7<?.U8%fVFq4A&u$km#-i=B<suX"M/9TnM3_c(DDHV.2u0>VrXZh`qTq!6D3;t;r$+9HdU-u
%)k(3$PMQKtRHQEd3m@g\\8))'QMaX42#O.L\k2maQaVM#.]qMHDpqAuXg78H37AEj/jt,hdIMAWPKFjGRj(a!/%:7>r-Qg8ABjmi
%m/UraY$%0p6?b1ADO%'J1bKDBE5]$;;$6ZrJC7mq^SA,:f,D_tR63XOh&#j_9&SHH)rJZf+Q8V!7V?>]?J!XMBt5+OIpAW8VOi3r
%M77$1D'+q[n'e$(2`<S@%Q-E67r`V?_tL_0+@nPZZ,&Je?,d*KCqF\p).QDn&D8bmd\sGFC>f[\p5h>4_>G=Unp@./_iuNG:o_i9
%:_%Wph3`r3DMhJYiLM=WBgS%m@8+KLF>!-K6s=<RA('5b^jOGN>85rVE5fa`[K]O7apZ6R:!"DVQbhl4!%X7"auP^4fiOikBFBAF
%#Q;#=:Rg_$o9(bbe><Eclp9WBYf!aT8Md[%*O5lmKp?AnkZWss\pi^%QM+&M%/SiNVSHGjN1c9X2H')E3jW0TPFYD:UYBXjg$M$B
%KEt@`8goB1elHZ^?QB"*^^AW#e4#(^QM)):1msq?mQ`%tGq")u3,;_RR'!W:%8LI?[sTU@1.-P*(n`S,C4CFK3RS5=KB6;D1[)WI
%Wkf[#.L+BJ[@)=`f/'t1D5.^L3mo-"QrQp=G<9#CPRM9R-JAo<^\DIY:"n9;bD"]-XY`t^G#`E01K]X<SiS44YdQ&'Kfae5%?/bD
%Gj'AF=-4dS*)WfEf9I\%,oM*!)f6R25eN+s?2I:'fACEmULq(]QDl);]SZ#T6=*BP=`<[6n3SLh=2e7XBt5r-?2$DH'ks.KB^F$4
%`>R)\,3ro!FH($7eG:^kcSlB,O7d/UpmKeKFka6BND]G`BZBn`?Os$k&V7]F"MRPT"GRt7#E-3*04_:HQ.k8o`XeC#)fD_Dgdb6<
%mkMBtnjXU+A@sT&_`iGF#"6hj/YF[mDC[Dq/J)IBX!sC%U3Ul-)>.VsJMYeFpq/+X98m@7\cjsN`WeT]2NT;a<^80h03Z6L2:",l
%['=+XV#6>e%C)OP=!4GV""UL"j2?H`p5=FE[[Oka=m<*u14U:N;@qQ>b\Bri+OK0a"oXJ/ZcOahX3?ACE_O$,q0iYkp7!Bdc^>T&
%j'c!t$L.'hYnYSLQnY]5aeUj`*Oc`tI'`RtRE)?JCC1t]STd>81(ZD2*n]dE+k"l0W77iNg9j<dVqrhNg*f@C7_7K]bamdJ`T15?
%:>1&88+3%[bI^@kko,Ja?b_'cCB)!Io_!at".nD_%\#hB_HI?2Omc7%@f\4^\]!RPie[2leZ@&,c%=rLF@?hb^^YFC(=YT-GTu&N
%S;1?fj=]Doj"6s&'&A585R5fZJm(MBKbh^JLAbg8AU[a?_3#1Z2"rmnijmiq(aDDTV+DPZOt]EESb5]N.fBG\T:CFHXCW,SH<HVq
%G^sb<_%?@E_0RBZNi8YG[mO]^&<TaD__X.8,^8*EDbuMi)HOf/D+'9#E0og&<Rn]+XJFo-JJ&Mq0(9M%(MSdRiF%Xq,mjr`73Nmj
%/s#EepCR8MS_4%9o/\0**'V+Yi-Bk9gOj.EXL:h,Whh\5P![G0^=LsC:MG!O`%:DBI174`![D>'DmhSQe6N.FUTNftdRpFq8O8)G
%'pH8:^.WUX)T'up&Hs".e2-_pCaSCsC^?reZ4sU5<Y@S\GMY"=oYO]]$"A(o,(n,rPX0l:@+m:`$(<YuY^:<`#E"q*f-chDRCfCm
%'[!b.7H*eGo>[VSGhTbR]6oSHD^!S\9*[)_3A-$::d6.jb#CfLNg.FU\E*Zl^fMZa0j[;^e_pg5$b4Bb)Tlkp/32+lng0n&.\UF*
%'5F?[.u:(*VUnurY*pVkVsTT:8pL$9Zd[(1\)&Ubg%35sp,L]>S2RdW>jh*o[N3r-V:0u[4L`$&R/Dhj9[hK#1P-49<6AGD_LT%a
%(W"l5eA?g+h?#d@(pN1PC3ZjL]=!S$SMu7XcsYkr[)[#pCCK?Iq6:WBi6R<USQ@H;G[B/8m'Nb@_*9s#h,j@dj,7hQ@lg02SScAf
%oYF8U(,)gSMNO`@Y4-c06.(V081G<,Dpkj<U!CiNZrS7)V!V[TX1rN:]Q19toAXq$VbN]lrlI1g^.GLFJddHk`1Vc=\"OlFSTslO
%O/^PQZP\B[&;&7laG[\G-'ofl>Ac79Z,V3DU"muN;CR0J25]$1(SklD$+`CK',e/-#QXA-Li'.fNS;ClE;N[oC8/^J.Kr5_?Q^]/
%R6Zf6<R=dtYUPdU4gT8V5A<dp!k77@Xd"u#d!fI.T0pM)s'DVHj?2n0rXeW*nB1.<f"k&HPLKEKqfDed0D@\PHX>u:`,E1LYBt??
%J=+n1OWKE:T`NI1>17joF8k<Pc@/rI.%g@e?Ir@fj3spNFGd-Th]0A:D+.g<*#W+Zo>_[g,(2Xnl*PKA^[pILW4#Ek&,bt^m<rlp
%/,0b7fZl-']qKUBrOs%>+8)[')-3#WS>>p)Mt[VmOmjif&%@6de!Q<@N-Z?"GYG;iQdr'P)TJN:c\M_,SW0ctDDb:]hX$Ni/nuFf
%e#G7tk/1s'OJhrONV79gTkW4f[$-iE(rsP6,),\Q7"B>`[JSp>;,F5`!_lrHSAE[u6HX;ik[ruDZrSrfP6MVb:<f&ld:8K;c>\oh
%ZA_Z`=-efJbI=inKVVbDUO&.fMcEuUbo)pQMgfsR/e#m5@'-ReKeR>@24N!-o%W'k5YI:dXG!GLBg6g+3LN^CL^u:/f*qsua\">M
%[*WLs"@#YOYT$XU>?2j(ZNuD3Pp%T?G`V=hh(sNc]99sMSV&%aVnO/Ka!27F-fobg/;eheTKP(T_2E\=BHhb3jqjm+*C`$DZ>8l^
%r!H_M9%o`mD:o:d./LgGNqdK##A6#UZ&:(6dtk5<8c9"Le\@npL4gT@6'r4`5?_Zc7Y&HHm#P7AF1)jt.DEZ]8.m.dJ7`$D)&Aoa
%+qKaC5p@chdA`7SVf]G1/)mKC*B1A@#iF]QP_@R!h1Jfu*cgTUU+1FGCbeN*"JEGc=;af+BTPt=G[.,6QF&=^d1o*$=Me')*i<!c
%WX]r'L6'eOh\ogJirqF\WBj1fQ/\q!/e;g#+VE^\EprFf]:o+0pDVcf$['3*js:8t^5p"DL_;.GIO.9Jr9S3R:dZ;t<Gd;E<"^%(
%FYuk/5qE?V)<<P0GG&>M71r=60.a=1oF,gipB/HrD`&[D$A/M.h1@r8#=p^o@S%>]'aj7'L:L7*%F%m[7`nrE&lhge9M+2/n'QaM
%>lfQ<PLJ84Y#hcgI<W%E&,>s<OpK4;Qi\VblO^lrHanY/9,,L[HI]$<P"c-S+KKY8c[nfb(t*Y2A\"Y6IGMf+::Uc&:"_<JoRoXD
%6\UU!;_tl(,F2#pVp$,b23M?F:eF3>JVff,![R<SBI%1Cb7jf4Ye#Ob_sg)5>r#Q=X%O''aVjLuaOF9*ACb;=/';FXRHUqJkUr[]
%&=@G/E7rkZ_<Je'9>ZGt_TR5$,';F"b!%CDM8TDl]I>nF'GSi>gf>1XV9X@k8A/NS3r$(]e&pbn:Q)+Q4)O8)n5%>LpFU\[b=0a.
%fJU$dQiWjSrRk,48u$'(K3Y`."s`_/l!fA9T0Bn_q6W[-SfYt]-%#q@5+Zr,/Za:tEf]BP*jWT=r+SM7/*Hl%(Jfg/g=5B6+.qHY
%/,X>@E]G/T.&>t`rE3nPpEq->e1^8$1]AO\\j%([\TVtB&4DQqQYTfMG^n<(`SFW8\l^u]n)F=_LNU<qgS$hq^YSYI2;OSMK+nre
%81>Ym6a??k,M,1go<_%[[T'es1\a)ljbfpIr:r?)`c4)REk?0<f%ZM_!,[)<<Wl;;E*RjJ!\1Jek7)8YQhritDMPVXF?8n=kI:?^
%]G-c_92BfZVI9<umoS*^dNP=+F'<*j]h2iFdBiIQTcrmnS_`l]_B%CQq3Dlf6*g$n_mQd&DG?IU>doGmcc)bV/!kTF/T/UOg=#64
%+.qNKleB.'e"j[gBbE'&7GkUrU<*Fi8^<ckGm'D=WXb_6H,uKds.cKo=M*Y`oT?+%!=SCSO6t%A7NC",m7%V5Hn:sa;IR[<q$s93
%;g.?@3nO+n,Ri)&FosJU@&-e4c8:Z]rJGGrb3;B#[CN`_i47mN'2$K;]4MUE,.=`-<Q`2hJXJXABhU"CZ)7MX]bW=JZUK_7p.5@B
%r3c%6U`MHK^/03pLg+]MN)rAS8he&b"!3@=hZH"'A=dTq=E%25T'3kV_:^`u-u9=OE<Kut:OF\`n9ebe6XuBD7,5cq220:$<Q<5o
%@t[TI`1(I(EM*Ce+*?m_=s^^F'nB$mPK,G$7/e75>t"W4@9/gYPt7FD4g4<Se@=jn195@tWqEnr-8&U'pp>QlCgCVpMZ5^-N,&ma
%l&qE87%H3Gd.N#UZb'lLoQF4DgN>Di-lMU5UKqqOmdHoV1EZuMLqAU&eEGKL;1WX$/([+b,35<%]gXZYTKe&9%,+=,($;YA)r?Kf
%J7*>brfY>Js-#p\I4a+f6#=Eq^3tuIoCNkO8s#<s^OtM=MPstS778[@IRUFICgRT1#A"PGi1o<JVC%(EhPIk0EcLm`"82>EW(\I4
%/_2\)1u,C)/d2^Z)4d'n!W$48[-\;gkG>[RmGqaAeO%9@e4i5U&P96X.KF3nD7q+`XiB@V@8jEI<tHt!rIZm?+<;*7nm(.DepopU
%,Gmf59Esi5K]'FVe4CQjQ5lg@YB`DZN/R/[oJaWT6#b9/P[-)jR[7[&,^*ER)j1umh[m5M[^jc,[1W[BNG,1h(jkt#0nUuTn7JY5
%O!E?o><gdZ(K:GeU*aH<q$IQ[[PJcoa,WdPKlER!''/-m/#J-8@^oRF*2jQen.:0Aa+'a')Edhrh=l*'b+@,Im:-)U?8'@bjZW74
%L,<B&Q:5D*@X/4.<kBcsOZ#/gJ&ArkE)3VGg]sW/P&um-S]EHr=7)[Xo?Z`60MIE8A&+WT\5*fjV9Be1f^RbEBPMNj3[q]`<)hq=
%=69.?+VH?4JRo?V&U8'0nNJI+8iS7fiOuoYP!_!X!`$"d\TWc:H@`g`\+Ss@+-dLYm"H[\fDm?eN[EUN)a;opMh+nmY6s-Z%$b<Y
%gAT_f^8Q8%?0Qd!G`=jAJ`5"P5JZc88]1N'g?>3*,rZulW7cI[HIU,YI*j.W'78f()D%"s_g*Pbn"aFH`F8k>o$)GYkVYX"3U^rl
%iJR`HVW>BA!e]#.(=o?8<mH%S0:i[?[&MNj5<6ctot13\qV?r.%[LJG:fI$;N1aCBk=%"&n52Z0VC>!*<fj#t?Ilel,QcSUB%p;#
%mF3nFo,bB+H[k]Zk2Q:nnq%!)mBikab/GDtMl-Y=D<cN<O3_h?'n/T0lj_+&(OmV?JtG.0C[pC=+@1DE)!$s;5(!d-[j*OI""KHE
%++puln1e%'(Ou'm;\srRk<3-&D?k?6%(:e<EfRbMd]9rqY5g"&:BL(oPE@fUC*:;Af_qBW$"OBS?Q#P=A`9O%KPJ/?IpO*caAn;O
%HrKNr>+R\94`2eEr^S_*UsIN1JtulP`MQB\Q[:hJD?k@=eG8#ETB#@OoDNO^qFf5h]4`s-'28s3D0r>sP.D(C"B%NuVud<nDLU0$
%=n^]aAGuV5S]0?kBXpkI8O+/e'8SIdN*8X-@-u,:6HZ,qr%-hF5!58:6(/IqR_?g((1i\"Z3UA"&<=p<UoQhF2=dTcWD4#];=\C#
%Z:)#UpVrN+8.n)1^X\`;LgCpVr#Nm1G%bh]-?[9X/RmmD:98bI"kCOb>m4fX9^S@9mZ=d&ZCC2A,tdkBkQ(3SZA00G.!0unMeg?k
%h39_`)c&*d/ooaW`n>Tik:*_ZOoH$h^P=:#EhFun9ed?/,J!=qh+=Epkl*Gb8lI$rMi`uI/YH(9gf)6&BgI@)Ti9N.V,heae-$[t
%Q4^]`_X!eP,Hf_!^rr'*4=+Qu-nlcER2?3/?3/Wo$nHq5Lu7#A,KJf$Rus;Ik#<qpiEK;eQcNa*2`T>'YK8S$cl6Kjbb@BQK&"t4
%cbRh/IB(+2m+<B/^bsY=UEn\=q6IK(!<kZA0G2:l8do"\$G6fq!b74Z28'r/L!K7,%3#&O*%%>bV#KRUPNlIAjpa28@"u@^.PnfI
%,3_5X8.rOr.6<$e@<l[;I8PkM6^=0,`P9#PCrAf'8.cu*l@NOlWT2Pu[DU=*N<J^AW^fDUS5J`poC/s%p\":lB3.rC>c/I0QadQN
%5N)L2<4RRVNX.KcQq.a[?"V_#,0KL87mP/obD&,.ER(p+A5:"k9&+`3#UXgeDnmcCoU>9A!N$X!M02=FmNF9X\5@Y=N#9)eo.p`A
%U3*B\cpW"b)7)mGR2Ok4bS$DcR#/7[lj0"?n6V^F!iO):]ap[:OlPtc\Zc1&%U=<u"_ZQf%EWdfNJ<h]kLI&f,FoX%R\Z+*)^(,u
%Q%niqPZYqNZ(aBHn9WfQm*Z/G:OCktmQF[9AaoM*[KY.kc<K!<0))iWSW@O?cM>O'TA\Qmc?Mc$#?F6+EB2W.+3;ed6/M4?#U1Y[
%*i/6:6]$_dbYXl]]pon,R2G8\C/^*p)t>kq4`2eESlA7,ir$'=e1'F#VbN^`0(sNrg^`\XWRJ[J3QKrWp_A2>2lKrO:LG;km4En\
%Q/*3/Y!-=DmD3YGgn_(+ms,KKD#M>FDA"Lr<%`+;>'Y@V[Z?u_rjJftb/GFJMq`fR2K_(U-g/#6-I(-N2SBHk$CXUT!W]R<1Rm2o
%4&\me>LZ*%>QcO"N:^JY<(j@9!h.R^N&19QS2LOP+RfVag>cAIp[F)klJb_S.TF(9dV7f`LSr,?EG\o@*W"ePgjO+T^T#P,.4kA)
%>4]5kjX%"aB-#Jo[>__F#lN$ET0GT.__YC!5s8"&kXk0$D1],ZrJC-<b9,<=:'UhhAK?I7-o(Sgm4L\#$i5p!qM+@1Fn1_1lmI5f
%p4ATE:li7i.?`U$oZRhAC\e/3LaqFu"4.TTZlN8-6eMjLPC=IjnuHYI3FT:-'m:E?81U<`((Vgo4>iqfe0sudTHA2F"A.]j5ZH]1
%R#V>9LNTaF,Dk*q8`"-\.R8W3FGtS3hW64E@Bj<&P)gj`Gk7Y#M&HI')!)?>MoHaQ)pA2LbZ66oMh"E:6sTXtTigQ;#?^>(ME4ku
%S&OoN3$8N'8f+'i.*Sa(&_@T`,SJ*?K4lq!H5b6=aX<GWe7?.+J\jEGCqObeKI!ghm3o8]!%f2/9ai[>Wk;X,eY@dT.DJ2`IrLJs
%LA?H(hc&M_05A3B+EN(W!A]]TCFS8kNZc,fqAWs^1mLGXdCnf`,#9F5YKP\2\_FHc$k42fo#T^T[ZQCnm`Pl#ijB)2Wtuc;_a"[?
%Mgjdebam*sCs:e&V>&]p&0V.V!=$qng2>Me38mOWmTWQ3^pcK04Ac6`G+53'FP.?Heic48I6l%6Q:qfO3Ul+Ai(:#6L,RnjWCe'i
%2AqQ*:D8VEB)h,l6-X`@/!\4Y-R[?5cAi:2<dj\L,0`;'_T!,1%A<]uPnk1-d+*,$nbt2[-&b&kbSlEtX=2L+AqGPY#Za:$OGP.@
%m$d6bPkNn^QRD+H!&B;"('PSG3Lt8"_E+-M&Jsn1-6/CR=rQOk>'1Y*_uMt//_QOZN6<Yg'\>n-HSXI$<!LTqa9RNKbrBU4>`aBl
%FcB=$p\/%0Hp-ERJ?QG:YA^J:Po',IGA)/L[jk;)#aTRKDA2[d)'U=s15&-XGY+3cL;@=CNJ^BB7Uh"g9QOI9S"3N^gh6g?G:CID
%a;1W'^1h7Z/ZOP2aec]dK@tglSH5]/^%-]?,X0.K$pQqi?$Q(;,5Z9sc]2E"5dU2e5lru3(3'omd(J%$2GD8TN^a9,U9E=.q8_!0
%IM.s2<YR]^jU0n@.V]RFjMT7(VRf5Z$jJ1ZeBGK[HIM('a1.h"Ltc%(;,RHi1+K+PiC&cFSfH]Q1c\/s#FZWGnr7>Rl9GN->K:+e
%ed23:cT]E:o;WUG+cDoCUdd[R\N&n-7*Cl#b%@^4PJ!fI]LA5:96Jre(#>Xdkn?ZU1TQWqb%bheL9=mtWL-l<_ErIA)>(^c6%naL
%na-FBUJ>o]aT3ag8tcPi)HAi_"V4NZs0=LC;8kk[l$Tla*=++$;E\&8]A/A)ndtqekU^,3JIj+_S11HZUSbq0Qi\3tUe>uYc(lLs
%gbHdi$ql+SBf`\5AhkDLhVHX*hUU,e8k4X=>Rk^uT90I:Z),WQR5e[Oku8Xp&O]-O_7e,`AnHR^m6kkC2R&rjASdg^(t50b_]gfA
%A$C7"DsK:caL>;e1R(FBT?c=[RlqVb<E(n3oKnsRfL](1*p1Y;*9+\?jVjt.%Qlc@jBVs?Z=!u-Q-rue<!f=c=>E\Pm9k%"-bL7+
%p_]Qg1R/m3V/+&sBt=#`gZaTE`R+r_6+Ng1b2Kso]+6#e]HXV^"XhBae;![L]1=3!**_W*[P<i'E#4tUBZk@faakcDRQNp#=&X!?
%_5(Q`6fF6[^^8*n=>>m>mo3^51.PON9iaC0;$35mZ]K33"kH9P7)S.38T#X;%s>C#-[\,o;B1jaeqj/Pb9gcg2"D*%J1FQ9$4Jd9
%-1^7*pVFsKQ9F0eJ<Oo'';%d>2=1Te8>$+D:fkM$/<C;K-=(,.\<52-cM0hmR")$%if-LC0"T81M"$=Z7P('C#uWHg'kqpF6Dn?\
%M3^W9qcS$P3@$qI#N[9g3_OM)C,0Y:dj7le.,7KTJJf(jm],]J,-B*(mkMpE`m+nH@0\o5:YSc?9rF3e*)`sI[ZJeHq3N.-Ljd?e
%SMf=Y#Bh-?p"ec2?QBYSL^CCDP5rq\VlWaF0Cgci8)u:JTl!C\m_kU$."m79jlAlN/:l8ZcX]sVa@#)W\SSkMS]p[Tjsa&0:?aYl
%5M?r\Us'f*'YmE:8S2^5%WEMg*4=Z+;@Z7N'+V^i<?2gpW&77*nCa.;_ojUeFu=]BiZUGM/;@76@'`SRQ&:J$icuD,(X&RQ/FGJD
%)(H2*BI!WkYYM3P#hTJ_A<UoH0dR[3n0_tX!E(UO)VX:)LkJ]:bFY!Pca#2ja:'R^r-kE"-(392^H:"`Ui!50s,sIK,%]jOKp.ma
%1coccbDMqRq+CE24hN\b)He`)YPk?7m/G1:06G"_HRq=($kK@l3HV3pWsQ+uP`3^FmY63mGO<$`o!dRN&^**1GW`=u!L,Bn^hP7.
%Fl5MCQ:-QPNET5RILTDU\S-Hs?taBpbXfO3dSX\PqcQ0Qkm3\/e-leN/D*%("[e4_VhZN;%$Q93Heo/U:OIOf]Aff5Q.>0s"+^pb
%HH/$LANl$P&bOrF3]"iu%O^W((0r@BG2aL?`6":LAnYEJjo':a-tpR*,%Yf#5tq`eT^;f%/GOc/Z=X_b\mB(U39rJWd,h1X+WeMc
%Td0:+q"@"r;6`:rjZo&KN+q,k4(Ij&q7]b3!)21eMRp*I1.db"Nn0c2_'CeH]B(*qlfOI<fZ.^aFP(LZ?EU"E,FM>Q=qr"KUkT'`
%cI/9>[<QFjp+<]f[$(el8E:>?m`>M\FQD%-<R7U&>BGN=X<ckH(muh0cm/6=Al>"*<G\@qJonAl;40>p_@ip0LlsoTPKrEV.rk=-
%e_-4\?)7qqf.R>??OnhP_!HKXhg-5r8MX&KB0V\VKeKF#&"7#F/s^?t-Y9U]#_$hcNA/KF,(l&Tobdt='QFRI7Zs[t2&_0VLpFZE
%Gmm'<l7l:*6`dMhe<+/GK<-\r0/`=*c4J#.aniL]1D'_Y)#N9VRcH`f1CsqbTIpi<k_#dYN[5]Ab7-&.GjC68L7Wj_[4uLtpfcH9
%F+*aJg3"1XO077=C#:T(HZe;hij%jSdh!*iLfP'6m0^"L2HffW.?6nZofZf49YOR;2jT:fl)=:a@^I7+WW[09Rn:OWW.:mLca6bZ
%?:,Efpm)-3R1XL4P2`U+5Z)XZX+tQ_d_>H(D$GpNV"!g>^4=ui"=HKQU9nh\7Q<F$;nNiE_STH6)S.N-b%N=aVi\A0?&O-AjY^)_
%57s!*3md1XYO<-d]`G%H,+!"7!0+;9eH$r2A#e$4V,Fd[pa"=/ZZrA\*:YUaCV<hJkMd6tIK@RF/GLeq3Oeo`W/!(RnFg0+P&du1
%5F;/bTPl5R<5nK'S[o1"JDq=hn6"\Ce(Bs?\/L,7;[AI5V*8J6f'ugZZF!a>GWm]D^.2hI/%0cO/bHN2:.I&;!2o9$=qLp09[*(>
%N:6*K)&9#/MIfkRUU.oPP`&#Jla3[<<G8jMDme*>9"BXraO3nm*,c[_q-XEe*Yd6ah-n](Y,cdN63P8"[?N.2XJ+i(h@9WS>G)I+
%7;(nd,mOf-9K31-YS,qX5)DMj!fa63QQ'NVTQ,M%HS$u*CVCt<1HRKn?=F7p%[I/Ng5:OoCo,5.l;Z0P.8;,>+WK%=jZ@]==?;)(
%Tr\gm9?i%r<"_'4D[Q`UYiqkE*]K7X"[>G1KFJAGC>#V.U\7kPq-7_g`Q62R/#Wc=R%jAFW_bE[deI"Q%qUf90$`ete3#_FI6l+8
%f"aLuqXjI%\.3n4COEud1`!t0$U\B/r]\h/&u-V<Z&bo&QXsPS$r;Dn!fATd*E^r=DF$aFeUu3)!.;)rR/r&s;H,;aKI!q</AkE&
%#5p2#H^LW_Wp2imKY#[SS(qM";QoA?)a1^F.jh1I0P#]=&t11V8d_`.Q,i'pX(([p3VdS24q>if"$XF(HpE2,bof<Loh0"OiDZg+
%L*]-EKCPh2Re02uq*M7@%OuTqStY2nA416PIZg9W<kF<rCp!990-Q4ESUtp>?opm3,r7<bD!PS4qlEW7Z%$tlND@1=<='Ck9[C?;
%aF1]gcsh>q8P5rmcY4JI>[tJAMkS1"d<VD*^QE!sGc==2QMtX\7I0DJrb@Qr<poV_M4F\!%/%LK(I+NUiQc'/b@KR*%Q3:Z2Q7gc
%oX:?,g0qPF%cZVm3&dbmSIVBYS)d)JN[8!q!IIPm<&&0S(H+ZQCu_J8nrB*'7OHXX\$c6VZ"?Y68n%,ZeRt1#^A4[F\A>r40b8X.
%]PrqL^MF,LNm=E5k`YQIkOD9-_gH_G0AYu5Hd"sH^]#t:U[[lQ^]+#uDgk7N=,_pjq!`o.&0^,DHu.du%Ya5(e$%';E+?rHO,]1<
%*opBb2;`S0?M<73G9Km&#TKXWf+F]g9@2Pb3kk@0k'-jnj2_2nbFc=(?TrqOqsV;sg].)]O!"DNTDnW7O#MRcji`^drqjJ-YQ*Rr
%r9f&^r:n&,mSA?1nX'8gQd,!l0/rpYhK:dWq5:uVr:n$UqTHp?^\cL[rTTY5s+qQJa,dS*nLm+Tr:oO>^]3rd&+S]#FShChrV`m<
%il?QHbFa:[lOX$YVk;R6F\aFUjNI!:TYeZis!@G1]9L(qo_j]_j\u2W?[M)<F?]B`$6HqgRl=GB?unKaa;VXDoEoF6LZe[2dT*`:
%&u46h>JV^mV>dPf>NcK)."p?\E>F.;`o/p&OI/YRSbAqq8Li4caj.lTo'NO+:=")p>>JeI9`CoNZ,,k:A>.esTEtGc3]t0;.9eoi
%EH\,aLh)"BCL^_Nm]Duu?VU?^H,#^S%bf1B):NGT%=s;^7,-Ub&8cDemi(\*9$**ggZIh7[EfTfVJQf\W#aog[IG^#;4\X\7A);B
%#F'+QOrdp=53rs3^k*3.b(:?/k287]XCDZ%:^>R[0^H0b^Tj$Z:+32L15pnNAAW*^5(m4I7#SG.E38JIE99s!mG5*MHq2qbpD8gd
%J'46EUXAeM8+(lfrbjtk<-sZ\/slHmA0sMVk(JW'T+dqH@We)1)_f^g<IPPHW?6(A6Wp@$&C=T9//\*NiOE!YI4ih1(>MRqh9O);
%NNSudp=Lkc=E+ZaF69M`)V-0A&Vb$5DB]%qFu(tX]"Vo-R'<DC^q\,_h[S,?aPbD<3X&r"@'!KPg]R?V#KCL3L$:dg\PIB`/$jh\
%p:8T!!iZ;ng?(=5"?S=`53]Zt383KSK9P^3c.S67Sehnb0[F,<^!Sl0O1"GnVWDAtYD?(ieL&?`%#sjfa\Z$0\\pQ:TE^&#fR5nj
%n:8@D"bXQR@T9]Zp.3-m&s#aW_hb(ji;o*koP4nTOF&,BaV#X!WhKVbX2@Tbi[:gVnQ*He1*Cq8&u;cljJW&.!\$DjTp7Wg'jfm<
%)3E]1]IVOmY3F]#1kK/%4EJ14T]J3rZNosc^m2ClSIp,=@7W[>2c*lV]UnRAh)tS.F[[^p_O-IMPkEnAO<mJ+AqZI&6C(J2AAQNW
%O<kSrcB.67$kHLPJh>`'=B!ST3dl8,!:2Vc8"AqId!2d%>'NLFQ"ihhPH@rYSh@`=]5gifZI5f6:L^>mrIu#A+*"I%;(/46]OBK$
%>_#iKC_>eI3%83'F`bT8%klDfZPROe.X6qI?tf4'#]r>^pDR21r_liYBZZ+mB0d^T'=AZT`"!5%i;R>n`6&9m]j't?)amd)SB!hr
%,</%G9NIP:;(PVd%qDu&aKi&-.saO[fTJ*I^8=^T2/V6:/@ZS%f`%Oq<2=[qoYH@+TDcZXVNP>\&;Ymq[\ubg!\OkQ_GIW#??Z#W
%"&@%kP]POJE=epb[Zbd_X5Esi]58JcXn">KNT3t<2>po"r)QpRKdXD/b[pSJZPR6bL5g/;UHr5n[gis25j[n0\Ca7QWDpcE5`hTd
%j`F=7g4Q!mTfK`7j_k>S=`pcggJQT:IK9Ffm&=f6"Y`o(-I-]>+W=.[H?]+pPhDaa6!iOg`%1F+V<2*-=t6r7#G'KX!l;/MV:h#?
%"Im#1fjq8j(p#&0BN.G/dkHLZ;?MoqT8'@-m/t84k2/UP*V[:4iSr9Q@&`.U`Q<hrq;:6(^&Ku]qXNa@J,7?T*sp%q5c+B3'-D>M
%,71`H)dN1"-D+",Wsq&^h?$]`'JhnIlq;N0mEd_5Z-IY\or'FqrTU<^_NC]^Qn1;#6^bC=J<gZ?=gFiL/&jH=5%QT>F`*R.%>!s`
%V"E3p_+BU_)$][TCVO-fOAg(iT))']m?V@TKuRAi3SiLmqk[KQ2dG`g@PQLf?GU+Gjj/E^>S+nK`p=EMK4QA&1o(Z,EfcE).rWV.
%R^#^Vr?9f>SS_8o3W62\c6<@;7Y]`_Rif<9(k^YB(*Bo6s2EjTlWJ(JI:#T8G$JB8Blhqaj+iS'GKVRfk_%f)cM>I]GP3`?cg;1b
%n/kCiSUT1Xj0m"%6GQ_T3ggB=<*n20rB>X7Od%G(b6_KsBF['Kh,(pQp;3RE,7lp&#q(YV9SQ#_&nOHTfa35_o3.FPe>@r^>_9[o
%d&+#X>0s/i1=?.?!=5sd@[[=:6sM\+01[%TSQ\P48B/I'4VBOibfN;!Y0`F.F.c*a2$ZFPIF"KEo(P^9ER:J24^Ih'YE\H]mZFYo
%"C(7HhrR('HXX'(K[BG7'tSbc]'Ti3j)oNT^E+j!&\YoJAo(kDh%2:SL<R/"N.DO_cr*9L&`O)C(:npRDQ<pqi!%8^c,/'l&VOH>
%NsL.:N!7oR4:_7]`A8@7_G2qp"LYgQh!J#KHJqYqmh/GCW$)b6OJi[6NY1>b1_J(g.'nPA=fV=88agGA@mEE?e\_)aUhr4*[8f=T
%-e3/FFg^Q:><=]9'LCIXBfu\Ki1u23U]nI@]$8%=P:LeMm.K*<ES&lXrH(<[!HI#!b4pj3.nF48P[hQY'#Aa);jFI-E_+;*o%<^%
%c&L]0OemT73]OY%U2YkgetH+7iWPI`68M7sZZG#u6W$=lD()inBrnL=o'PSu(@X^Pclagc\Xcig37b?5!_Z-!rl%4:M9*ad+o.g7
%L)HEZ+,LYfSXr@Fc7lg5$RG80m84n\hYJ!t@]*`QOA]Rkd#8I16h>Jq3(nE%Z%^;/\i>djHD;I;p#YE/k4/-3$e?D,omI[&PqD#L
%pBMZ!!6O[C#QBT5%+VB/D]n::d.[&T`t]!5."3%eW;5.c,Aso`jq\%SFX\LED7te*(@YaRgkpeN$R$+tK`'Fg3ePBPHeF[i%Ek3Y
%/+%t67!^J"OWIjQc0U8=r^#1jT-Zd,;IQ[h:fXchM*Ln,UP[(Z6Cf:$$XGK_JTPdaU/7+F(Rh,&K$-EBj2"0e)\<SDP]J1-I<&nB
%kU[Tp?"FfiSYZG#%d\LS9Y,c3p1/%@=/G2QA<=lA4$s\&EhRSN.AKd4->"!;dA8E["fb!;D;c,g=`=nO954fZ#b4G7;-)tV\ie\`
%>Y+G\@!9LOkped(8([IMN:3Xhp+'=UTd.WscnK!&]p87@<VPp^-*Bbn@K[&S:r"-0KNK^5fTWA4e^S)o"HF7,04Kgkk&LtR77HYJ
%>>-l91slr0N.6&%6,QcfGe!ApCM_^pS_mOBbW;uc5tfkFMon7I?4Lq&G?C*+mntKj3p+KG]=42q?IcV5P00(#-WqA[Xjia)3+p`U
%NFMA[h?.kj$1QZW;MM;U-9:5@Y-tH95fqeKd^5M_[[A<c,bW#Q*.&]'T*f\J[gRq\B(4>1rN97eMp=AQMjhWCZA(Uma_n@Nh_')n
%\p^r/1oh3b8FPlo<8`.M[_"3dp[?nOW26^c0B3;KH?7Z#MlUC4>'n!]nalkNoT]q!m4ldW1<LIMOX'eqQ9E=<+l/ZKio6lb02I@c
%Du@]%8+UmehLBeIG%@OR2hDa=nlIBY[ho=!E;'2X2\YXE5gb@!S$Gh0g.J/Q6saJl!A4Mk9!EiE1/11B0VJD`96d)E8g"BPo/7`T
%<Z,[>Aq-rd/drdOObkLu.G[T]':pFf(=X.s5W"[`H6X9)n1*-XA_"!DD1aVFkCJ@r=-9IZ.>h!i"q#16b7/YgTdjV4MM`&[hJeBU
%Bfq"@1`HRt1[9k2YX7sd=KU1kae2p$#$\,tZUcJ`#a+FiS*WaIZ`GT+Ur/+WYl\+c"hG1(@jr=o-(cM7[1nhBG^=;rT"SY2U;?0>
%,/;o_q>0=]$'12;IC)<C#.PcbCbin\Zs\$L86M5!F\5hl!s[P3.TjOs*8Ct,L(f@s$/++2gK#nh&0#Ht1?a@@-tJ44TnjZHV]DG^
%`d;&-o)Pj\NKA``:k^de7Ibi8gW"'-d*fdi6>Nsig_Ztc"O)9lA#_R#i`QUMQ1'S[(`@pr)NHL>:0\Kg`X+s!L'0Nt?@3P0@[eRB
%#T&2s[:HO=dK,&Ag8u\n5g3-iqXX>/$/Sn(asot_q!fZEHhP>F6H=J=\M?=tUW.J-j85j]&H[q#75YPO`!SZdVc?0$1a"XWO.KG(
%cr[.37Y8TeQc2Qq9i/B"#rn#MRi9aJ$q8N*OL_lVKjnOG:0-R#>%fkC"jXrajjQAN(_V@6BqNHU7Zf"]*M$Kq/lsA9P%G^I9PXl7
%$]nRkF2Bj$&b(u_h)"7U?IW<YD55NVpHL@r4cPMV:;quj9Z?kB!/V<@5Y?e37qRd?/2'me,4D94pA:*_g)%*:rtR1:+i0uL"I<1K
%aAQc^+bEBes8*Q_-0?:Q;]HJp7RV:^8X>]>2`DH$5%5bucJIMJ/lL%_.m`)QX6*e%.\7?7a=&4,H,^0!;9t,e2LFp2$"(`AGjAWs
%+^U[teg;AM"p.RrYKS)[]jCSFXfLN`ICd2.5GZg?>^LCo<qXlVA,@3$(XJA6!$sT@e@[#d0iAYl(tJ.,Ej=JT.eZ6dn>\)N)NBIs
%r;[:o8O.eWPB<!bCM9s&i'i&'s"4IAEIKu31qm`[Q3?@PY'o<CGrduK*F4U2C4VL5\3]!rB9*H_b&!3cM!!*VSE[aYlWX*m#9k1E
%oR=BJP]JV>*i[RN>dA2\^,"/0BRe5K.1mt6#&=psK(u;pQut`l12_GQ5!>n'L)O#@`Jt!N$^*eSh&UKrkqQ284N<.C?gTq<`WA:r
%C*f+J*#R5?X3f%A\/``L)`5qSZ%-kdG!"5nXNUQ@d8M)7::=gQR9&Y7iS!X9hrU2^p>=:KjTJ'^9-f`gTn>S=7,tcZ3R4m)4)/p>
%=tUD]jQD=OM%G"^EEt?3.u)!6c5LABEa5E)OR-MafY[>;&RAK@&D947'i&uL*R#tYm-g<NBfg_W,\2Kt1_ODVIWW#b\b9el'RDFV
%NS$D@)kbQ)dS6lclK15nh7Zn%]Mo#]]4Pc&"*9#8TN9f-pISSrPr))Cjl)9d"5]3b++D;\=_eruWkGN5[gW2T]i+5om^kN9b9,<=
%:<-b0;)aVZ*Qu4k0^O27mWOr9K10;#U(P!Dr6P225>]L;p<9uVP:l-4nIXSU;#Rd$B>fj,^H*H.]U?_LK*/-WEc_$,Mu8Gsoh0jc
%Hd1>HhCfs-(S>/d97d-;*lECr@JUt\6Y6+A.+<g7@:/YO:"&[Ko%XamqHp'nItBS1eb,5IKIcT#DEEb0'Q[^j$V@<!h2Hp<Li0dE
%9iBnCQXb0F>Jb%h+cAmVoN;n2@_6#dE5qf).Xk\RGo9lf]\9/.N8t[6HkVin1"co(6JFK4`)bH&^P0WO@Je-amT>WS/Mq;$)"3Q4
%-po,c#n'uB4?<H$\.,PU(+i3eHd%H+fh0>[iYA0s$digf[(NBq@p!H3]:qqhB07Ci&IXoW=X?iH%]fQN^=Gs46kA[$Z/gWSQ(*G+
%$(5XaA0d'<(,P5.G"_qkmNq",!HTg#o9sRGE(VE;dhXT8@oZTe&S"HR,%$:S8`m(-A37qQb,^9eRO^DQ%^SQ/l2I$<'Ar*qPY]C9
%fED-Wc;C[kV!]YmGC;$B:K:s]C^7qdbVo>lZ=F3<0;c%4fH$P`L!&$aaf/KTTo7-Ni8#kWs8VGV>E:%2G+IM"pcm9'*kDaBIdro_
%+q2?k_lt]o1`A'()Hn9!i=P@</bQ=Armj7FR?^d3l"!jo22N/QE_UXf>VjsaQaPG^>8,%PcQ'1h9nOHD-6/;42+nJ4d6K!jUPi^5
%M@*-_7_m7'?ijN4>rm],^dG@@%HheZggea)]&eM<'/p-9oe@(G$[49A'[$mD=`*m0Zc'/YNBbA^%hhEs\Q^PTZIuje;9=cBJki_p
%R)".dr4K`@'`A`2JVs8"koWm6ES$b4M#l("FPkPHB?s_0JtknRd[klFfgdSjMRdu&[NEcU4*F&8IFrK5(+WMuWik[f*l;ba;<o_H
%[G8X<1"$G3@5P*@Z&GC+2Ilf>`=t:46/LIIjg`:Q?E;/d\=s<qaA0rZjD#^%;jBLJmJ(<pU#]rspS3Z%A=,KqAB4s"0%6,:`Y,CI
%=L/3FaZilRToCZ/FYS<%[1e89fkXo$AaFr2Z"9e0aGI``I7tt";MSp<m'X`'C+_4E\X$AjD?8uW[Mj1DHIaP0LuONpN28-2R)r1%
%3OdQgC(uK0"u2=jgWFInRMU=LXYigOV*r(=/LYeo\n8hn2Uc-/A_;6&ib'fKN<87G7,<Z`YnlJ&OZ&(X$?hFDM@*7speXVra?,c:
%HQZ.DU/@K!)/7pX%-Sk`E`[1kVVpbFkN&D.1`VrK4cA.-[mD-#mqoVGr"WJe,V?LX,lRN._ajU]L[RGK!.FqCMt]fL_4-c47h:n#
%W)-"nB)ak]mDg4R_r-\8EF>D@Z><A.gMAL'Xu^d*QpQ?<=]'6\peHH#*(k%N)biOOe6.LU2*u!:K5lG5SOQ$(@%O6pr9TcfQ9jKC
%VB?;";Uk2)VF9-c@,2GE6<&+I(cp7WqpOhaqU(ZbE..GQ:+jU`F?7UbqrijHFb<HtR:1XtXL?>AMXQ6:$=0d@0U:k_H\iJaULg->
%CWf:=+;fka\gOn-.Ip5RI"dVs;o.s-C@JXV]cSr+#MmV*-!q1gN5^=kTnVajnaqO;QOiIECq[f"Y@Hn="'H.FI<fAB>-L`?\Y]'D
%"GNU&qQ7)d#/aD;e(9_IVC+*f"^n\^**=X:Ln[?n5f?pSYrZY0cPc]^6X(jM*%22snUQ.TUIlVlKRX=N@>$=I$VmOi+5nI8aaK)e
%"H-2_9@;)hZ_A>$$5D*[i"3/q+EIs7kLRhn8",GP@4[^>AXbuAM?b`!0%bGT?LHT][N=7WlYu,)8%&P!#=ojXp#7**04c(:Zt%8n
%?n&V[3SU"\>.e2M%2#F)$s/\OKiM50AC5?h>>,?bUr0[r\(W1q+CI8BZnraucSiTA?M!"M<_8(&'t<X,K3V>@eN3'27:.o7FFBjh
%cU#E5ddjcSD:@O_T!n(M\*`VM.P@pu>,"F`!ht@J\e6*@L>?jQN@<mqgP!h=N1gRnJp;bA(,Wa@h'6"Ya=pm6qJU]f(/#hh[3':'
%GZ_#nN8a\5Pgr2D3UQ+=l26X@Xo#*bHeZjFnJ,AYGJ?BciC3$5gZ^'tRHha9g:!U/rS`>7B3VD$ifB^/UqtP&4X3F9W$\&Vdb8a3
%PkNFomf'r0e#'I(Si6$"[dWU*!LFUKooo4RFTkqfNUq_tg4oS4YigmoMiJSQ1^?3"JXD/<#[.\n\YV]^OUCgs.ai5K_99,Do\T%)
%OsM8PF([p$'Z8"]$:r6NYf9hI2XRYMSiS7jU8kLRqB.jtH/rLS$Pf*cdH,;UY;1)/"YS$,Y+f3bC)]_g9&EMBOB$&0R&hnlEd$(\
%pkF:N=HfQcBlQl?4&u(8;EsbU4oG*@_bWCp:ZZuoEurjJ/hKF+5QbYR[NQ^9B*FoCX(nl(DA5BTSU*8n:"$U[n`[]p,FQ2%b-\Wa
%mFP=gdc-&<2Ee/(=e6NM3IMHEAH6Z+gV2ds;,:Eje(aV?\qh_8HhBJn"dI'R,iQ.,/RMS[EI94d??Fe!e8DD;NQ*5T^!HDtU=8D(
%ngLF.-K@7b0@Z?UX+4^KQV9?O0h]^'afF(`5Wm\J578HVXO=Fi1GUFt51Z:u1:l5A7u<O7C=\n\=X,5\/oGTLNi8M)c`7j!YPqfI
%@MkU*VSS]F.S7btkroeqdc+#R&;R>c%%DFnmjT=no"LQ8D+kDW\2(_0`X?6m?7.7ORfR)b8clZ6i/H`<#gK(i3Xs>_Pu2ecrI3HI
%O[d>O/he+*1_bi@RWle;@JZLnh#Ok-nJb/nba#OAn93&cFH)mG8Tg@VO3i@'n;WpY\[GUp>BUI<>#BcAdPF`FgU2Lj?'@fN]"@l'
%m.9n2INqpjPjL@V8h#.9pi,kZO1b%KZk_*<%C.=RJZrB\]d>ogMEMhc&:NE`"T#g=)Wdq2UcgO[r>e@4;3CtQ8Gp(O\g;1Fh6dQ_
%EG9J*neL:TJ]?:+ekth5``4l$VYF9M[I$n5)2?DXg%\H$PCUXcKo7hA2l&]./lU=HlQ#1]d)ab'9%,b63n;*YKoE"`+sJ=pNXJa-
%!`<gQJ$$gEak*[6=kF-h6eXXB12Ve`juuBKWkeGQ0!O3OV#iq19+<guQ;'f$I:nugFH*&B7mrD'/U^sc!u:e-H7)5%je`3aj*5Fm
%+Risu>mapj8/pL/6[e^qUV75#Dm@^%!;YZQT_/<G"-A#iD?LfDA]>?.gp(Jh)0a&A#'%9/I?$sphGK;<;ZP`]7W`l@1+]CH<h>in
%h?4b)('kgU#1hj6Bq&YK%'(N$69e2O2C5je'T3>%TTLU<SF/)0);M7N1?-nGcPi^85e%t;U8_:k,:-]+-Q&/0alW2%2%SGZZUK2I
%*Y(U79(T9YR!"jQ7E-_c0[RrbGE]J5P#kr5_M+^8I.g8f,iC7>#a+h;8c2IVFXa%/GrP+o,]3uNg?_R'%d6ikgpRr5,,Ft,9KsH0
%LabXd)J.@F4@.Ss;BULSAm8G+T!W0dPhltB'u^Y\\@e[HQ<GnaFE+_?ep5sce9RA0b84.>1lY,7Sckc8"fdU:Z#<QG98;h#^qH@W
%@6QZSQGC5^(5/nA'\f37WkrQ$eW72JD![SCAN[\T/D0QLE-^0f[cPmK[uI:!gNU&rqo&_Fqfk:b,5F5N*e,9+jr.JNAmkT-Vj5<H
%.UD2EeH`NcZ11Bn<L)luPCiVA%=@PJ+ju:W\aPP5LK-+dNk9.S=P:cO24]6DhT^XSf\,[fS'I%@g:Ep7Bm9Gc4MBUPn+j_<j6,b9
%8C-#O"7qN8cO6aWcB"PuLO_H=T9hi9OjM26H!/K.B7'9`eu"Ag[=@]<E;&+Y2Otl_m!3FqGkSf$<BRhEX.Rt01k/g3^mN94DYm`6
%LD;+a&l2_;3[uX,[3.2;hZ'qhj2&A;k\jZ;rUb^3^:VH?O2"uTEOS[A>ngiu':_6'-D%X,I!>Ib8&mc04e:N>]<f\j]\]]]f;Csh
%cdG]&b<1.3hk&#+[37:bcF:A-25PA_QDJCqKPOLJ\ZDE?7CYgN@&MhS+/[?>l*tMmJ![W,k=6W$*tRZ-kI]J-4Z`#FolPf_mS9*g
%H+d;:m]YNg).21>H0"Vqd`ib+:Y8l'&.6T-E&*D#?H0X5?l#I+QFaT-<O%gd'VkO019S0"*p"%W`R5d*&So<>FLCNFBUbNhb-^c$
%c:2OF="O]"_FGe5e6&PaMTaqX"EI0O7Z1(L=ubKkV*KRMY-BH%R5u1kSG&.ec';/e$B_$^<*/M4D6_uooRZP5Ahc^]QHbaOA@TYU
%W?o(_7R+&1:j`NYi>7M)#-nXMU`b7KI3aDuOI),9AT9)g\/"(leeCrD>dpD*cBMtB-eD@];l&WFDMr><2i]'=%HpQdMlt!'"/1:\
%1,GdG9!o='7<>BO%^fJ+ZK0AIK=U"NCUUPrajVJ:V-;sDki@XqKOW1U,)QVCO28Oah-YsrT,i'IF#qW*fLhM-<[Yl8_gY5T7QGK"
%HcEF]@SnE7^Vd>V%c9GDj1MC(3Gu0]7)>&d4o.]>Ol2MsO\eNQUcuDl?!FXg;C#g[Nl"*5U^3W`Q&gi*>o$0?4;-n7"A$[%.9bMt
%[LEY)`;6Z[,SG@H[)gXNCc,bY!OXVjn(L+F#iLjr'qeWsnR-a]Pu]+S9Zba_5s$REM;Q#d-qUXD7#gkZgbu%Q3Z1'';\lK["qaK`
%fO$Gl&trKd?<)C<A/TR,ktrp25pf/[fB=+Bl,%K(lNi=eY"$VP:09<R5omg&s#+C!c6?L`Sm"&D-4eA$&Tt-$"=uP6A[*2S(6Tl5
%P>4li=*EbJ8Xj5jP$^>>/3dO&J`]-h!/ltq":t]g#W26nWO?[C>BB/Q4ai4iJUii6q_'\U3$$S`]`u_s+61DWV=>6$@BstV#%W`C
%3^VEa-qhqJgkWjlW)NSN!5G84/OZ]d@bGNe>0D^)Zi5X_jlX7u>qZgc5g7Ct)k_#o5h#dHPGl?^TCKO+J)&YX69!RXgK,Qqc`mm!
%bL!<RSnTVkI7lq;?-<e12Q02f^6E!/LP'i0BSM[qAIo-/!2h+pTVA$Gl*=k/aIu>5)C-X--")7iI5P^%a0M\A;YJXKcL+#K1J:^o
%+cB('OI(DJcrssXQ-m6IK7cF=7_qKnJ]kLSWe$,*P):li4p0h[8W#./[_<d4!pU),:H8&OEKL"I?Dp&e+N<?[S<'Q<bP"rHSV*V1
%,*c^k\Iq2u`9Y!1IZNgZ*l!'qc<l?h\(J_73Zd(."!,.BLVO_UAJ<lW9LALVDr3-Q%gbX,)^?!m$,LI4`'X'?^+"oNjZ\g)N>>iS
%Y_9-+B6$\.Lt-[m[7/tHMcP0#QpKa(&WV9HVbLgEgc(hMD;X#q!LMD`D1-ANM6ni>XiQ=_1^MM-2A<+9dmbL!nZbkHW*C-TgS>Qn
%[2[E"g'ZN@phY:E=&tp`qa&gLI1c4/,\Ml!@qs74<dWQNC")l4pT:?Wg\5m&KI<+4m@BhUd)p]l[aNi)`A3>MjH]4okH@:MeGn`t
%+D%!;?3s8no#3+Fear;]iEIp@M="fNhuCEoe$&f<R&>r@\Xd&`m/eoDoBHSR7K'tS!\L,ng+9QcDk6h=AVc>q9"1o0Dar(Z2G*#/
%O#G[PV:Y+BfX?fkp;IC$I!5[!"%,5Lj)1>-f'ap.hsTi`eMbOLo<c,He)TKV>>HWVmI'<r0!G$78+lP'Fm#Yh\(B$`^tU_\5b]H7
%=&/,llJX_MBYYn;`]Rg86;V07'f3p'1n6LbEYKCgZ`tlX^o;bkHe"QJafGgOD8U*aX&7$-)jN$P(Y==69m*er@6T<!8"H*D..doU
%6@\AJPo*dfSmGKjE[k&94A-H)MPlDa:R^ok%&<.@L-B90eEQY8W$Br\>"M.T=P>@,fnbDg\^';8Lo#0P'PJb3R9+C+2n^`0>:DRt
%\I<94#PO8QC4Fh($4bl\KHLss4.RJ*r2_')-P,>hinqC;c%1Y*#M&L.N8_hp?:A"(4C&Ci<lQ6Hi^PX1a07//a"C7D':<&M#hA*,
%H=h9VCVt_f>)+lk<ic\[ZWql9+r<sFd,=<7"ZnE]6,e*<EQ?D9$4r0f-0HgXA-N77f-EmU-SK(^0nt\%7Um-%+hFUP,:%4>Ol)XY
%S9&kP#Bec91E]=l&B^[.P!e/DgL;nKY$n2-dJX,o1(c#DGh@JAl6L;f5?\d_EuJ3@K_>h;`,]QHUu_qIa')q'S7ih"VAZGH8\[X(
%$4/k'>q$dui[F&=NE)sT(9T*WN-3NMeSu=TYSJ%E&i]G.(mj%0>1_h\/)*"O0tJ[><+Ij1n55NuYme^OH86$t2](<_Q^!i[?0Un.
%;.igG[R*RCpYr*Xooh%Y@+UX&B"1Ps>d(.L$c0(Z]U$FGO@h5WcJ>paI3GPCBTB6uaJAqB[4:?Sr=U$/Y#H,+bME4=bCqMkJMB<@
%c0DU^A^)EJ"(rNd4,5;9Bh#(/d8:UiggJkP0ZP[6b"#R!,[k[>Fq#M@D3TJVKGF@l"bO,2CS"l"]4^TKF]`dEA<[U`cQ+EVT[^"m
%E/Q_WMME=FaQH><HU%eDgXbS?drOoCBidITeBjHtCW:VV>+nP"TC%!+fr9^=LYXjOXH7=W8oa^c5\!*4dbEXP/WYq'D`sZJ^:1G,
%\@gNG.n)7A6)@+GN?[U,`imF3X2?(4pMBtGB?t\aa$/@5ip3$O3Gk#C:qSmEQ\D?GGg3k,6Z/A7<\2s;C?H\gdAYQbG'DY^G1b9`
%rUffsD3o3]SQF_00Aq#gaQ19grZf#<dGlU^D*<@Q'Q0FRZYuk0EGRK!e(2#Shp*8Y"/h2$Pr;l0W:ck5mGE,0g2qe^e(4KIp77a,
%i5q6jrN*_DnEW`09>gdKUj8@,N$9@4VlbE?`Fc@<X#GlASMjJ[DAW/>[T]WiqD+u)Td)MacAq0/r#nX<3M(ZADX3CqdV2d\:$9PZ
%D;A"U[("L1>[6R%%k2sM.n#:P^SnmF\OZH0r;IJ4^[g%BYIo,g]<<$_c#45:\\(V+g@+M&[n^J@]<lAr3?S.=q#sess88[Rd%YhG
%cuF[9`?3U`AMM^[7\E`!E0P\2O66qJ&E9AWfpOYK)n?&lcRc,gm.HbTY=9FN&6#noi-NoTT:AdI%%i1R[b&4`:rYn9QAgN!Vp'"'
%`&6:'18VOk5tnlJq2.r1:j8#+=5jDGbu.XQa[]uj7;[I3Qu=ZW_3X7T</sB.`QK\Vauq8ROk:@f-)B3B2V0;!qhd?[pgPq-7l,HU
%]p5FS$,s-APDJKBjM=&45$an<Lr!8=BTY9D(Q0LQ?U7>%mKh&O:#2LS%W?)7@:$NjFuVs;RS)qR!F_4:f[juFf52n1fTL+98'A3K
%_hXZn0F<SnoG?[oGE1aZ$b2o`@VA[NZoQLq5b$(eS"(ZcU`^\K:0`uu[F^gKb<c1^gkLWK1://s#A&(<(2r%hdWC-nl0Z!iPd]&2
%1<JXB3L4?m)N'ZdaXVWk0G3Bn'fq'#Z#c04UQTBDa_NEK(F<d7,N++iPNM,u3_F3Ma17qC=hp]/.2*C_o?`6)!h5*H]e59.#I#2`
%EWF;G!=PV*):5$`/ktfeg?:&V':b$4RW>Fe'ES(5,Mo_goB=37Kaqr[<.PoSE^&2<f%a7SRL!D%>FU4jkQ7&-%M"IJ9#06q1Q>]p
%=fnEMHJ!@W.[F)n<LPhFDDi\($k:#D+c)Ak^H9[-E2V4u'4ZR$KjhHG2**I"i7YQ[5!>I[m['BJ`o%/[!i!6YkOg`6DIk/I2H8+,
%#CHSMP#6+d)V94SJ$)/FH&HA0nF=E:"4%H>HYGV>XK("lku/qI="(/"]p]W&9`n+JB&O9.,Zj%s+"]AR(Et=CEpsLV;T&lhC%-8r
%qb@l@1>t>2))T.>ZKP!mGnL+t&t<Up54<i*)kn1Q($4qjgf5<;TR;NfDf\EGE<kjC(]]jhp#VTJ"`<M&2]]\W!8HsBDo.:Dn</\P
%PBS8!M:'IrLe+h,;^Z[0.-=f1:'N2#p5['-ilQbF":KkG-O"^RmM)4LEjdIc\"S]ALDp2BgcV(J)D./lj!i0WH,)li@a,E4I:&T0
%FeEc>Pn$VN5ijdfjblJBdHH[1DN(aje[4c.AQU_@&XO8sR90XA!0s;/rfW\P*FMi+frN)'TO8@l5nB83'%naja$S<t+g3:G;`2B\
%ffN]"U0'1+KWN@(+u=hI0Bt2^XQGGi]FIl#MUI&)#H%E*JVkG1VSrhC+DA5,"b'[H5Y?5P>fJ(/,b^A7qeDUUDI47)O6:Aq_9s,D
%)n_^u_]7_8:q8TsmZ><pAs@g5hZr*k,,-37G?NNC"*/hG@3ufdKj:/3]4Xn<Wh*>(a^WQs1^DC?dbk;>c`23>hV#l*9F2*r%#8Fd
%"Xi##@OBN-lcZPRW)lacr8^=8W?h<FVjO7gnM5=C;5TQ4AOBV@18]e4l"nOY%Co-d0kRpF+*5YdFD.dL(B<r1YDQ`YV[?`8YT1H!
%!6^9j0^,I.[aHSFk2j"5100MP?l;[^BM:lA=^Eo!\QRl`Tn#iA<GPjFU(Q?A=O'Zn]he]BUITsMW\)nZTc,ZhAJJtLCn)s2+jV\K
%(Co/TIk$2;m_s-b[b!gg;8k\kja`ZCKU+:SnH:TiK,QM=JGPniESD*a!Fr^`[bquins7<1'K@@\_@^TWb1g<75k]jtY/N,5DG>R:
%Rq5G*S7l.jb%"HZh-lem<-no0^S]/6pd,9oO[7e]CBX:OWEof\7j[m0Q315Q$WqcZilfG+1j^.4X^FP&),WY!_t"R$`h=GNK[n,A
%(&5RoD280HZA;,Fn6t6E!0N]EA9_U@.;HL<K&]]Tgh:M\bXXeZ=A+(Sirq(&NR6J,SH=fucIgS1b[0Jc-300r<eZr<8^?i>WfQnQ
%6C\D`L]*D:nC6P0BMGg-j-]+U&Rsu?[+/3,FAo>pZ.gfNIlMuF!4&dd!<2(g&t24bf)^u?]]dWH!$S>S>"j.GigPLK'XgCZZ]K^V
%l3]]io!)8>BRVntg9]50MP.UDTTgQ<6Mq1+(YsADjUH_\1eAp7j=jT2cF.5)F'?H59C?.'kB\/a*(Ali?4M4j-;Jl<b&L:''@gM<
%^&$43=RdbI7+6KP\5L_PDN(Dbb`OQEm`?/3-%SImTP12t1OR7D$[Jp@?$XTU.5,g8:3NAd\>3j.=q7C5/Z7R$;47,$qWtP%$_I)[
%%%eH)$4e\XM+*.e.0Y27/%s_0hLbOG[XgY6moj(]PaHV/$]WLsMdF6:etqFh7.ab#oC7fC(jL&,Y%iiZS#fm[HoQMD%YT2"eS@i&
%ZGDkYRF;p49a#'.?*<U4MUE<r?i!ZPRQNa+ktJ1]4:hhQJ`,mjM7+r[;f>C`P_?#eW'M:@29E36p+U+_GIdgDM_SD4<oEVkfgl8o
%Pf)j`Rjq8s0/7\*7E&/&dObe&<"&NO>2--P+'m`'d8mg"EqdHP7L'dDk%q1V;/1*1\AWM=9hG!'3C12E.:eQW"fDq*e<W?XDXj<p
%H(U\5pjc[#C/.p/#Q]!Dqra"1^4os*5O/>HXE+P1[^Q:Da<r+A1CYR]ZZ(]L?Fr>Kld4alGotsbJBMRp3\QW8;%e&,Z/df*NC-(Y
%^o3=k5,>i"iC'JXDJ<,C1oDLZiEJptX-mQbeECtIllYmhGgFHj;WF?sBdq5VX=7^2].G4?8(^^FfY:L3c6R5r/mK>j+gP'_m_`<^
%glGm*C)_fklW6cHq3Z9tJO$i;Lt*\IbI_5*aY)sh82cq%?3U%Qi3%q0FEqZY4a4ZDbN*QG'`RWTiS2BTh[Y$\V*2N5Hmj'1<.Mt8
%i@J.t;H]qG(K2TKR[p*baq^0n,oG?=%Q73G8X^EJih8jd_Cn:r#.cslIOJ-X@Zau]TSF]@VX?I+6`Y$&WYodbK]abgZ8qJr)X4XX
%l0E<ug"XMu@6!NQAU0\3@^H_PG^m8sphXc<@uJm;+f>?(Oe7P#)l2K/_L6+#G'S(?hE?(pY(O7=/B/df^'!B/?@M\2'e@3l6Pfqa
%o[*TE8C\Tt1pL+(`P]4@/UA<-T%S8L9P1B<D2SEcgda=RT&SB>$(0dB?Dht3UrnG;WJ,alK4oCF#"Z%(RQ`J[h^)o#AYQGl@e29+
%AGaOO]*Z_ei7KaTBTnE2?QtB&Jd-#>Z+*ms$>BOkBPM*"NE,o'3=!0)dpohJbFg1`AHV\fc<QWpels]=Io!lRrIJPcRXL`Wm00Lq
%=9A1C#J/:JC+a+%H]5ZW\5Xgg1s8\Zi`RC'23u)q9;<Vq;I,;%(u+!uD/i8h?@fS8((?pT1fi@M1d`'.I*>;EKF,(4.TYq/9'Q@1
%4\P7LX.+ro&5&1(&q$i,L4M"P;V[N5oHLqi.P4qCBl%F.]#8`g(RKPMjAh8XquKe&<*^)\.701[>,tb-c95tnJ-W*W>pX?p3ee1-
%=*LCCY\DJ%_tI_\;3SsQ(^K"4l*Y_oF.`m@+;*ckM=Ojj7$Xb4bqmUr.f$e9Ft_qgG"#X<'-4)$Xq!1!Of8-5l[s9*D>/QQ=86i^
%4l9NK+?*GM2uGW8j8b9C>F`Qp\sA;.iZu:l66/]!gRUqr.SaPJHg%?OX;X<[9u(I`atpNn#uQ92aYjbr-XW0?U_;pl!OcP>)CT%_
%*g6cU\KiO9?+f7[nC`,Q\o$]:4#9j!P@C=@m",A&I8^Nr0lrV`_&]V3lE5r(YON=n4M(%JJt6,IUjrFCpE,I/m(fV;a!t]h.n+@@
%1Gu<*O@9sG0XZKWTYc^mnAUA:/5O(lob_4KH\4^(pUI!8+6j\b$]D%OYfE<9\qC,eEo`P=P#pT^'3k`GU'3uc"EfA8Th@96X5VSQ
%K8r:#44D)o=Oj>amJJO3MGh]a20Zhi,XW_lG>Bm]\gl%NeuTB93Pa^p_'E_]s)-b%\k4c`>?YOQ_EbV-1M\Q,?,L?TUp[%3mjaU6
%E?c'P/m7\l\rYk&eV']n>61RRg%H+e4GBUfP.HBJ.)SI7A%<-lW@:nJE3Uf:&qtGM`CkPTTh4te/[r@s:HDBCLd!/"_`kfGX)Olj
%@^Yu`iQ0u"HJllZO]$?!<)rMn?0G+(IL-h%aDbt`oaT$8U"9_Gc.fS>pJ8=!S,HhHGX#Cdod3Bi87kFHlV+2YQFlN0me5,?g])+T
%#n-?fT@l8lGl@nPCJEt,[SYmn`Gq77%nN;KjtnK]T/Q]-Hm:(VQ#>CAgWs^uqsr(*nW\O2'=S5FWOss5L>2$p]9lC5Xe0SfTCl[;
%3Bq*$po2=5R4hhFe5H)[0:Z@+T>(?K&+BOY)FNd5br9Q@V[+H\jSKU_0m$ZMm/OG`_WZ2e%fZIk9^Ic<K%K2WSkg>u1?lI>5,Q2N
%c-krB;XCP2^>OEem30b6s5EqRs7YcNGr?c$^OQ"8^\Rd,q9Ag2s7thBrqOCehgbFj"'bfc5Q98apqo&jj8JlTrJs2CnV:KOTA;DT
%f"^)?-X662rl^@PH2mknrV4S5pYYoHIt.ChcTebq]mi9$++O+VrVQ&5qPWe3GT5PTchG3Pr(gD5'gMW>07Wuo05pm:O$BbsopV9-
%ad6@)A2W+[\HW"B\+2I`^45Zkq9o<9[pJpGShBuMU<(ZtjrN$)@<:71G7E@pq>tL4kC<O#-A8<@\WdAXF)8Ymd^\Cdo,l7:f8S-q
%f@G?dcYe-;K?ju5@]5oXA3V:cGj6X28$S$N:,^)mJd#Rmed+)(%P]k\Z<eN2:s09n>IlL$ko>(t!-$*[[)?UEM/9RBYZ4pRB-pSA
%RIY7hKl<fa6a*7-8W%U4%be`#-7X4`*O8(`"`*YWII*0g-)H4%jsUhCTJ\M\-80I0!fU;9=-3.1h>WEr+7HI<++YW7?1`fSMlE!?
%?>/&)5F"4rLP6Ui4V529NgoA5R%+L7OrW*,`@A$JmA)DaLk+5=/A>0J^$Q,k1<`I\`b<=$,-0*f3o6[:7rW[u:.>OIgfM!A%@s+8
%c,>Ne>.BN(mdq6R't]71f`hBS_o%6?+-([2;9*qW.4fft@oO0E1N[#^579hZ7GZf,nMMH25#^1JBGbMO4V4^#s5S@Fg_=F1&BE:!
%E`'Z?ct8nH=uR/\'lO!^+GM5*Y!SU'=2@lW6-WXCZ3Fg1!HBcb$OAI@A74U;LV$gu&6"`."la'Q,]dFS;j2VkTkDG$$l`iOL3/[b
%F..P5L/TZ1rrrlr&CK&]*%\ZQ@KsV7`->W0fVST$(*_K&0N83'drZTSjMq>r@,=sbP7??AgDM3h2:>-A5ZFEmno(r_A&sF*2`74F
%l?CS2l72o*(0f#g+<H(.o`-^?=DIuV@U\`PT5\+G&kI1,3ruN'HhABi'?DB<@tVSD>qnB.7">KZlNCi/Ero>VBGjKQ>-R$`Kl]?G
%T`oN_.fPaeBH_]&Gjm8[auCs$K=2o&d?b1sWWQ'4ABQP$/`oIc9?.C#GMs"UV?XbTWZ#aa-+HB5Da:/[WLmG9'ceR8jq_1K"uSmY
%ks1]@@GYh2174e\b5r.O2'CV(0,'7<rb0TiF/4YYC\h#[5i8duUgZm36An#as39:=&B?KokpT_+\qcfg,^:pG#.6)8jWGfC_3en'
%*u\)ZBOJn(KN>+'6(h[kO;1FSS(V1$$:'\C@n8Cd$b!?L:Y0<d"Xf7lRDq0B6s!Q!:";#CS-1ZkSXmQ7.bqB-U*@J9`BJYj*<#BU
%:I"jLi<M]j:K?]O$T/e]`i#8Q=1$lAH9ibL):`C>KkL,Sch.;l"N<<<UYW1[/-g[r2FU4=+gdU&+)L*sm^CS(s'u#Vkq(!5><fOo
%A?Mq1rH6<?Q`]KtOq<FZ@n`]kI*GF)rk1a)T]PFTTQ;S5j'^k,>9M7$Ce9bCr%+cl48_#(K?]DB3fZ!Z\]ss6=>Sks^>*1.BdG&V
%#(M@SF6k8]$[!./p4A6;HG:QKl'o@aX`$!RD)a&Rfq&:TV/D8/mG5/Ds$#0@-uE@XOUS=cBb?5e*c*'X;J*]V0gZ=/U0(iBY.\E_
%;J>,f3qJl5>u""+STI76'sTA\NO[Vm>$/88`kE>3cD"ktp\:t:bG[n_h#09_?,==0WY)F^9O&jYB=SjZ0XaZ-4/dLO&1KV$2_e@T
%!7J[8Gf[r(a[>snfgg<nNqCGnj54n0o'jJY,lO>[Fua#u=&Cl]Q-sU`j``,W/[P\l&b8(_o8.1!6#MC=LUMRrP'&=s*L;phC.*k[
%&2YXU/V/t6FCoDhT3@W*Vj>hIMR"VT.b/?U'f`5R>V%4@a?CA'E%7]U4jp4UdlB&<bnY)TiT/l.&FNs41H>8U^^%;BF,bphgI0=Z
%Ab:hebDccZ&1TrT_-iOk7eEsa<g9)!To47OO?@<%XJled<6-,[,fpI$RjnTMKP4jrjQ42!8<r!F_e9k(AkQ0ehj0NqC#?X]JIjRV
%o_[Bpq3j$d[]N]H6pU1Z6X,ZLjAB4i\MmZW1:7")+RXfjYGEk:O<87Z.[k4)U'#:R8,#;jOd;b/f8a;Dfj_;+c2fjAAebC$8lV=7
%bkSG8s#Q>U![N.Cd+^@lPps?JY,.D786*s;nolsY6Y]J-dq"_W"#5jFRju6bgS)2$'%/8peA.Ya:!4Z*7C8uo?;/=jB.:YZ42\aj
%,mis03B<t:M>f-c6aoEiD6*lI8nVC-+lI$F(=mMD2a)J-o7dA)P?W>ZnD.Q1b^f0@J@u'Y^7*!eDlAns'%&]2/9Bt<'UMc-C$a)/
%D7**,18W<1_%/eS[Y_@.b?.?(m9=Qh'$]OF]>"3?c]5VSdW]a[d@TMCAEj7IV6f"FRiWSohg.?"I<T=jEI#6!(X#!6COO$.=au!3
%R>O4O=Le5Tn3<iNqNb5E1^h4Y]^=2W=0X<Cq6J4d5N4KcXo4mc;mH,pD;WuMPqem.P'+%56?ltN&ukW;)%c8j'Y2A7iX;&/Z1N1*
%D!3m+M'`s=,"5TTA+sFE!+iBY9B*"Xe>o"0imLB",V`Sr4W<eW[TZU,DHQ/qPsS>hAh;CB^fKm3gas(s]sDp52L>$s3K@O1$r!Pe
%0m_6*E.`86:?8kGFFf=b^T35MZdZ9XT5G@KW45tM1VJ6=JmH+P7#5(:f$\ooYc,6eZ%SCD`OYhaSb[:#9rM#12"3\,PF'#V</K?r
%%nru8,]d\=%!S`(%3m$\I0f4!#$-N8O>Ji/4r@2()f=9)^#<`P9ET#<bhKD6Ea$`jO#/uULo=8][$+*=s"%*XgKNdrdg,g<<DcH)
%`JW?(mlruuI/Nd0_o'mi4!L*E;)4%=]-'IuJT0pWbZ"-;-V-05:`%PiECL=R0EnYMN\-F9Vl3qc:i'J2UPNa5Pu;oA+<aZsYnK=P
%gEsI`\.d9<ACX^b3a.u:\:!5B!n^MeOOMb%<3'Y)b[Y(kST)&<=T$M,JBbJ"!7hf^mlLf!TScnl]`A9p1cNIF!oXH#.RgE^4+XJe
%]VV.[^1"T`=XF2<Hn\)qXb[/3>BLh:_4!IpaR/OW[Fp*+/JIohMl<61I1=)%j8ku3[5WlbJPtlQO+_4#*=dE?LnhJUmY%MnS`[PX
%E$:_5F,K^F_O"'m8f5:].N1!gT^[NLYG[<pV.>;u0%G@1=<3&6fLP;_/FuhtMm=&\2@O.E3j/lTRt7jg$T>A'Ku9#C-e&HTURm,B
%_[n<VC(ekunIQ>*&dVjDdd:?5Ys`[Apd%L]C/M%B+IIdU.a9iFh'qAD4$qUg+c3q.Zq!rHPX5C/]Lh7.NFY>QU>ZR:&Id(.'t..4
%[WTd_M`%LeItWPspI*2f^?p,;njL>A'*;E[^BNH0Ek6n\5'pY?X/5JnXJHg4*S>RDhlEcR8O/c%UL9_r7_+#t`2k_oK:'UD5^^='
%ErSCE]WQL[Hbh<0FF`PedcR\^FJ[QTl[T8@7$:R$i>dBd\BF&U9:%XTkEm.LKI'UN`$^,nUAb/;f^,[q6F"6u`]FnA4+nWf=g7:#
%77fGRP1e4Od?S$D6lTK06ka\9OR.o56#eEe;cXb[-0<BZ'Wi9qAXEk3:jZ?oA5lr+C::LG\F)1L*;**c3cf91F.2B?8et5>l'(l(
%/SI&=3m4[O2(9saP]#:CcQLt/>BXYQD,qcT.3WnqMr\PXO/Z!eaIHYKa4S^LY%ACD)>b:iRU9Cip%S>^"iV9/>)jC2fLV<0fIcK"
%p"=c79`c:2htne6=P2ND`H`3DA:*p6`g_Yno0jOGl\L_hk:Fd3g\n>ShtFCT@qYS=PBkhRk)3#PP141]P3f3FANQ7/0r/JpIn1+`
%2l/?ePq(n6iIaF\4"EQaVHcNAQ-_FLF&:Y(;9:S4/ke]WQlr^fqb*FZ.dXjWGmP%;M3h\$[+VgC3/bUV>c#SJ\T.h?)fAO[e%=u>
%:2/cefh=Q2=imA'-<8FX`[e'5;UA'BV,7e#[p^&1gI+?,@B?/%Mroi?W-3n:jGb2m\XKP4)H8Ne<2mc%07i6<P*[2W3bSOTYgaFF
%LsRG:`QaRTK2.m4Q_H110GEPL(D0X8!j3NMC8`&.mhW$.Pg/<U>bKlNe4dJBh_fpuV.L)d.uNZcDL9B?HcCJ6JhNboFb/Ya`OqY8
%>4p--=RQMJ?V>[.>aG'?<^:sm/)HEHJ46>7eEhmmXruM](`J-"&WaVD='')mMO?kS__pt#[4oPHjHN)e9=uonfY@Q`L/#n0K'5h,
%YL1k&M,RZe3-!.(dG4m<#ui>i2GDJ3$7WKIWE!%"-rgG6jM^&Vd.U$cq-m2*Zp%.C9AW>H1!-.&>1HMS7iaRS7\l,'D#lQ$hQ_Bc
%[%+6"eluTg_j6m_TndV.i7'aL:fF03UrC1lT%@o<9pJPdTlE,O+(Sd2!9H`-K3DjM6SW:9GLLf2I)nWn1.tN%(GS;`RlR[T(s&5O
%pDOI9V6Qcmb^smpW4g3X*mWfdrS=eEJh,7F(<Z[Zl3"*uY^S`8:oJOoN/51V=dIr5#15$<SWk^q^`[jBd<&,7>tqFRXL='KOF.Rr
%%,GnKQ/M;OJ_mClg%+h`MYH=G`L@KPDF63*;_IQj<_R-q9q'1'/V31*E=Bc-3qlQ0?"#=KS_CYBaNf02j+BAf5b.>Eqso?CI%7hC
%:<^)uW,nuFoAgrtiDF#[2/c?%onY%-R//9d'n:SH16J_+k:KBRKtcQhUp>]S9ptRI0W819U4u3_T!ANj)LWHE\_A$G-%.FK/]6Ca
%.mQ'YjOHVtcV!Cm:`3A6-[M"?$F50n-dtc$UUe*[9bbWa+*GY^M`Mo2+9mK75dhsR/Y6>9l5g,A3c%a/T0`B)C(LHR-WbY;'lACc
%'hs]s\Ta)S"(A.rG+cZH%G$%i:E_oa3!4sNK7d5o$t</i6se<!Y9R.4I.0'j.9f;FPkfR.T\A]91+:!X(-]UQ.M<G9Iqm@$pf96q
%"kE[R\fhmI?"OM$dUo5,Ys%0*aOUo`9"_2A4H6#Vh5?j[PKUZ=G(6NbpjtrXq5GRXQ".oF+1sXs"ci<%f\LrQkPE!BhL-&?X(r.Q
%.,.ZQp(MoFWFV$fg7Q[Mr/^MHqaoSr8Z\AW:'EYJ='W#+D*_%TJt2_CQ2cKU6;noYbZm=T<mX6NoG=<?1WdR,NL=@PVrRnQ'>Jj>
%*guGHW.4Nq:22W+GTtIqKG@Vj%`?dK6Oh\1N4WdVXm!1p:/"/S`&-i6gur`EN#En3;6L8#)mtM*2#93)Kc<!S$)`l\qnpG"%.XFg
%D?K8qYIrlS)3$4u`9`b-EJCJHW6#&2VSW1HWY6))0&]54]#DppL\`5_Jd@nqI,l>:Z<CF$5u^lOc\?9SjiTl5@ae&N<%1>*oN;G_
%T0/o"A&+R-=%/]CB&AV.nC?#(6^Q3H&A+aH\jSV!E'r72U5(ao3-GIk8a7bHQBIG&?&MWQB16Dg,*jgo2o)e53D]s8/bi:5ctT9L
%=EL5P:8@b-'SG&Q)dq7/7Kq)N`Y^SnE!X>^kmOW/h[9.Pr2))\km0qlH=gu1nHj2nVF]C%'pZEGkXQ'pNosN&JkV7[N^]/=df("V
%8PF=9'p2[VmZ*S@dj#aW:Kml/@Ojf9Pu#XC]3lO,&Da6WhGJX-(g<>U.-iWTT3,J[T-V_1eU-jPXo_@&j_b\j5C>S4o>&UP;s"It
%R#r4O\q)j#W&^B=1D1f\q)J9,%#j+Je5pG?:t(NR&=?:pW2fpf`N2pBoGG5F0G1VV!h73MhlQsRKsHFX7H/AubHrZ&67+AB$AUWp
%1^%s>\7lW2@:a"110C.!q)u<L/&C?prMVqC*'eQFbq!6=P'-Fm],#=!94!sj\trf]CT-Z^-6>%pUeROj1f81#E/?.<lmscIHOZkr
%YLTJ>X$@&pY!d42AUA/#,Z6_@iR-*"3Vt;8+T[OL?FL1hca!7.".EYb7R9tge&WE-o^QNs;nB>UmCH[U.Pc-a8gD1U]p_^ll/c5U
%3m-FIQ]<VnIM';`/LpHnMHlrH*gZB?>jCtEqLfYuluO&0T%5.92oO52W:bl?DE?e5IR\NoIr,.nSHXYXCOULiRJ?%pGF)Hbf:WAR
%]:9o.P56^s<8%gr2e(IjZSW[9A?+^R+8db1PphdhGn%ZL(1mq/quB\REoR%VQLurV)sU#cK067*elIV41$SmWU>bhtRHpXm4HadH
%%=.1`-$AB%(9+MMJcpu',.AtHS"6/^q'(aH^ld?H#3A4d.GK?'@So^;#.Y;7\8-%?k#c*Mbfr*-]1KPROJH,11`*'cm4=j./ugbi
%?pE-s>iHqE^tKNEI_%1UW2>^>R->::-MrRF#d.I^'oRF$PMI"$h^,KE)7\E12>1\Th6ToF.N1\b2d'5YrW=WnLXu23[_.p;;DnNU
%MC'Yag*QH0@,bYQ0WYI*c3=jQ*d[nq*Khr.$%f*+V;_OX-+P95l>0TllP:')9[JNJf5PA<>nCO:DYUo>\X@#NcS/Ho816dJa-]Y!
%3p;u/5Y>`hG!k61,+#q((aUa]BG\#1<GZH4[=d(:;/g!&F@c()oV+fu`9,qOq+1aHU4!oUq'J2$XJ3E+%fEqtJ"W_Fa.l3);^ure
%lEJ:rdBuB?`G@#j=YR>!8u7OK@3Bd8_#_VgE1u#d#ARdmgBe8"h0'R$*&ksH6Spq7R*c%RQVX_8be8Cif3rR0d?<!fYAcbplR>DR
%"iN!,UBG4Q&j=I0J^c4plk3B)=qQa&:b>-cqeRBC>3@;5rsB*mYE)#Z=f_CD+OG[)YJYN,8MukN@:IMr\cMk9_lQR`Rft_`-qB>"
%nkb&p#kM4>A"WtB.A?aJW:A;$T2_6lafUf(%'rFDRh&trZKI,7-'eg=\QJL3^<0!27<0[2P;\m%dm]d>;fR6Z7]@oKM:Jt$ftU/f
%Xo_Q7*DaXk:c&@]JULlO^\m/-YHCdBhk<XW?\mWN92EYX`i8%IX53/5J$4oX.>SN2QuaqNc!..hV\8i!;k,hAO(7H3cMlPtEBB0,
%n,1s9BCcj/::<d&5W,PE]3Af9]u&9m)J),MGs[HAEM>d`E+u4jQ0P\\Va?h+L0-ef`mp[,fIEQFL(KHD,k4QC%>+`i0%k*+W38U"
%LDnB,FfX\9CkZTGc3ou=7*rm@Y4aXC?C;G5:nU0AWiZ*3aA2rkJi9V8:6u:S5,P>q[:MScjMsYmNlpkDg.m;.al8;;FBb0V[B@=c
%X;-"`)8I+NF9n_NC9hoCg*(<2(9/9^&ucl]W9%I<U516s4>]/ka%2VE=E?`M;;\Ej3]4GS%r.o69c6ehfg&[?`U<+k;V:,^@$"O8
%<0M&oD0_FZHgN>jr@7EiaVgqP'4GX)9`e0I@gEg`5nYogJth,hd9"t3nst@.5VC.o]ACM@Y`t4fHA-=!=0*f[3H7iNR)Fi`OR3E'
%Cj@+jik%';?5W%/R8TO_8+Cri*0dLikS.cUQ7;)UlI%1KJ.K1Z*An#N4;kY_1;SBBd2^I?hC4MZiC;d?.ic+D%;g'2AU&b=Q7W^!
%I^j6lk':a@JHnj6E`50)9[2n4@o6YUdSM$O"^>lg-G))ikRK1S:reMYbISE+mAj+!iS7GRjHl>2&`]iHV21Clh:mdu#6AnGH\O3(
%X/]d6M\T9+G]*:RLQ5"I)e/Krp%>qQ3-!k,_?VrK.tpDl!cTel]4E+iT6N5-M(FAeEuIH\[W`d0F'<J+eR-UP*e7@K'tIrM2H'%s
%RMcSB/D=iWZ[Tt%Z,S&o7f-3/HLVUqhE?c<=,+pX=Y/Z!+!8f.Es0i[!<'b81a)nK%FEg\A68q"5Rf.O`<R/7"bM7E#R?ss_`PVf
%R0I1nK<X$03+)\s1<g(WL5'0_ac2bg</ZV]RP0nZ=Y;U8/me8e[:='p<XK28`duYgCFjZTnU+p'KS]mO2<aRI[^&oL"3M'U7Z-iH
%,e?6Kd=c"<GdpU@`mnmR<SS87(m!Dpdkem'"qIY<S8rh_`JLE_FYVI206X3\$Q@co+ismBe[%;FBh1gh>-Q:k0o$3Z4"cFdfYf$2
%$3Mcp06Nut-:#8SbAmRIj*Q7rHDXmtH[ZZLIQS255g1#t3L&0;(+/1jRTfNd\F,B2K^.r/<!DVBX\(&%:,4:)Zn/SKBgu)5Aqjlf
%KE64ld13h.+U:KDCbX2^'SE-*"3X4JcR'$-a)YRX9*79F#GSC]@F'`r9gE;_a:h-knF'tVaoHT.*qBQh_:$[q?jWGp:mn*L&&<Jq
%&,FB'nrJIudF*qY<k%,oF5^Dd7OqRirJ)kZYAnU;Sl%j$c,YA=T2L.^,aD\pTT*hQ:cUEM-LMq%"tF?YnM(>(<^C;TY'"f2Mr.eF
%MRQ]A4[AN;`NKH&(.M8_nKeAFM'6rB&7j]X%HQZ'js(dAA_X.Zc,ici'fB/fLh?HuhaT`Lfb*XMcrXe$SHpBmJ<cMD9._T,9*9AA
%'9$6O.1lh2-*ST@PMcFFKnu+#p>i5+G5?V?"EgS'l9m@,r+K)4lYt_^M8TPALraFST#H4O3a(:f@)T`X0e,Oj0Z$0,Q*N1;-=?qi
%(+(5!i7[jl,jmrF!^1>?0"@iH`I]mkT>/_6kfLLg$3:_^CViJ;I8!"@g%KT/K@BhMa1)#inF7:M!tM+hORd01AY<IsSG/ESLD3R[
%GHU)b3oBq@GLtb^5pWeKSYR+]WF!$KOcHdC3uZcm$XbH1=HW[/Wudgaj'ges5MT*altU;N>U::h]k_OLpZ[Fk+_bJH@W@u$e7n]<
%E,t'ZWVHBS=>Ii@P5R@(TR^_nnPh/#E,rb"4bKZ"2,iGP?!4aiJPfdS"pCZ?[LFMpTF/E`ipZ)>Z@iZMK\`ZqPM+nEakH-HnO0Tp
%e+L;>2o/k?!d]FrKY^j[T"3%:feM4mnJ295%n&Mkn`q=WkB;[1VlKYrbqZR^6Sk67An1^fAQiWO>3?iaL?-#0(ui`!/Eh?G=f\h#
%:]$!q@(K]nC-/'YU>lT]&,aD3h^=j/-nH9]UOPi-Et'*-#"*0c#pYo&l1qQJh)7!^TP5=&IQK@*?Ee)^@O&A74;Ntjl"/*XP?Orf
%'SG8A@XVH.=+n8'C=lXaW8#Mo[[q#sYP-k;<_3Dic=Leh?sfB?,&4P")U/;@5g>^0=Kq)Z,qX7S^(Ss`=G*41>qiBPB_usRb31G1
%U:t*GP70WJZp]PG.-J7B;_W49R\ZaPWGtES#[oJ,kf$%?6e0mlmb?BKbQG<'.eVHmc+SGPGLCtPa?3sdWq31;\Wh^7o"3k6$bdE>
%LlBZ42GL'hH!E5,C[[=lDNAp=Ek?_Of4>Hf((8I/>4L=)Y7qsdG3GopDgc:;")M^2Xk&KNMQfaPW=HU@bYDSG#XX6U]sc#Wq`Cbe
%H1k&r+N4jX/LB!WIGZ"!D/@$I`pXHkm$(]E@VLM3lC1,*6B0ru<$uDc.U1Ys4rJ-KTW<708lLl%[M3udd4m*r%UbcP>:fc(-4h(.
%!)h<OUno@26SnjVV0!#ek(^M(CV*eZ"<KkZA_>PO\l:L_@T#31aNVFRMinDYeak+10nhVZKpIJ6Uin*8,Ou80X;tQF;NuX&E&R@;
%`>)*O-Sk)FeS_u],[nTh&,>4Z?<?R>[oi&]T]jpm4>@[qTkS57jrKAWbgd<QC+;-mmR9f$hAV6H[@HRt4A3rB&J0m.1HQL(GP)LS
%^F@QLUA?>W?C)0,D&aND?F`'>8-1dsbAAYVRR#kId546%l$N.V>U%UIr7-?,*>+Gc3e/>HOA-&0>@X`_.*esSM:kPLG:c4@\l(Xp
%&@N`?Ju@_*f?uXR0H.u4#9`tHTiJEqdmpr1\e.nPk7j8CRO3R)[C<Hr3Oj].KJgA0]4[=BR2rs*%_6_@#>b^O^g3?P2D:Cra"2ZE
%^&%(po>m#K>#*E9h6ToRb#mmDX/lOk^"uAV]oW\k:ZA(62aS%#&t[-<Y&VnECA),Wl)j.2)H%=APd/Anlcju2M3oN$'nSN3,ZO`b
%WZS*L=sB5-cmtkH^NCr*KZ+dTLu-r)cmS,fMl\!g_WOo(eQQ0#92i,5?)Fj,]A50"C<fd0]S__E$kH=J.@oQZ$%s]'Wi57LFg'2>
%4r1qU#E"at'8oId`[G8g9j3En-T`$)IjHhA43&`ZCc)SM#jpmamHeM;Cl8*+K*u3kr*?0D,7B&!3YMt;;rM9hF$&KHP6\3*IBD;,
%"-d8"_8b1MDVH6#G.Es#r(;dV`NnY-;6Q\cQ]KSP9:#SViN(N/:`cFs?=fn%I+:LP0[O%(Z3=39Mg2\5jhNW2fdC8:UO9\KjgZ$)
%E</bXj"'eBjH_`lYU<V\KK)!.?$DC,Um)T%)]3WXZPEl0Uhkt*G&/3k%X2-:G/b8+-m\c%AjI'`d]i/=j5i`t*EIU)qMp0"7*2[B
%SmpSY$jp'/9eL[CYG1ZibZr<!B^bN.0JtW%FGbeY)H$2t^b7IP;5t^Dg8L\&-pDBgGFYT*ppsG6**'HMVLS??)o(a.UQ]'eAL_n0
%Nh59.-n?IEGGQE:&\seX@$pQgS4,'<*X@FEhjQUXW)j[_*A+kq[]QR[p<N5d2"124[WrrN^s\JZ9+9lVdmZ'mMIks:kq(3mp\G]>
%mqisk5e^)'+lFWb&`hU/,rQ-%]DF!XNVt[hoMr-50L"e,1^k5=E5VJ%VggD!,@PfFE01GHU#FYdEYq`-I72Om85'W$-n_N"&RWk.
%ceRM1J`3PY*Ph1Af>(Jp,C2(T=fQI%1=UZ!7YEipiUFF;Pb"n2F;WJZ$=TqFR';H01l+A$":_c[OM_^0=M7aIR@Ggc.4R&skgOS<
%WtQj'Ka^dBA98247+67$IW5icDfCXK[gq0#&_7mR1"/*^]4YZDmj9AS]QQNU0FckRr$JZ?Cpf6YFQb?1f),Xil'PY2W:FUW;T"<!
%%@Er.Wj5Zl^MnUMRC]);L)2pk:5Ttb]=?+$<:J#S^Fn\"7p5,mN8LlkV)KN4l'>]%1,$\T3`>%4Zr3kh7>A`8h>o/YP?F[#,pd1:
%pU#Y0SR<Rd[A?`1Yu`d2^)N"1<K"'F9ZXj5mar6(-U>"<Qed_?,*%CiN2F&=Ak_%[iD"]XNOC!940R3uN%\,t1fT:.O$@/@^d).?
%](8D[)n[m;?\4>EK]Zn%d]TP&e;BosAQMh8!nu5nk>%kN$"'RWPtn$/?_Tp'b^%*oZb*m/biQOQ&hB"=d")p=V`n'dUcpUZ#2FQR
%B`G8S1M0L`b_-@%^0_M^[_A&oXUs`Qo@XJuqPVfAS@jsMK^;\/pm[q3iRp:-%L(U>2\g!Z<m?%iY7V"bi5W2dH)c&:%oAN\[^I^E
%$M6-,LN')hL_R+/cecbo#Y.DGIVVk@'d8O<csgu9H6+7[B5'_7c7QU5JK]+,&56&66EiRQ_io>gQE@6'Nc`BZGA*2)/;4C%P1X1n
%'.$MFD#$%.=A"c\>CEmcZ8e&(M'T"<N6%*YCW4UPDbR9iU]t&^<f>>E6IdADJLnN[)jbdDh/g((3oI0M=>;i^'ok`KeQ0j]d?9<J
%`N4W:[X]!]JgM?O<4CBpA43n_"[Rg?JHi24^hBb82/f-VQ-A8dMt/8+8R"ErRT36:UGni$[M92%Xnl!N"rH/4&sp<>72DM%KonaA
%E6;@OL/T"k>C]tHeNc9qfjZ.b>I9"K6Ah"O3`K"4at@6N7'l&g]-MH=QfuP*7^iiRkR%qc@pLVa,sYq/j$X<\gHS\PRmlTQnCn"e
%`^Y_P'7EYon[iFPr0:*(M`%jD.M&J*^%F`qF[/3S4:?Od2]^"XBaO7G-"&G,#QcSOB+]21J;gY$!nVWP$>1WX,aSuX1-<BU\BR3:
%9un5,""T:_Y=#1P\ajN<FE#C<b1M%5Z@'jG)7!*QbePTTjA,V)I5B`uOWc7-$rt*1nHoHWRMqR2Z*G`O+t1gp_FiT\VDb<NJgY^k
%TPUrB<F7#q'U]+j0shpJ=U7PX9Q+SibsX?Af9c&7`]W\2/RHBN-TD#sXLuO+iIR7!<dlX%r0"W?\M(`@&B\K=op25S/%o&`38@-*
%G'-L%rG80SS=$lur&UXd'i7@HBMg:I_\(#)8s<aY'hPI9G)@]'aSUeYY%C0n[run*a&Hs^\On]oBEYfS"c>I"V;,(#=Pr3[<i<A1
%jnouZM!7$5M[n?IUP),p]o^hpj,33>h=-72/g;Io9-_J;*>m#=["bg%eeZ\>aj(E]9r@tlShhoOUVqGeh;lO?gqNXGc<lEk[obLN
%;"?lnYCi"1>;<8cU[Zf8Ms6fL=j`.\=$3dL=u=aG&fIT.LX3pbjCd3%Qcp5+j;MW?M(C!!`t'8>WNqmepb$mn4RN;@n.oFKFEeNK
%X-Tijg?2(0WM-kKZ^c+=P9G`L928\$BqqF0KG7tB)\93!:LEtI+c/KM\;^Jb$Z6%Ebgg#iheBQ%V*2WbPufG(Qk;3X+e#gEn"cpZ
%E_+]Vh.8;&qc(2J6./&Co0<cKdmrl-I#"b0d!3=f+Biee^Q?E]d<L;u/!*6d,qX7:Drps'To[3MbI+5fI6L:M_]TEVLo_$(5Y]V-
%.OTna'UP,uHQ*/N7eJNGFT.8,Cu6jglf;F0K'OVnG)J5qj2HH6FYf>Vg%8022_FjS,/-#2[p!';3KifX=X"P9k%4EMIF`/i,Kesu
%DF&39qF%4#Z;KJN>uRB$OW2$mQD.)sJ@TnRaca>*+/.[-k>%jf;R9/Fs178f;l%a/]^q$"T77[=$7]J+!NLMT=E-uD!2$Oq+aJRP
%gq$eZ`q-sX$!4jQ[ogO/hVD7;a'k6B^=)Zt=:5)8]`D<:7V4![/[+$nn#S+ufaT-(>]o63X3G!Tg31rg(q.*JEbC%`'dY(2du(o\
%8PTcZ/EF?J]Nik.;!kc8H!-r'pQC_EX1_<sC"_[<UerS^hcU*@K*U'Q\jJ/TS/`<9SjmUh?L>@;n%k:Xln)7;Nd(1S<#++a<Ht4;
%_WTeGri*!n3ck1!$p&H9GC9FoD\F$+(^[m$bBQlg%e:BM]s*^6Nqhs(?iP4/Q#cVB0b?>i3u>QH5QA1lVAgPr-Ntp4FN8J#p*Zg9
%rmUUkq;M;0&M@[RK\s^gD^e\Ro`^u7CIeDCrknX-s6\E&o?]_7J,erOJ+NF7o:,LCs7=Qdr:,QS^]3f^#IaWPJ,HMMn:tr]a8>W2
%q]C=eit&p(5J(_1/,Jr,58b*jrKeW+o)AUfqXKpHn%\\os8MfZT77%LhnRJ\r:-*qhnT3jVgnRBLUYA`h#Hs:5@(\Nr9uASr;"sZ
%]_t&Zrj4BRR[*$WQX<5thepVU\Hi.Dp[U7K^OPclqV(uB[pJsHT!&%#U5QdEcf"cuA,iG9fVgHiD6XhkI0&X5o=t<LAD1&OFTM<X
%3"!47PbEIahti,7XgePWoC!3&4*Yr/U[S6\)/I'lG4'%*Hn'dVJ)+o4T==j0)A8"fa6IGRJD5)lhp$a_[H0u[K`j6*]K0Nd(ld7I
%SVW$=T:4'So!2G!j@#_ScIhP'HuN0a9+['A?(9N1]H/f/<aLJu@*a)8p8(ptNO-ej$L,goU7rkVn*+uAL6\j:Bm6=1S[?*i=oKdY
%NR5PWZ]@uJKE=@,E?n\&nCUs)GF_=COp>X93MKf06#@QsL1OtZZ5^ama]2pKps;=S(+iP"MjC2SAY7$%&-@<u/qB@ces`oG>(n'@
%HoC&`jHUGi=;(<88:k?2q",n^pY;=Q.[TJ18PT6a_o%6?LL9b;aF8j&;sc`fkbTW]POc$)?=(AK%o8A'7+]JqOI%d[mq9`He8@uo
%9<sF5:nn-A)/holYP#L[%@3-0IS;br7G>!J7N\ud50*/]WY'?sQBp=U#g?#@ip`klgI;2Ynl6"Vh-rq,LJ,Jir\2F!]o>#?;ri&a
%%)Mr2Hji;)_&l`jX&@!]NrdWT/SL\W5]8@0Q::$(.*X;M^4oL%JG;-m9u;62j"2,7["jTR!B.N$BJX*b'jU:YmYot/<X27T_(KKY
%`Nn==^>[u0>C.[qh.#j:^qU!O^)m9-8Ms]H<t(s\riCIs*J\]iN:t*Hn<_RO7dYJo2aot8r$=Ze@Q#.KL(AN%d>&bPbm=nu5TO)r
%LLFM%DP`V,6(/h.GCoZf"AVD>`C,OG%5P72',YF*MmBp8I>\)CG=03t?-*dEAn,dMW.qirMjRH[6;&k(d1C\GnlN(gqG!-[%:25I
%$7?=*3RHlsUC4L>i.s]LJcj88_j^[*V?L+j5FQGn84MeEMl[gdGZW'uX,J%1I=!)icFej/.uT7#$fMFi;^U/$]lj79Z@2LVIF3(!
%bPdN`8!Ps,:db*D9H:pOIP8&o7,>^8I1MRXRB@bMd1hX8b=OdBZG<Jm/\!HD3RO`9Y4#^CBGtoG_@4S1T4qnX6'F"faVB9%S'hg3
%rUf,'++=3C51Qp]J%[2uR>ln!-%sWPs83\`TWt%7QQC(n=s)If[lLDt1Af7<%-Fc*P2B0Ugi_Jeh>c4/mB%s%p7$U<s0f"h_-ip!
%[B"%4T1T'1WG9U)#aPnr_4]XCUXn0sOThrMc7Y)7eD2M]GdXF+J&-N`QI=`e!;7A6]EiRnfk^A@Ysr?RJSqN#_??%r"pn^B&3DF?
%%+Gh9B1,CrRJbO6HJ9FZIa1b^oTMe<>i12(,nW3##=oooOYfe$-<n'FU3p1^/OdgbgJi0oq8:nl=d=FpoWd7as-V>\&#h!K(g)k5
%>`@f]dOs-j<FkU.Zocp0rP1*ulN%S\HgmQDJB$1Kaq8cE&L(%I8rNruc6K(**kT;uQFats)i<"q\*msPF%MtDUma0&W[*8-HpX$T
%I/;Ku94`"(^\[H9EZ+hJ,MY8qNRq"N))1H^:E6mte1>;7hVAGX*Om*"Gr]"V9CHPd)m0:HWHu[]=2m_s(aC/8)(DXDPi3'a@Db!&
%h)1\j7LpLo/?*r=.CBQf&Kt$]Bul`F63G#8ll;L':E&PG#5/UG6,;'*Y:00HQd'7o:2Qs9Dp%aH`uXNF[7a"ROZ*^dK?H%ta4XH6
%a6p2I]Ati%X1`-R=erF?AT]Q.!n`B<nQ_a26lF[Hm4nLsCq6g!osU_#"ti73,<D@:d93r_bSa^.@$iQT_d/QC(Kog0&pZX3Ys"]<
%d!GN3Y(YAqX:cDNIQW_b5h9"7-8O5da#mG,Yi,tob#BmRODmljX$r_g&YN;Q(h/C5WtCZ)D8bi]ZiX8a\tNDl?goJq68aCmM7H)o
%%Qj8g$UDV3LA;8^\(-L6r>GJuV/LU;)'n+'k4n[]WC7>YA0Gma,0h]8+J6P%<,*Xi.4I;AiicHS<Qs,dSP&/Sd4fS)5R`RO$-6WH
%:V$AX0%\oVBOhF+BYjT5b1kbKmcb1n''!l7:h:L<E$3qeE;sO/f)A7HoG.;H\):i>V8kN5R8[f8m\TaCn*LdH?hl$\BaI0A(TAXu
%(1'sUEBg;3r@H7ngAc.S%7;[2Zb-0Xnl;L/^K*[XB:^(r<C`bB0kP3F'1D8kq7qU1iE=BdM1_?3&h$K`]T7m(3u()8o]]qOiXOR9
%W/B[.^qbo*8X"A"3R"NBhQqq^l@N<5*j._'YsDEX&5FF%[MGPmgG"sf]q$5[OsDEqA\q<5(J&M[/'a3t[S1CpOT:h+9qp>hj:*jZ
%@55)rhNjI`L.(NKY?"q.(N$S13QEsuAosLo/#m>G2roM2&Sua[MUeb5RhihnNRL.FN5=?U5;-4fm7uRa*-Ec6nq)9`aU`"k$)aYL
%2^?J-50RdMm!U2AR.uA3'(-4b*k@:$Za+Z%c!X4jN+eiij?[GPjACAQh;\4/io].hiqVL0Nt2aC5CWP"E:e12"nGY-=*g`CC5Me_
%U,l4ma9BViKt>aMDLCesir,c$dP1h@,,#_$?(mA<E@\uH!-;b;BC-F/K!/Kob$^&-/Pjn7MB<iXUXIjsN@:`K6Nmmd&ogC^2P_Wu
%:73Hh,SF?Y=5AIP$e_>0:.#m:>P^W+a`9Go;@!op1.k9)aH4/56>'#sc[1qj+N5IF/R0eejF&Z%Pu"pAH>809M:O:$)j#T-Q^a.]
%5h.lUF^B7IoX^td-T$C#V$b,&LN[T4>q6Bm#+A5i->29CE@GDD6>M<EW^^SIk1sQj;;mrfGs_q0&*:fopuF/9#Ig<F9)2\HgB2:'
%[!ae8(EeZu.&^.BnTAfX&q:?*A7lM((ApH'ZF!OmCePS"qs[c=?ARtP*haTr`(gKGX']b#<eR%'*E'0aR>Q()nND1%(Yn[q*@()a
%$I[)XL_(>Wre]>g>=rpsjb7Cdm1$u'q_[FLVH*!J#)<[&]4%"$qtstu^&..I7A>C+kN)J*.g*?%=T3+NSXk*1W!--?q,D+Bh*&JX
%@V9$(_<WR'r>)HVL2mO;*>%s&+AOBbDdWj5?]RIe*ia6^_[a%&R0YPuf64TDYe5Eenm6"pHbVdVKiXm;nSZF@@i*EVoSH<FdR=*@
%9"h:`b*(38S0"Ie*rLO#gT!P[c\T>^>le+ofH?AS0*Q96'eHbW/[Kq1@KqVE,NBKD9&Y_i4Lr,*ks>8HV;KUl#8%J9Cc/27(f%)K
%h^`QP@!@-I6103,*HM%mWXl69,/$\MN1/OA7lMk@0Nge=8[c_(iaO8.[oERu'1[=1)"cmVW-Rm=0_?Et#8mRM$duu\JZ<r\AZQ[l
%f1BVZU0d(kbS0@WX^tg`5cbt@Kn4FO120OfnG4+%47KHM9CT.S:RZ"K2j(AB>%;i1egRAYq82d)@Wt93F`B[MICoNeru9\7(6B5H
%>O!-W8!Ln4I"'',.i<o%nX3A2C/A<g$sm\Q!,Q7ibo)=&l2q0`'nh&O!JNs<Q?m\]WtK%-NI24!T8k*;a`#)<2B#K0"gDB/g8p7"
%jT\*+IdZn2<7(rFrV0CkMtTuTV)Gl3kmVu8"Bq*25-`9u"dWIs_8d@+]i!@NKcRP;r^%-"9du!Cm'L_:)%nVP`,9rR"W1;hfOg2-
%%#XMK"ud6%g*OXV1jH5-)!Vmi,]peP6<RCWEVf#mn<#_hamPFS(PZA>j6`_Nd\i-9OuJ;Me^iq(*X22^+EJ%K0d3@+jN?/^::&TV
%bp#RX7/p<6TWeTI4G1G/o*<rD&+[?qT'g_ehmgYTQFp7p`/dEhm0NVr74")ERXkGRrrNik3sm4+<9t?t%`h<`<(i*[9dM?q$0^:`
%@$4(*epW0Ko[k]%0d)(dA4r+_\PbsD>(i^EYRVNffpuT.=,lo">[-hr28S0bINYkr<a.iaU7kD6F+C3Q@*MG^ifo<$CI4/caakHf
%\=M-F&d`)WW/<,W-<u:48Q3WgM&FKL$'/fc6sXiVLb.[G>=X/G*45%JkjXTe4Y!:&c42/ciu)P!)F'g/R'4oBWk&]VMSf=lFuB]"
%)oRK.>m==K;)"`nK687[_`\p1h@S=k$H7-''10_[aBK)W?5A2RY9&mBb-NpZd+Z'8caBC:lZ^Z<lmkBt(,KshnU\de-GPjm,D>sB
%%&bcFU[>;fj%3$Zg.(<$9Deg#.LXihR<!@F`h]3=4&Bs-IYYq^e>P]>"3?S/K&T5Q2U*BQA2&gMRq342N>P;6]+T<J[P2m[,=TpD
%f'/JSctYA!5*/c`JcWIQW-5!Cl@gGBibUd!d;=SV:hFSGAA`=>&IUh6mdI;GVjh4/*QW=Fe(6j^pfkppjLp9q?6>&MN@FIVa0dX5
%74s:s">G@o]^g#2UemN%</RsdK1ma`<=^\GK],^W@poi%G)MXLflG"LeeX6&o>TqqVqTeV/UB/mV@gEIJQQW\0Nrk\BZ0:r"_0k`
%0h*0HAmFLOC&Y#sG]bHNHpK1h9XTE(CS8'n?N?Pm'SiWrNER;D;`)No=d^CSLE"EQ6q#ba6UM6tq\VM)fnaSPp>iT^AB*)u/iP\\
%==YujZ1^SuS9)cHHbCZNaeskY(WQSV-H+I<B(CPGcp-a!+SJPU:9bF`0Ae:4-iE'%Y.qZBWoC^"V/X/!jPsGR8Z!QK)^bQ1Z%0PO
%rc@s\YM;FU`f6q3H!BXWKbeu\BgO!K<7R"m)!?CMJ(dZ7(?KD+F.Gr6YIL;t<A;=kS?TeAEb'cSN`>P!WNLR*5]:"d=2UTngD,\*
%i_6hg0qkO2MLM]oMjl!0I#2qoHBb4`HDIJ]P7LjZ.qu.-l?u+"gj\be"48\8l4=J<Y1[2TAOpKj4ZAuZ63p`\pSjm^!kk[_NIkIh
%Z&$8aRX7*3g.Sf:)[&`PE_:<o'78&33<DJdqX>A!^.>(7+2:RJb?Ni&%Pm=,0Flq*5.nNuP;`^\]J)4N9O!pe%&t.!1.8T%.S,q&
%+g41lLN?R-F&nM2._8n]T>l$4gq:a>;e3aTRck%A?:t;1`0qBt?k&.\F.-;2eX4R6!Nat,TlKr>Pe$qnqV,"P92Ms3NDC;kBWNS]
%i+K8CXa0E>P0D=@BaaoRTY^/9O9.;a)=_R@_9pc<(d])hHBF"qgYMSB:/`".Mdfk&O^AM*%>dAYnX>mEW@H1BTnK5))3,C\6W=13
%0h7Me(DgBY2YnJJ:BW-k01&-uh75Ou**<JLnGI>q[;:"Wg9=6[@7JS)iLZAcWA1^<`HieHf$%o,X`<2\^%YSpj@s7!+$P'7&Fr*-
%f2@VR&e#?+`h76)2;U[F-lrNXMMsn9>A!NL8;g:ZKRk\BNiE@(>r4kHJ9M$39oX?QVUBn<]4JIp+>f##Mu]VOFZIfIN+CA@U+iZh
%THOZL7B1@FQs+pN]4=B0St,bE&9EaV((VK.%X:"ljV:Y]O92Ne)YdPP=6Cb/8l:;2kV`&d"]HTZbiVLM8^9ZS"IT9ZE3<74q@(lY
%`fpXq)3(UJETC(A8iY6NQ<9&Oi$)UqSKsTrD1TifL':;)h@a_F9qfsfecDMEVofg\I.'^E&<BQFRPa!]@Atg5HZF[=Q[IrI0DX8&
%q/UN.>:KoE!4VU_D8MsmT$_p!TuWFa?ICDll<L*m+Ao9[7[eO6Ir,.N"r.;GS)W8Y-0lV9XW^E=Y-5:&K*FmT.PhV^a%bb?7*-?h
%r3;/jH\6cp1t8KsI(MR#(b84e&%_>U45!M[a%nRI`GoX]([[V7`cMBa61_.fL9>caaO>tn&1R,D07#m"76HL[=0nfDeRFg`<Lh3e
%&m"-^erL_^qTeoEG,jAXk*cG=q-YNUO]b_(*LAn901Ld3V6=gH&Q268WO_R]V3fPpr^(8?<T4LFqC_bKc(->@:@'`@ZE(Se9^k=r
%:Jh\VU7?kP\1!o,%qsa+ORDr"(DFsj2!Y&o^3euC>t$(Wi?mkPhg[nHlOXdp_M_Jnh\d@'0!=QhLeEDr&QP3tL`jRbL0kWM<Seq$
%Bo\rZCWap')dKo/ZChD>Te0\[bJ_!R9WR+gST1JY+>>;]_,MR,@`R/%\I%+&!eI?431W<fHpSi@Z6>9eUdU'M!V.7#p3U^AJme@N
%jO.90fS-gJ/u/KHlbjnhK6uLGd+GZS=(*3]`n3Ou2c7rJo!g=FciK&I&0'TmgI.?g;kjiZaqECDm/^Y?2DMt6RA.`8HQ&I5.\aU$
%>bjGH,Z`FU>RE@0T`V\soeZKVSl"77OFuk_a*&c?hIpWe:i&A3p!o:]?63=_@_0C?4#8mkNJ^k3B!l/I):o*YfP&pk2rmP+O=*2H
%4S9$O[$O4QgT26?4Ab3+SQDNG%[j<W6$]?`pFoj])VHB(cbY-8]@3744<S1cJ>*[.VjK>`HrXn*57jjRf0IUg+!P37_j6mboj=3n
%KoTM]W`3KTm(mZco6IotSWoC\W'Sp4K#?Z^.j)$r&@;-IK)h)q/^&&o_M$Xk=/QT2_3<'S[T#*#mnbKk02O,B(SA3_]YSu\Q=r\,
%*>K=lmMFJpcW\BK:q6LJs(hWnFPNocNqT-T5skHC`">Uf;;0@,#an-1Y[.ADjXuD@CQ)9%^o8P,)/.<AIadXh:hbh;;QA%P'ddb^
%m'g:kFjC\h26l!_N%^B8qrUlJVP7inRScOr>OoYT*G41X7^\^978AXnj;sW4poIi"F)<l#^+is<4CIE^$<-4-:5VMT4bgA(WXGUD
%5HTgG<gdiX%Q0A#M95%,DY4ge5q6^nAdbR>Q.br,"UA&1:?Y>E8kW\Wh+demXIf?J?.;Be46R_eUtKhU1<@X\W+np%PKuT?cQg7I
%k()\U+aK@j/$8HSM)dE*_EVa9bn]KJ^Ilk;.O?Mn@i?tn6WIi2c/D#PBIR#aWN&V_LjVXp]Lih=p*#eI-$tYGYmS,\3d7H])(ep&
%Me\I7A#83$VWV)2,4L?N%YZcr9EEg(XsVP)J%%n64(U>R2BYjoMQQUAC^VL;dCoZ^4[3DG-O'FbW&mMV9,qD7g@JJA7Z:=A?4:^m
%j(ii"%#S[PP-S9((Fb0pD.H\3;am.7@#lCE@3uZj_j//4a45YdQ''99d[JV5>2-_k!",(6T2osr="^LK)2.QB9h@.3kR"OBPb3g_
%L7NWtdh$9_DEGl&7r6"VP@k)dB]-'tAk.VP=Xc1'&nuM(dk8+B917CPCusjf.V6PS@(+2h%,fm__J@3!<*3U.LnX<SLE9sQ\l3Pn
%j5_Sk5*WJ'65Jt5(-\?Ha?J\#[YeBKP@8b+4UA_>D"*cUD_Jm&]3PKTFjY$<aXSV:q=nq.T-Ld-@bV]ZD.s=8e.E)jaJ1=>@p-#/
%WXc0+>n+`&YQQ*EoFL[J.LHgT25c[@kN7X[OASoBUp/Fcq57N8qA:)F@Kj,]054'oNg))Z9nW2edqOiB4@k4^E,]Nf8?"4>O(1/a
%N9,U[hbp-J1T(km,Q1(JM&7G2=[74o["j2LKN$G]mEpTO0]K$fU/sKndZu3hJr%R>LDeg0J855J;6W+p',<LBL$m>V7&U(pK?@@O
%d'.;TO^t<f8KDo3kmMfgG(uLfEjKtV[rcFnI!hQi"Njq"3.;Q4IQYF9!65mOr/5+s=n"prXe'dS91eX'e0MN=#oO7fc!g-QJ&G*\
%]G\:lKtj!B&]FXi_juB$'keBDk"U+UdIdb`hlHn!TQtt.!7@'n`1N=WM!IepU#2Mo:Of6a!db@/-nP]\M`8D).VUjr%N=SJ$&nNb
%(i/[kLGZ"9F;C,o=%W%T-UFe%p9j^igCV/?%^:6cnM/]C/$#`e/#4-3'/^YV1LC-$d/kd]Un;Y3!er9t?&9'X@ueR>KM<k@9L%E$
%.eE:m?KGU0\+5'b!s/u=r+lY_L.cfJ(1]EX_-sL3(D'c3!<N42kojnLF@R*VW&]XS/TVd3TF/TT>3l`MW.V0r%KZAPc1gLJ=4#=d
%i^iZ;X:WT)1n<KpDle15Z%n^uY%7J9-?e,#q!a-n];dcK$BG,TQF$EMBo*noTg(+%M]O`n+W`gnE0lgP=rtDP;H9_&qBu=un\>V?
%nOd/^+[lV:*+Nc;L8hdJ(0U'=MYbE)gJAl'Lfh*Q1;c3UR4[ibK"TdXd2ANe]'\LC[^ghVd=&_a2S;I]p]D?D@/O3DaC'?ecAkRb
%^DJh&V<7F,Ol$'SP<a+2,#&b#b@-UfMF/R62KXb,>WJh%MBcSte]YpOXt=XIG*!bL=kb:m`5g8V@QtSboVMql\Um6/a+\;CXp!Gl
%>Qi`6F@;-_N,a0C9o$g#lJKb0<WAX)3>nTGW>]<OLX7,>(ZkO`KOJ9q[r[+D.PBC5"4QNNp/W_,'UFd3<<""\jnFa4J\F[BXOq\M
%Ft8:n-6o$oTa^qmL43_rC11J\73T8Fq[Vui3nX2;mFV!0])3<&$oAZ2YcP(A$2i-6^LFo6#j'oB`/8VBZE!G+Ha5](>+PN9q&epp
%p(K/KWqVFbDs('Y=((HGENSr/(Q22r;"'\n?FVR["%L($pQ>fh-hg8n/9.t'D6)qU(.tW"i[,i_2.So,<Df+pgD.+hAY?-O3Q*MH
%cS9_b9Pl8FO$m9,/YTMhUb"N>>$tiEL`h>eTh!+F:hMC3=4B'qe4^]*:,o0\BCj"W<L51#)5WtV.4,RJ7<;VcYC>R]hEV.;r#<6e
%LsRWBco7n+"T/UrrZL:!W_?iW&aTgPK35fbE`#%YTNU:_.\[77\dh<kL;kp'cW$5nI/Qh(Xlr_%.aio@PFM,5@lToGh4@>1.-'k!
%^3f"9?C(to>HAGZ/&Eg?PQKiQka,Vm.[1h_9kElD%qpJ0QDOd_JeHt7XP*a9jC4j/]rC3g(PS;m=,Td:OiUV"R?sjcN9UM]E=+4`
%:@Q67lB\9KihhIqeG.%I%HnagD*%eo,O^V[\H'c)]*XEWVF5B!EgOL]`"dWu;hq1W>t'-bkQs\8;&)S]^^oruidU$NZFW_q&>TK=
%iX@ZI6A,\X$"`$J?o+>b9lO>'iaC9fWHM`l6''$US%pXD2'l+ULt1]/oLD/G[I:Wis!e^!RfnlQiI$tX;sh\*]WO5`DQu0J+O=gV
%:eG53XRN$rHVfp2K%O@neZu7'\*+3A-N0al)_i-2H42MDQ_fNMl@h^l&JH"`Lg[1E4]$+l<qNKMJS([a!,.H^#q4gq3J91*=*Bpj
%_J^;?WY?)4N,`K(#*)L=*!"6FfFu\S7@Klgb13.^*4!(_\?8P=%(1roBS/nAfJc7qC=9fd\n5&>R0\>g[)dK8(9ZWR'V(0)r+6O"
%aPslcpm(m#d\P4K"AtK0^eG%k#S\`D&f'(;<#%lZMGd1'M2k,[Um=.<;sCmjPKB&'0-?j:mIHrW)$Jc)3V7ir='H<=-no3CF\6!L
%RXuO#,/QUYFk;GJ[d\D5Ya-F9_?j5qYkbmX`Uf5bY)OXFW!+]1`-AhrGXlp4&I_LT]([7Hgr.6qPfahhW*ub_TsnP7>*BlaA&M.m
%m%esE1d_F5K@3d%,uqT'&2N`tVr'VF6j8DM^s\m[6qOPV;(?h,bCc;sM]g;@dtSgh&;g/?/Xn$,+anqe3Dfi'A8Er7"<3#.I0h&9
%W+5*#i_8$EYU@*BLibs_c=gRllh<^qJlM&(F(ub?<fcCQ^_N=gi4F5c%aRollZFV?Dm;!AT[7I&cK1f\pQEM+J,!1^3n1+Xntt]:
%iU/8[p0#m*Z,Dh5&_a%_%*sR&3e8h^A\\=[)gN;q7es+d@h$mqoI`1RD;lb]+q,qGH*/_5Be4a+F>PJPi?YTsR:8_YW[fuDAI7:R
%U:aKnm(@e_?8665LhK0cL?DCG,aT+1QCXJSlZG1b;rUtkidB-mG!oJ6:?l:N`XXB<jgig\?3%'@)'pY0?AV-CcRGeI]/did@Q5B4
%VC-T[\h#]\os"U`J+*4N^["3R<21D.T?H6F10`r7V.-EcHN5OeOigLa5%[kjL?_MCb=(*.?9Q^$)C`K5&A_&WV27Nl]1RCu[4MUj
%?J`QO&`Y3,^(]-h,_)$IT`l5hVa_F^g+q1.C^G2K$d'gSfWiZbYRW8adZe6[8ejW!C?/krm*SY,3l^NIC[FQK^TuJd_0*kK2MSA6
%HE1B4kJecZF-IFf`/'TK6ClJo^ptgOoL]fWC/kKGr9gsBf"?Ml'cBprE=iV88*oma\+3Fg3.)I5GR:)^cH)B-1!l?;l\4^h9dI*H
%==P9$Q.7Bg"Wh\c%4F-DjVkOD>$>s-+XNm/"tikLRLSUjnZPF0?(<c=LZE8\hYKf7TjkSQ8iuXg_i*ba54`Hu;oC#4RnG[E(skAm
%1Wj4,@*L"[Pr0Q&<$(WEoFS\B^g0NC0pR(gXmG0Z7QseuP&C-8m9F#2]Z4)#D+EjS5_e1"FJPNmDoYfd7Y$$J]1U;36R6hVi)?V$
%*SkJ'dTZ@S^ETTMcE3+bcPKR)>e1j_j@'5f&PX]YVd$,aHI1*'r,1!(S5o'D_7W2IQ0T!$5G2Y^Q?r72Gti(*Vr=d-?NLK7,SH:"
%PpA`=/dOdKWd+D6bd/V0)\C&kdaUsRD,E/0ZEV!&e,AcJIDY3oQ$3U>%`sK%F65A'Ulqc'=7=j`IQR->:O[\LYJZ!5'QFUFpc:j6
%nfgMm&T_bu0B2?uoe"FbREA3AhF=%%]R2L%`I$8nNfH)k/`Wp^3h=EaS]WGBTWFCLptK1Z8[X`lg_d0u6Y!/3WSo-2qCjD,pa-Of
%CAoZbhHDCt?_t]g]t."V&rO_?QL$Jc^][7LTXd@(Q?#W4MYB1(L/f0Y&YV8'[rYhKqTHNTPP=:N&6bpuO]>k:G=>DqV%-L=:`Dq\
%3:G9jYU"BaZF+5b:Gc7/c<d5u:Oc.Z,u"Ka-YiJP3Zp!&,]bhCeB,mZ6FVMC%Cd"U.:X+0R?]7b3"f$TkI]npns(nWMe/GH3T+#6
%?>E,*gnu9XAX&XL>Nd@LZr:DDe"Xah-?iN#'r5t?Cm'^6jM'K"BO%nL$$caj-p.W8+VhWO0&mm?b/+qOY#8,kc6\eA\GuTrSQg"P
%f9M'I#KVDQ97V;LLi^>lbu$;`&0hi6E<$.O"G4jB"PAk[H4jGsIeL8EBi6.SM-?eC:8]'STSi+(W`*3hm*"*u-"XCo9?RCUSBqC,
%*!a#)TI'?G8kS/d>]0nq&r^`U8ZW&*V#9YTlUaV+FEF"'$%J;0M4G.<cs0),U5YgT0hir!:jJs-:1G:u[MG9r"sos&Y!(jbG&?j;
%p52&FCRG^O`D\=0D7I+7imAP;+@\e%*YKQgI4"\h9PflQO%S1q-EP'5bY^Z+fmgRs83IKN<\;+D\bX0klS;n&]9'ZB&=L-3)08[,
%O361a"'?F>^_jq1O,AgT^$@V$+_:po[P_,mH/uZ\g@o.V#n4ggEBN`I)jb*5Jqe"<86cigV??tj>E]r@P^$r@;F#jfk37iU>fP4/
%b%WTR=GK_Cn^aR-Q)uW4\4!9CF%P,XbP(?b+,GlR=QnM$EC7`AKoA6H+#b+'2m:]`@94$PJQBi]KElL=b.Ko!feu)(K-8RkX6:=c
%H9G'tW`#`bos@.(L`\X(hmC>g^42sqmteEWfEICHU,PM&0%A<6NSQ\#,kD9_,(Z^,bq1LT>3T$^06=_pWq9AU$C8RsdieHZEVta8
%[*%jT^4RR2ZVDM)D3`nBrp'il/b+BL1!;>Zm[lGl&uSJjiWF%3l/,[l7s?QV@>J#]Z.-<-ieE8]"qa),bZd$/hQ`Dll"%E!Q'cG`
%0g!ZSCYgp(^RE*(Mbufj:hVD)Qc45:o+c`GZ4B2b+YJ>]&j#$Z&=/G_V>+K?NfNj)c"SiI.g3a6mgS@`dTg4Y`CW[M3P6hoe8ZG6
%+A'_oZ29>G+%5I8.3DKXkUu9<'oRjO3q_rJhdLVpHA^8'%3:MA_C2.9BOLC8o0aKT>#656['Vk?)'*L7K=?eE#nNkdBV&DjZlUkO
%e-;+A(+!+F1hB$"d;<mGn;-cmMlru+_H;;VP6H@[\MQ>5Oir&%;^*9Yi`DHkD,Msh>"UqYBbDleTJBol4J[g7'<6(`oWjWQ3kp*"
%jbf`&c?13G`gpS\DgPTI]^1>0.7-F#oV^O?N>'BKY&j!':ppp"cV&>Q)[tq=*Km5:JLBnL_g(C>%jWluN8XSH&p[l'_t\iNdY03H
%gXth7<95:+_*k&$0MoEP__!#NZ4pS*7*YV&[`A9_8st[l,&6g?IZCcG@+eGlR]'QL\3fAEgq;nS+4X;k6#D\JZ.<@9Ot:3h$Ko4<
%i>_g^-Oe?JN7(?rQoWm#JgB*SCbn,5hSRI`eQtb5(=HeJ8X,%1NBOVV5;k[kESslM98!-E,U=>`rm@=>H)&+u^Q%ufD<jCWS8f2*
%U8tH5'*eF-KJMP]U2sr[]?)t)GAZ7T*Pd3ulRUT=pZSc<53s/(VcX\eT$_&H%(*,lE)2aM%pnf#-*eVsi``=bh17[TB(*"c#7h2G
%:+aG)T?A/A=O$NVeZZ,N_D(^mnR^OKb<`Ss+1mj-b;0Y)p7h@?EmF"*HhG^?RK/$1p>@*K&Bul4Q$KP@^&Q#4^VB)9=/V5,lr<mF
%["lp%ad5$-pUWL/qN[=g;]bH0g<?mYFK[gR&,XALF0I5W0)r8#.R1p>^+\,&C`t%KT:r1Q+A)f%b^,?9GjL"!j'V.r^OQ3FRrc-p
%4o3(Vci3Q]\,4F.0:uUAI<Km]_9lV=n[i.VrqMPdh-[pAn`@aUJ(V(&]mbD'CYM8'If'&th<lrB?gW#t?i9lul^'9W6$Kp\_O%Ht
%mrhLArp&ae_mJ0po2dTZ3[dh8q!Q\UfAAdig[hW#G'uoCEpL]bdDW;$q3X&7cIVQ]Y2<U]07E6FJ*aRmIsp^^'psF]4C98$rE/c5
%RK2a\TJLJM,rsF1#3kjWQrDD>@@M0UrVWdm\/1I^Fn"Z*mQC9ilX,%TB(4O"4n@KWp4Mk\4\YnMm:K<>--#6?!YYK)a`D"XM0bU_
%AARuM<A_%hSXHD1?)U_ADQV3?M!4<[10F[<jai?\FBfS+9r([RJ8('"]8jrF1@pd:`IqmOEq#5LnV'$(ji/:F/D.R,16[.)Rg1#D
%ZaBM?e8@4?Nq3AU@R)a07QdphK-rBeADoaGm6%(\esZ:O`C5RK*"lPZbc#,gk7-i]Z>W^8U4=sV")R\^kG@+<`C(&%DEEc0K:qj9
%],g5uSgF"F"(UdOF05/QMVOT#[BP+%2Juu;5h&rnG1\S->f*Ym^U:5";ugAk9jYceb@d0.S)s?ErqHUBb1aJDWu!%&SL#r`mH$)c
%ZKt3n*,5F5'W+4m&4s#=&6Mp7+Yp>P\7c`%FpGG]Wt^k!7/fX5#D^em&GBjT*ON`",t3fh(W]YtM4,[)G@9+37$Oc-4Jqd!QX]iU
%o8/%ATKENB<qlnAXZ'6:P<kJm=?KC/q]Q7SgP1B2C!][EUBZ/$!WFt#_Qk1jp<#!O6-G7VnUe.eMZY(o+N`HSKmsC4$majATJ\<e
%Z=IliGq(papWlRE6X,K&)cEj>kKR"SEnA_\Ljpf:d(82nL4>g(s2(:;iEn%QO<B@[[-u8tXfd2ZU?W$^7;:+)0L*tIMTK?mAu3/l
%fhbY-)PR`XYLSJ>TKh9i95t'0[8KmU$G5X^Y1Jr#E"tE:E!6aSZ*C#gP*Ut9JE#:#3"e)O&&mG_W`D(+MB-[lM`5(b:;!nW1fS-]
%;ZCLb6JbqEIgEm3+Qa@E7KtPbhM2da^23T8nb?Po&$q9;<:M)GfH(A7W.KVDk(hMuBJ4b<F=q+o/P).i;Xag-*c$k<K..KKA!<Ko
%H_1,h7qb$r\MIM5ABrYeZ)`*6J->u2eH]D$H04X%7/HTQcN&uc[,?8.lN;'RhHL6:BjJF$eZ%H?_@O#9](l-fkH?Kk5b[q;g@IP4
%#^g"p3kq$PnaRWu(4O]_e*>0Ds6;f$^@<ddcMOWIj<8g1E]0,_Dg;mLH9)/";9pL-kq!W[q+PB#r?j)@a=&BCW6<es1No9mEo3C)
%59qe'1[NpU?(rqST?P@^@LgWsVt2s)]mjW"O*PCc9qq$^3MDjpC9su[>V.-IU]GJX-k%/$k)kc6P:.f-P,L9$iP[KNLqZ!"]Y_M$
%P["\LO<%oEPf=h&p)/i8LT>6BRCh2.jG2'7.7Ji"]06!n)/W2>QDlI4?mh0*ncN2]W;ECP8QUM&/qt"?8UQ^6mnq1U1QQ!<DX22<
%1@7U[E,][igoL$A-E_NZhqbq6;:g'a^)`NXS0X*Sfqi77qS+W+fYWSW.-"hp!>,qcnA;-&#[RlPFLF%CX<GBD$;hs6VPXc2d0fAH
%K01\GdPI+:1A[`TPbW*HclTR#+FAtqZ*`eA#*@RsQA8^SSIXM%_(G?:SC&KlP)brjV0eN)^Y7I)UJ]kK>7EHPm)KBJp^;^jHr>.H
%I(dn`A2O&QJB#k"-@6nYR#GDt)iDIGPScfe$g7:IC?AB7/%,ep&d,BeSi/VHfe0rb8\.AEPk.5aemrcR7!7/]PO1-li`SGl"/d^Z
%;EV2L8!*uHqF"&&)r0.jD2Vk-JDZrGI=%R@FjCPNes!0G)61F(OEEqA,:O2o/GGM`i;pefF^2o<K(o[AYR[aD41%UG+iNTKRTt[W
%9)F9_&$>s]'o*G$)-t*Q_TQYIXGmgBiVF(i#9qJ#]GdYM>W:$*cXe_u-%Mcd^^Le1?)W>u3T/Ot/n0?_i^=$I"EPE"+CuRAC^u]9
%72]S)b'o:_0i>qG8E0%('RFn-Cs*!<0cc99qIpY_E&;'h@'*GD>,s#pXP\RGGDZPR_mj=u_JKSQ;_as4Z+;T/j1dr=jM'k*Q0t@E
%C1:2(<Y-QC<5ik"SAFoog!Z::$:A&6*%$T,m6d$[B`_ODo=UVhjD;8+7>L/cp_hV;T[kK9HaJGL.gRH8Vb:6B#WY\=^"kVG`=`5b
%WM*2GR-XlMHqVSTA5/_miCk?9&m6uZ"o1dF/f<qAGc4>!#SMJk5oN<)<p12o25#+I(bqjC4OGRT9G)CM`=DW7aK>8u1GC6@G*)$X
%\0[6S"C4ft$GnYZPa*Hc`f-OSXjM[=KQBFGe/d/eM7BI35nY@c:uNcrSaOr`XDsaGm8%o]B`"6hZ`U!.kr$)0<_q!'K<9$+7bgc)
%p.bJV@Jeb-:7tlVIIlgYRl>7<T5Et^D/VLn\d2)VL\Eu"4)_7CVDK00A0pUOWnR_efZMADi%\#?-n_K0C=,*phi*RUn:](aoe=.[
%Nb`;/(3XhZ%>utaLgLSHhB(IR4ekB'cs)]G"D)8jQRL8(mN#<c/0a%p(Z6t`*.kd/-2C`4m5$`?PSaX;3>0g1(#"DUDA+"Z4S3:6
%[HKV<EXrBL,FT;b"noK4:4o8D``O^b(E>!g<1KT.E<9qi,or:[)9cV2m^4q*)T?FKSuBh&h?eKOU\5!:`X@):rY/UT1qD,+h$gA5
%65&!1/1m`P18][US0PrB=b9j0hnFl$@;S6J&i<_&61"la7oLg-Xe/*%i=fdRj:u@"p]+o)iiG!'LgggJWec*>3s-4j(GVO1G&ClX
%kt)=jR*']_[hN@BD"oDNM_(XWX),#%3=$Z<BB$R9&Zrb.q</N*$Kje7/ESu&3?h#ehtI0>6F@5'RN>VKn2X4aK;]4gL9<+="P%*u
%(,$jC5J<,thD)X9kJU(+cqQ9L2KYSL>DWa=m#&U"l"'40G&tW%N5*&bLD<MZ.2IUHlo(ZoOR?$iSX9m/60u]"iA$5*KrhkD3+s`o
%[`_V*TL];9gV[n73V@$]Lk/s-@[nnh-e-"(?\p!ZZ*o:A:K,i6LmeUoC2#.!>CmciSlB@OX)^WGfXk![JMV+T"$lf^%WE@Bd3T%e
%)QPAi*[KZ83Hf>k:<AN,XQi*mUsm&#FU++VqYMbO+$f*7HOgBD_$d4RZ<:Ehh]RKNP2'Js=K%_s3sRZ8<C^GS&B>ID_s603'4Pr\
%#;ft$bE8"EkL"C@&p<\[!PJ[#[SXs&s()!@Y7&EEnRo<*,?arI34C_NR%7&^8*uLW7i4,S<a@O6WL3CE4*6??'])3b*=&^+Bt+-9
%,p'e;56>]%DmZL9Q8Y!F5Jq7r#0;9e,LO6!G'$oP:qE"$/E_.C:7d/+/W9]>MdW9-R+.^"1DjSmX'lBl4%"dfPU%T9T:p\DBo9)^
%9mIV%VZnSJ5oM'aH/%r(Y]hQnYd3#W(:O?>p4Q.SW*)r`omui0*`sZ=DVtBWU!R2G6IKijmL7L?&nO\.NacKdZe`FKSh1%1jsL33
%28i#[r\VjXd<n:_1/$c(1s$=s?Uta%@W>c,_:bke.Sn)73N7a(Dj'4&KS>6m=(^)ZNfF[cS&LDimtX&@-=EqkeT&DSanCK^/5jVQ
%b_@eb(?N=Va<T=_:urJSLsMjpQ/BaXeua=?k7'U+iZ"e_hNHWnQM>'-PAO1SEKh(Lrhl"YJX*l?M%"2s6*tb&4DOT@i2Fs&Vj0r"
%GZKSsI&_j7*&KWK"CH!BQp,+-eq)I[),VpZ^F)GQWdSTW`$1\pg`"i#mFPgOQ:Y+LdtFcQ_28`!^JMit_eU6CMM#-KUoYk;JVK?2
%eA=kL(4pYK8_Ps)A'W&F`!(`O3ZPf_?ie($@YqbH='K^XRhc"_*QdYQUT[&abie3>aj^&!_CfYI@rS3&"A+.^(m=[1e_o)42^PZY
%kaq0-S]8u`N,C7I/l3mX-hS4?/X(JrF:sE6Dl%HkC_q_a0X"tBl(H_CSO"f^I(&HYgu$^/<5*L]%g:um9Z)S))^]KjHo*_$jN4rA
%/B_GM*g/;go8.Nu-]ebTJ`PSp/0gT388d'eo[V0""pA'9LFA/eU:;Y*`#SmimY]Mh!%W[1oR&V5i@g=b-=@5uZ2(5'gaf?RH1Yk6
%,XW215EKFW3lApAQ$V36d`IW)70UZM_'dqXjH65HMVn[a9Sn-lq;(@cEYpj.,cbZIV@ArRW^\CbJZ0\GjW?i*i/*=4.&0r);R.L5
%eCA%tfo2pDOVTcs82&dJ/d.,e8<[df^t;X!&#.IM-qot_WOr^4Fa>MYn5/GF7m3O5dldk1g/nMDJLcgr-TXDZ)Dc`9'^9'`&#dth
%iIq\$%iN\+S)(ZmK<&,7#?7s)=9o=`;$!fGp0$<Ol+Ee$;[kZWfLo(TM0NngPiE+i3eeL1oD:;*k/4JF:m[P/i$K.KIe]r`D5Tor
%qZp&H`7j"5M%7(">_KXe,LN7lKbKRGcL<pGBF(;HDbHAn'=!U6akQ:2L^@f(NbpVd!ocSV0C\K(I:!0H*ijtcI3j]O9)'V?=#)A\
%/Q/:QBR_TK(Nh6JUZQR`8A)"m#0DNT[,FbN+Oi!(Ujjgjoq=Kbn5M4DK+hYDJLN#L8mc?RLGIVW1Fj^;:.*M$_G%e97!)>k8iU?k
%rRqlr>cohX0mk`T=jag4#g[U)A@<-0qJ)'2j?mmeUb&A.%OQU!8KJb9$qmIZPfC$L76Tlb9]eC+H8"Oh]G\>WLkcfVPlgQJ.VHf&
%Oe0`=aMa7m5/Z.#1dIKhMAA%c25J,TMjZVUL'j!6"aMJDR-jtnNImjQ!X=RMB]$NGLBVA_,h#9R"1QsT/P%shP+GjNC=LWZR>Zr^
%(mO,hl?s0=&"qR:1DI5[ROkKOOb2_-$riu*B!;C/@,RpqDnr@_-l=a2M)#gK4HI.9g!S=70Kf-H63R0OY2,As+l0uM&@`7,UBK\/
%$h"R'[?P2=e9&a%U<2suJ,sVDl'4eOf+Ti5=*3L8e]qk[a.Ie'W!OfE_09L!4_n;mJTI6'X<XPDLj\3(-NRg8rQjC;_KW9CaKCOq
%*s+<f6)078(9rif8d;<]_HFS5Z]YE;akQ-2+AAA;*d`2.AjaZL-'+nD`^=L?SOGK!MY$>i;EX#@`>#a.3'2rDa-<b5,SGYRI#R"u
%]j)"`R+*7Sm,VBF@N[<i3NY!H4a[O`'"6KJ["J)*9Rd$sWn(B"GV32V+=:jc"6(C$@gcc,q)(c'Uk@uWlg,.8QrA,"H?T+#K9m$R
%Ni,d@<FVr55g%%RAK!?1]h%go7e+u-UZjN:<GnbV"(i<(<ZSH8`V18^`T67'<#:$Bpj7\cU?$\eO+LV5")8V1/#qB3PlGn'AVNQ7
%H2FIql`!jk]=c^!N&kSEa9CZg3'fG!ZURW"WMZAXK#8O/G]4g=IelB+$!SS9-^tL_cmDL7jU:IRXCbK>P[YIi,.XpP[8;0c1<RLj
%Z`'3jU2#e``N9ELfE[^oUc21&P`ers3[3-#Bnu<`&<DEX^t5p?Ff.E%?j?gmoNNqSQ-ObeWUj*O1u2[_;5iL:TB3^^9?naV;m'i_
%kScY_:W[mn"W0[sci)LLm#F9\7*^LCdYbDtQjK`dT4pVqGIY!f"%Z\,V'8o\VKUh@Nard%iJIjhlc`IgU?j-C=>4rfm@tD8n=ZNp
%UGQ`RX#tZ5csGW7V7W8Xft&3qqK>!3lQ.'7$RjsZlT.fp;8_*UICG<t8Er6d7mRE.Lr:"*6`EJrC"srN=+D"<1_srsh9-ug0aXFB
%4kf_IH`Dn#c]BN[;q.=q\?fY7-9Eup6RbS?r25R-.BepCE^+=S8sMgKKfZL#<UQ?<_j\M6gDn!TqOh,ZV6Pk3,Ne,5g(B5nC0/@o
%WSs[hKp=/4J.6N:7'MW>.V#,peIB`40GN1nYDmlD$.OnKSX:mX!H>EV25DhHH)LRH(i$6nHgM5&N@8*=,q9JTd)#'q4[LtDHbgMh
%\UfUX<DldRHG,U_E+ggs1iZ^fhB)&!\*r"$d!DFoTM7%e6e8$3"l1i9+sn%<Y!r$Eluh5#'Rn!(B(P9_P0/'VaNY21i2nWe8UK+3
%He=1!iD07!\9")BU,O%RCm]8X''eO_'CAVUo1V(tUV@MilXWgi0q#jNO!9q.&iXp;-mct)`=fqA38ZNrKJ?*\L5l$b0q+ZZON0\o
%caK/Lb9*]R6g%$9eL>0(:B[UV(YJA-S6\]&;H9GLU*trTG]Se,Ybl^.kAKO2OV(<A5lignP$K2`[/B(:*Ej7/n+G;Fa1BWE4kmEV
%d/Qo2M)hi#fp=i97N_a52L6oR/38u85s8hV16r\`MSq^#epH"*TOe\NhG]VZSbWE!2'Hrs]DKV&(Hit`M"<[''dcbOjCW.l,CGNS
%`Y,!<=luFCN+H,e/2Cb[CgG"eK\gZ9W$R1A<[fT%%65W<>Ll)lKsOmDH/ODS$J.@'csd>&aEbH/_/]+fC8%R`E$:<X)6^pharW7i
%mQjjQ<GOMK/rI!TEPA*9Bb*.h>Un:$6C^B'*qo]Fe5_r"diIifT>A"51=eO"P7LWQ4m>KU,5&bbe=/6;3#>XX_V;L`A"jop'uom#
%r"1pmEP1PdF2VB$>4^>hbapQEc;`P+5S4%U,ZQ_<brAGl\J>[>\HX\Rc8E4=43/:,;'[`p/-L2u@3,S5?PZTYHl1;A+H^KB3q#i%
%_jn6<VDpj73L>+A1Z1<F&=1V1R-ItL(E)X,N7]c+QRX/FN-o:b\mj2AORaI,KjG>mA&\:Z!b_T7N3!-Jb#fBj=n'Hp7/(B:e.Z-`
%=%$jpOHqP&k%hof-#"_S@p_h)r^"X5/+"#S[chLqYoj-8-f^kbZ#@n::Zr+Qml-_->Y6-s^4hEOC!)o\bbWt*0QYNFE_V[*V;<]I
%V52i$nW?$T9]9VR5M<InG6VU>6klD@ae7rjh$'Pu1L6`Vkq6"NS!5i0_$eI;+WP.l?Ii?R[L<mJ-D@li_:BI7K)N^]BOsq$BYaAu
%8)IZu$P*^T?K4W.,PgfQZa]th6J3rT^#r4X"q]ea&>5gLO/+QlF\5"?^.!d-?(ErtUcX%PL]Gsb(fh@dc/96:PR3a^Ca@Sr'GFLk
%.eUWLBQDp;7MKdW87*e+rBAoW=J`s]#2;"'fi99`G"-Y.@%kqr6"naW%2B^/'Yp.GDdOWNNE.>r'J^ka)Qj740b!UaU<C+"c5pDA
%>T7Yk.^VW)dO-]$3t)HPDBE.,T,H>#?=P?=h)Pq6'tk2+,OBnJpo'GHH1nda&dmkKp.d$SZh]&VYZ.U/KG!(Q[A&`M=QKW^ne=`T
%DhO3j2ItU)n_TIW$V;MR#"!gL>/W2[D$IhEqV`2K&]<<5NT?]R/<7,#fMN6h(r7l*_.>7N1gDe4a:)Nu!K37\1qM;c^6l^#[Go8V
%6tu=70ahMVN<gFK\B(I5@=[1>L2NW5(,^":!6K]3RBEef`$DAMJos!W,eYa2j927(IX3t$O".h\@+\#k3Y3h+K#O;s^.AS1=A74:
%M$t@%Qq)U^@qB@Q\BjJ<AO]E`MOA]`L0Ok>UQh&+0OD]\%75I)81iOj8IL?*DZF3a0'PYsO`pIW%,<OU_nZf&^haTV*hiWDL,=1+
%/)%R2J4B#*WWu0W#o;9e*RpT4,S7><5GAet,RsCh^2Y;.b<MmiE!1iO;*A[E+g6XR=)k%<,HKHQd,I=h")^?JhDg=JMMHqO0!8$5
%IPkS3UXsq=VDV9B.EbipA]\B`fajC:.\]=Y'C\T:<$[V,1NKHGQei+(SO.qQObj?JS4^,c7sNQi9Xm8Z]8KR#4(4'1!k$W+(,Z\8
%P5&$m>u=u_CFihV@4_kf"0-N9r'=5&qEOs[n#kmRFmlL(J[+/_$Ft)b\DcGF_Sne?-TMbo$2h_'og[<@l94TcY^k%$`<D'Z)bFrk
%iR0)W?FltuXCPIrUi8a07V%qZM,b[rJ>jdji,6uZ.K3raB^U]rkT]V!C@4ojSoq1qZ$Z$K[TR]VPX0YRMj&kVl\Z\hHm@)M62<A"
%\6$5OMVgt#;`D]g2`U@^JCWIJ2ksqPGSs.[L`!>sf<GnSI#3.q1[J!'kY(f6gtXTokN#RMJZ7G(PdaIA9L6=eWRE[<c=aU&oE1RY
%$iA@$.aMta[pe0l_7gFs[\id6jZfEkqMdP%]Dn[p3!1Lo%g)dCrb%I#B!(YjV8AP)2aU0McZ\[O]QQe,p?G^\-XsScci#CST+X?h
%8cK#3C2``Q1L6EM\_Bq^BV%!5#gb4^)*F1*>Kf4kl&gQI()@C`We7qI77d)7\/7Q"KDg^g;GG%&TmeW1HWJfup!U4.k];a?"]LbF
%m3?c.a>afH<W_c]4bFO&dQrkSY&#JdG^gihJ9Yc<lnEP;W041X8T0h<,PEY,]tcNTJj6RqZp_5(f'9hh!dJgj=q4jL:1NNpdI>%2
%KfD;+G)blZ5ZF2,FbY++313XW!8[A?c?,>`EYeB#k#-`)0e'n[!-V'rK4@`]9t\#0$YPpI?=hf&E+'JSR]:7"@J7NU@%-sSkY9qR
%2taCK+Iuu,GhWgj]M^6FjR*RX_lAqF+%.:p"0)I@HQk1h"`u$.7^:C@R#2*U=&u7;_'Oj\gl*Eh-?Mk6R\^!Zp*`tLJJdY9/!NMX
%!00EbL*3P.3KZ!qhj\%^ODcPUQ+lF-ip==R/615N68OkZ4XfX(0j%C\,HhHF:e.,VTH`Dt*I&cF,8?_19$`5Ap7s(s:6>X<.`%-M
%rH5L;]kLiXScc3IQoJ&;#S]tgOpIEWM8hSP(^b#Z"c*J"j(IOhO=OH,0O84HTn%l6I.B9H2#lnXF^OpCl^9BIho&u[p$DB(4KL<-
%:9cRdiQe]0-SoUI^;iO:?>0p4'2pXrVMO&(XSBb]Q7XB_>.me^-HsPk>kX/<OG5.,b!Zs\_8_ca-2D=Uj.^ei2mh+dAm>lB!'2AS
%2CF*aUprro3aH=3QAU_H[Q5B9m)44@:@cMs#4\194_perA01sJN2Rd,3)d!Qi;7W=:e+8VjrKn2`)[/h([`BPI4/RE]^kiLNAE[D
%<<<GP.YuZhE]WG*5n<0[>pu(=b;HDrWhl:&;pX.9pnq^\%9/gmNf3PBM?cV0@BMEZE?eJ<_5OHLqpbQn;5)jY\'`ss\*iX7OjGQ.
%6oRLpg:AC>kLk&Y,Xhi(bn\nkB'ES;TrqH[7F2`ohIB%`TWH;0cN,81=^\K)Yg"B3.!Fk]bc0A&K9J36G-":QdB5BZLJIBp'&0DR
%_]\ZQ;cU]9Snq*VgD2O?O:%mC;H]r[cnS%"O4cdMPfsdI$lP.$mkN.h>fAJ6W"c6e&]h:a.Y.s7.A^!p6=fABdUBka)J7Js\f`=-
%FNC/g`IjgG;Xjog9c.&e[#EOkD[`G1Q7KHm#^"4W(%F]A%Wi2]nf$]^_8qdko%:8t!ieEp-o)I]Rd]+KZsp[lDsCa:PY\P>\KT<S
%<9NgQS\*55goinAM%3CK;7\PpQk5F7=@$u%/#Z.+U<nI*6Ns:HJf/gC<Mg^#[98fJ09_,BGi0hV]8SL$_&b=5_J9UAn.N-'-sRG1
%*pffh4h3,enLuqpBV#hTG5=L-P]`h*kQ1S(+S`kHD\A%$B2I#4!@S\n65l@+-PUX8Y5*'/o>s_:Lf,o&'*A:B4*gfV'^95OmDoZc
%%:p"5AlWLJ7G2rs:'kXN.709+4)DO@[@i;OWHg"TD34[*QcJl-(PpNYg`ZRn`W\+bSPJL7d>eVHbOh+'"]Oi9h'H=MP>V4']I$QO
%;d%\u6qJPXWnp#NO\t2^!uf^5m4n835Y6sXAN=a`4.AZoUr@YG_K90V?1kJbd_U5Q9GaEcLkk18B1*\0gaIqPjp9AWX.#)`<6<bY
%F%43;$5lI['<+\1(1[%fs6Rr#YY?S?=F+)_b0SeoT12V71ZG"Q/mCn>DmKW3B=A]M5U=th<Z;\LkQNL1]eC`fhI43"f9h19&\[+c
%)u>fA'0Z!p&oM3"(YXP(@(B<@#/tXJKERI-6=;p7l=I()(HJN''W_!EIAZ[*UV<IYJCY\n"<978L3O\B2Pr:iXUWgtrIMC"/0sq/
%$L3l:1JWsYGX6b:V.d$tVL[2`D-'7n[uRB!U$$s8CX]()6<Zr9]EUB,S9,D<Rc]jsL\?5-eR0-rCLRWN[?sb#\YT4U\(:Aje86]W
%D<UKL'p#/M9e1N6)At\4LoR*^<CA<Qqht^cV&j$<2%0!n[*9HfWWp)J6IEuZ5&!jHD)$'s3IG!E/)*PHYM6!>JCUumZ,$coYubKd
%XBab@.e7=b__9.c>0bt]DgCaAGQtaCWl5R(1rSsJl3/K`aG!!K*Nrn)[)Xh=O04ol$o$4&HU=0"8*Ud`fSXq2h@OPsetp7lVbYgF
%Y,"Vm?I;"s*7Bu3@[U;5qWNr^4q&1K<m]MriR8K_b.SL28<MZ:.d1.9o3lNQrahr3%r%q30;V?0Q2</tkS*-M-(X_0lVfgM;ctCe
%PiaNcq,a4oi=3\85UWCj,s32#m%ZEh5i9u+'.?5u-_]O7Z6bc;-KU9<QFBh-QK"T@M9HZUKNbsRF7R7^(&<KT?=nuWYj*L%nq[ea
%%._>m"@65op_HC5>tO19kUJ7F!Pqa*UgmE(<g#t\`K*_S$C0%"!01"o#9s"qO5(C1Y`7liq[$o,)`<&u%[*;^B<K`JYfa&`>CW^V
%/]fJFdjiBg]9o:TP3jW75V!q^rH^Z=@uV!%ku0/'C^L6u#'I$//c'<O8j&YZm4oNc8%f.aPt2QO)amf^]Gcj%iXU@5JT!>en1kb@
%$A'#lJ4.(L</mI]h"0I3F;]lh=r+aWBY`9pL,KeJ-D.GZaIa\T4VfN5]PJF^)PeDK?YC@?[ZTDXWOcpUEZTjP.PVgO@Lj0/V!DNQ
%kOc&9U,mR1f:5,QRWD8<rLkjmRrD``@RUiAlfHn2('6[PLon=XLguiVTKt/-X(t;moo_MMCRkt=``&s`D8<X^j3^p)TL_M4A<ohC
%a9X0#&Hn(?R1o?rF(f6O@Tin*8;rbu/k$.QpMcna@+Ap.]MY&,3B9eZBa+sR`c,ZWq(XOtH@YrA\/8^+Wgm/g(I\A@0ajccbbg7Y
%4'Qkn/J^LuBsS<[<%>-,)+`h@PVq^s19t;:,f*OE'.o+/E*IFGf/3[6&H?J[,Jt6]&n+EJ.kaC^XTP:s:u<[&aMBngEO^u(p!"6=
%HW&V1bBtEdSmnsC"3(ce58>mO!1',u^q_TkoN=:]5t'oBZanSuW:?i#@JV+l%+)o']MP*5O,k"#[.@1GQ&1q0F>pQ/YQ9rh'^6q.
%F"C(Sn$=Uh==g;$,N=gZ2&!#/"e(hjf0_f]Ko>5QV7F*"J!R86V3Q^^8r=po?9*B,:Q1IQ']hQ*:tt7$L4("n%(a?<NS[tRb72rX
%:p3NJ@#`L<%\XCRS61Z"V2EQ08;f\3bp?Y(oZ_MB$khkT<]W01g`Z.95iRQ"H0[rS48'#"QK2u@e)%B>p.VGP^/?2e\130B==*bZ
%4S[,&_=6ecopf;<:psAHBa%Oj^^Dn(81kRW:7*SgD\!1."N)s?kIXjg>lq:>IC/B%=hZ@/U8:+03Ck_<;I#'A.8Id=Y.5.Qa/+Am
%]sWp'!R\C_hm]fY0]l%l`<,@[O2kO:bj%#M$#?L%fC`5i7SP0<rSsEE+!#"dYc"."_Gf,FTK`1m<@^J_3&0V[+Mo<</N:8[/dq(f
%&fA:>R4S!=oh6_!A"/o,_[uPN_`!K0WT$E_S5IP+-<R+aiZBP_7o]R%mdJH(#upCB!CdB+hmgD3kNTX+d0E-\Vc`KDT%#!gHK@3W
%OI/4Bh:tK-AS/6'DkMM8QU-tB4,aW?G959`GtM&i/Eu^qQ"Q+fNR9!uPnAM<6%TX2rS'-N?C>*<'!d<pbN3CQiN>"lUj;0c^I5>j
%LTY8QXS00MjrMi(b'I6ZQ6q5?F?ud\*ArH^(_Qu<;f>t#UH>XT^dn&3CJ`c\HE;6+[\Q`O$Xuo(S(8Cj"rGmOKC:h8%''^Z9s?aS
%3u2Ua9s4D_dD6mWCD&K^G;noQ!qnnWK\6t&2JIFJjKT]U;+V2@]DjJ)^m2LM)Lj@RK<khn.QVd?#Npg5"EX*cPAt;3I_\cIH_Ei>
%8,O"keKmDjj0B2B8D>Ro7CJ!D(b,W)Wsmc^A`/2Br-`;G^S@:Ja0+Cu&r_IW[AanqEcPLDg8f^<Os!7SMd<dGMmYP4pKQsUGNZGY
%rG$g+XES%,8^:uBo'$tD[^Z/0U8H_5SaYf/A>VSH=mp>RO+!LEr/9D!pTIqEG:n*O7t5d]fq0>SG/&=mjn"D:cRpk(3;UfOIeTnh
%+9->iqs,%O^:\^h%pM!-frr_ND308@gZRJ^G(4f:C:AQfipY3#^O-(=mrg^E04-m"m@Je*e^KG3Bt'#`Y?lU!d'e8jh5cmG^O>md
%k?kF;jcD(eer,TajcIAgTuFU%mqaR?lMCI5s3fNurPr7ApXe#G>%,p9m=K[u6U/+4I!12?!VlTg0C9RJrMKSenV]%bJ,9,_l\?#<
%^s@N1oW*m7]ma],gZtL1a&eU's*et]oYl`Th\oV0Z<s/Np%m[r_V:!TbPuk`&!$.RWu(^3kE#Z?^OGkurs,U=$JP~>
%AI9_PrivateDataEnd
